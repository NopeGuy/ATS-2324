/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 14 17:49:13 GMT 2024
 */

package poligono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import poligono.Ponto;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ponto_ESTest extends Ponto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = ponto0.clone();
      ponto1.setY((-2811.003088121853));
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals((-2811.003088121853), ponto1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ponto ponto0 = new Ponto(0.0, 0.0);
      Ponto ponto1 = new Ponto(ponto0);
      ponto1.decCoord((-1.0), (-1.0));
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals(1.0, ponto1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1014.2), (-1014.2));
      boolean boolean0 = ponto0.coordPos();
      assertEquals((-1014.2), ponto0.getX(), 0.01);
      assertEquals((-1014.2), ponto0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ponto ponto0 = new Ponto(0.0, 2441.78);
      boolean boolean0 = ponto0.simetrico();
      assertFalse(boolean0);
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertEquals(2441.78, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = new Ponto(ponto0);
      Ponto ponto2 = ponto1.somaPonto(2.0, 2.0);
      ponto0.somaPonto(ponto2);
      assertEquals(2.0, ponto1.getY(), 0.01);
      assertTrue(ponto0.equals((Object)ponto1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1.0), (-1638.63));
      ponto0.decCoord((-1638.63), (-1.0));
      boolean boolean0 = ponto0.coordPos();
      assertEquals((-1637.63), ponto0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1.0), (-1638.63));
      ponto0.incCoord((-1.0), 0.0);
      assertEquals((-2.0), ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.somaPonto((-1986.28305011), (-1986.28305011));
      assertEquals((-1986.28305011), ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.somaPonto(0.0, 3086.7);
      assertEquals(3086.7, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ponto ponto0 = new Ponto(0.0, 2441.78);
      double double0 = ponto0.getY();
      assertEquals(2441.78, double0, 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ponto ponto0 = new Ponto(2.0, (-3096.69208));
      double double0 = ponto0.getY();
      assertEquals(2.0, ponto0.getX(), 0.01);
      assertEquals((-3096.69208), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      double double0 = ponto0.getX();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1108.51788625), (-1108.51788625));
      double double0 = ponto0.getX();
      assertEquals((-1108.51788625), double0, 0.01);
      assertEquals((-1108.51788625), ponto0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ponto ponto0 = new Ponto((-3305.29877555), (-3305.29877555));
      Ponto ponto1 = new Ponto();
      double double0 = ponto0.distancia(ponto1);
      assertEquals(4674.398356077994, double0, 0.01);
      assertEquals(0.0, ponto1.getX(), 0.01);
      assertEquals(0.0, ponto1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ponto ponto0 = new Ponto((-1.0), (-1638.63));
      Ponto ponto1 = ponto0.clone();
      assertEquals((-1.0), ponto1.getX(), 0.01);
      assertEquals((-1.0), ponto0.getX(), 0.01);
      assertEquals((-1638.63), ponto0.getY(), 0.01);
      assertEquals((-1638.63), ponto1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      // Undeclared exception!
      try { 
        ponto0.somaPonto((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("poligono.Ponto", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      // Undeclared exception!
      try { 
        ponto0.distancia((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("poligono.Ponto", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      double double0 = ponto0.getY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ponto ponto0 = new Ponto(987.7916566281, 415.9500695782338);
      double double0 = ponto0.getX();
      assertEquals(415.9500695782338, ponto0.getY(), 0.01);
      assertEquals(987.7916566281, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = ponto0.clone();
      ponto1.setY(2096.1655671897);
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals(2096.1655671897, ponto1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = new Ponto(ponto0);
      ponto0.decCoord((-343.623718), (-343.623718));
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals(343.623718, ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = ponto0.somaPonto((-1683.5241080132273), 0.0);
      boolean boolean0 = ponto0.equals(ponto1);
      assertEquals((-1683.5241080132273), ponto0.getX(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.equals((Object) null);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.equals(ponto0);
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.equals("x : 0.0 y: 0.0");
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.setX(848.927);
      boolean boolean0 = ponto0.coordPos();
      assertEquals(848.927, ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.coordPos();
      assertEquals(0.0, ponto0.getX(), 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      boolean boolean0 = ponto0.simetrico();
      assertTrue(boolean0);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      Ponto ponto1 = ponto0.somaPonto((-1683.5241080132273), 0.0);
      boolean boolean0 = ponto1.simetrico();
      assertEquals((-1683.5241080132273), ponto0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      double double0 = ponto0.distancia(ponto0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, ponto0.getY(), 0.01);
      assertEquals(0.0, ponto0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Ponto ponto0 = new Ponto(2.0, 2.0);
      Ponto ponto1 = ponto0.clone();
      assertTrue(ponto1.coordPos());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      String string0 = ponto0.toString();
      assertEquals("x : 0.0 y: 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Ponto ponto0 = new Ponto();
      ponto0.incCoord(1392.999451041, 1392.999451041);
      boolean boolean0 = ponto0.coordPos();
      assertEquals(1392.999451041, ponto0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ponto ponto0 = null;
      try {
        ponto0 = new Ponto((Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("poligono.Ponto", e);
      }
  }
}
