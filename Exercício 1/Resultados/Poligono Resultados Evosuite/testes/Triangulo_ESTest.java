/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 14 17:50:45 GMT 2024
 */

package poligono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import poligono.Ponto;
import poligono.Triangulo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Triangulo_ESTest extends Triangulo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Ponto ponto0 = new Ponto((-235.76578207434804), (-235.76578207434804));
      Ponto ponto1 = new Ponto(ponto0);
      Ponto ponto2 = new Ponto();
      ponto0.setX((-452.9));
      Triangulo triangulo0 = new Triangulo(ponto1, ponto0, ponto2);
      double double0 = triangulo0.areaTriangulo();
      assertEquals(1061.1491137469318, triangulo0.perimetro(), 0.01);
      assertEquals(25596.409352171624, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Triangulo triangulo0 = null;
      try {
        triangulo0 = new Triangulo((Ponto) null, (Ponto) null, (Ponto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("poligono.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Triangulo triangulo0 = new Triangulo();
      // Undeclared exception!
      try { 
        triangulo0.areaTriangulo();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Ponto ponto0 = new Ponto((-235.76578207434804), (-235.76578207434804));
      Triangulo triangulo0 = new Triangulo(ponto0, ponto0, ponto0);
      Triangulo triangulo1 = triangulo0.clone();
      assertFalse(triangulo1.equals((Object)triangulo0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Ponto ponto0 = new Ponto((-235.76578207434804), (-235.76578207434804));
      Triangulo triangulo0 = new Triangulo(ponto0, ponto0, ponto0);
      double double0 = triangulo0.areaTriangulo();
      assertEquals(0.0, double0, 0.01);
  }
}
