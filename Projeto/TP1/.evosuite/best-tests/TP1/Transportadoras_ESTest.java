/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 16:51:46 GMT 2024
 */

package TP1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import TP1.Transportadoras;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transportadoras_ESTest extends Transportadoras_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      Double double0 = new Double(350.09079494);
      transportadoras0.altera(double0, double0, 1005);
      Long long0 = new Long((-1307L));
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(1005, transportadoras0.getFormula());
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Y", (-1.0), (-1.0), true, (-2324.1861133188));
      Long long0 = new Long(5L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertTrue(transportadoras0.isPremium());
      assertEquals(-0.0, double0, 0.01);
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertEquals((-2324.1861133188), transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("\n", (-1804.432892619163), 1.0, true, 1.0);
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras1.setFormula(2129587950);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(2129587950, transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", (-1353.9183331562), (-702.34254), true, 0.0);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertEquals(0.0, transportadoras1.getVolFaturacao(), 0.01);
      
      transportadoras1.setVolFaturacao((-1353.9183331562));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras0.setLucro(2456.625317870501);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(2456.625317870501, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("/}/.69$", 1913.5213058, 0.0, false, 0.0);
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertEquals(1913.5213058, transportadoras1.getImposto(), 0.01);
      
      Double double0 = new Double(0.0);
      transportadoras1.altera(double0, double0, 1);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(boolean0);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(4082.52179386, double0, 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals((-1515.09173688), transportadoras0.getLucro(), 0.01);
      assertEquals((-1515.09173688), transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.addVolFaturacao((-1489.8));
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals((-1489.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, (-2366.847836495), (-3683.932363325288), true, 34.2);
      transportadoras0.getNome();
      assertEquals((-2366.847836495), transportadoras0.getImposto(), 0.01);
      assertEquals((-3683.932363325288), transportadoras0.getLucro(), 0.01);
      assertEquals(34.2, transportadoras0.getVolFaturacao(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("\n", 0.5, 0.5, true, 545.67524462347);
      transportadoras0.getNome();
      assertEquals(0.5, transportadoras0.getImposto(), 0.01);
      assertEquals(0.5, transportadoras0.getLucro(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(545.67524462347, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      double double0 = transportadoras0.getLucro();
      assertEquals(0.0, double0, 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      double double0 = transportadoras0.getLucro();
      assertEquals(0.1, double0, 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      
      transportadoras0.setImposto(0.0);
      double double0 = transportadoras0.getImposto();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      double double0 = transportadoras0.getImposto();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Y", (-1.0), (-1.0), true, (-2324.1861133188));
      assertEquals(1, transportadoras0.getFormula());
      
      transportadoras0.setFormula(0);
      int int0 = transportadoras0.getFormula();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula((-2065));
      int int0 = transportadoras0.getFormula();
      assertEquals((-2065), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertTrue(transportadoras1.equals((Object)transportadoras0));
      assertTrue(transportadoras1.isPremium());
      assertEquals((-1515.09173688), transportadoras0.getImposto(), 0.01);
      assertEquals((-1515.09173688), transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(4082.52179386, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, 0);
      transportadoras0.clone();
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras(">P5X#vmy1H1$]", (-1919.1742405), (-1919.1742405), false, (-1919.1742405));
      Double double0 = new Double((-1919.1742405));
      transportadoras0.altera(double0, double0, (-359));
      transportadoras0.clone();
      assertEquals((-359), transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", (-1415.0800944), (-1415.0800944), true, 1193.88029465);
      transportadoras0.setFormula(3);
      Long long0 = new Long(3);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(3, transportadoras0.getFormula());
      assertEquals((-43866.4829264), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 97.95203, 97.95203, false, 97.95203);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      // Undeclared exception!
      try { 
        transportadoras1.equals(transportadoras0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 705.9448856600467, (-1617.394), false, (-1617.394));
      // Undeclared exception!
      try { 
        transportadoras0.calculaPrecoExpedicao((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 325.5385286515277, 325.5385286515277, true, 0.0);
      Double double0 = new Double((-1.0));
      // Undeclared exception!
      try { 
        transportadoras0.altera(double0, (Double) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadoras transportadoras0 = null;
      try {
        transportadoras0 = new Transportadoras((Transportadoras) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      double double0 = transportadoras0.getLucro();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1515.09173688), double0, 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals((-1515.09173688), transportadoras0.getImposto(), 0.01);
      assertEquals(4082.52179386, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      int int0 = transportadoras0.getFormula();
      assertTrue(transportadoras0.isPremium());
      assertEquals(1, int0);
      assertEquals(4082.52179386, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-1515.09173688), transportadoras0.getImposto(), 0.01);
      assertEquals((-1515.09173688), transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals((-1515.09173688), transportadoras0.getLucro(), 0.01);
      assertEquals((-1515.09173688), transportadoras0.getImposto(), 0.01);
      assertTrue(boolean0);
      assertEquals(4082.52179386, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Imposto: ", (-1515.09173688), (-1515.09173688), true, 4082.52179386);
      double double0 = transportadoras0.getImposto();
      assertEquals(4082.52179386, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-1515.09173688), double0, 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals((-1515.09173688), transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.getNome();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras(">P5X#vmy1H1$]", (-1919.1742405), (-1919.1742405), true, (-1919.1742405));
      transportadoras0.setFormula(4);
      Long long0 = new Long(4);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(4, transportadoras0.getFormula());
      assertEquals(30.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(2);
      Long long0 = new Long(2);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2, transportadoras0.getFormula());
      assertEquals(15.015, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(1, transportadoras0.getFormula());
      
      Long long0 = new Long(0L);
      transportadoras0.setFormula(0);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(0, transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras(">P5X#vmy1H1$]", (-1919.1742405), (-1919.1742405), true, (-1919.1742405));
      Long long0 = new Long(4);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(9.93934667870323E7, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(9.93953859612728E7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(2144019953);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(5.8500000000000005, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(5.8500000000000005, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setFormula((-1789569694));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals((-1789569694), transportadoras0.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setVolFaturacao(2.9449467692729066);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(2.9449467692729066, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras1.isPremium());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras0.setLucro(853.0645840383378);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(853.0645840383378, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras("C", (-2249.6866716547697), (-2249.6866716547697), false, (-2249.6866716547697));
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
      assertEquals((-2249.6866716547697), transportadoras1.getLucro(), 0.01);
      assertEquals(1, transportadoras1.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras1.isPremium());
      assertFalse(transportadoras0.isPremium());
      assertEquals((-2249.6866716547697), transportadoras1.getVolFaturacao(), 0.01);
      assertEquals((-2249.6866716547697), transportadoras1.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(2);
      boolean boolean0 = transportadoras0.equals(long0);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertFalse(boolean0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals((Object) null);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 97.95203, 97.95203, false, 97.95203);
      boolean boolean0 = transportadoras0.equals(transportadoras0);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras0.isPremium());
      assertEquals(97.95203, transportadoras0.getImposto(), 0.01);
      assertEquals(97.95203, transportadoras0.getLucro(), 0.01);
      assertEquals(97.95203, transportadoras0.getVolFaturacao(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      String string0 = transportadoras0.toString();
      assertEquals("Nome: \nImposto: 0.3\nLucro: 0.1\nPremium: false\n# Formula: 1\n", string0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertFalse(transportadoras0.isPremium());
      
      transportadoras0.setPremium(true);
      assertTrue(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Double double0 = new Double((-1909.8544764570952));
      transportadoras0.altera(double0, double0, 2144019953);
      Transportadoras transportadoras1 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(2144019953, transportadoras0.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 705.9448856600467, (-1617.394), false, (-1617.394));
      transportadoras0.setNome("");
      assertFalse(transportadoras0.isPremium());
      assertEquals((-1617.394), transportadoras0.getLucro(), 0.01);
      assertEquals((-1617.394), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(705.9448856600467, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras1.setPremium(true);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertTrue(transportadoras1.isPremium());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.9, 0.9, true, 0.9);
      Long long0 = new Long(1L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(16.29, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(15.389999999999999, double0, 0.01);
  }
}
