/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 16:58:45 GMT 2024
 */

package TP1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import TP1.Apresentacao;
import TP1.Input;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("}~/(p,x9$]{S@+l];7");
      int int0 = input0.lerInt(apresentacao0, "", (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("S");
      Apresentacao apresentacao0 = new Apresentacao();
      String string0 = input0.lerString(apresentacao0, "S");
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      String string0 = input0.lerString(apresentacao0, "3_}");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      int int0 = input0.lerInt(apresentacao0, "An2{<6]", (-12437164), 231);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      float float0 = input0.lerFloat(apresentacao0, "7", Float.NaN, 2163.971F);
      assertEquals(7.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("5");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      double double0 = input0.lerDouble(apresentacao0, "TP1.Input", 5, 50);
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerString((Apresentacao) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerSN((Apresentacao) null, "+!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt((Apresentacao) null, "", 0, (-1756));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerFloat((Apresentacao) null, "Y", (-368.1707F), (-387.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerDouble((Apresentacao) null, (String) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("TP!.%IEWLOGI");
      input0.lerDouble(apresentacao0, "kAt|a0kJ[fnB_&[himi", (-1), (-1));
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, "TP!.%IEWLOGI");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerData((Apresentacao) null, "         /   _| |_| |  |  | |/ ____  |__| | |____   ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemInUtil.addInputLine("49b4ibUAs7_czzO| m");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, "N");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("TP1.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      Apresentacao apresentacao0 = new Apresentacao();
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerFloat(apresentacao0, "7", (-3.09582F), (-3.09582F));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("=;xjS(G");
      float float0 = input0.lerFloat(apresentacao0, "=;xjS(G", (-32.275597F), (-32.275597F));
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerFloat(apresentacao0, "7", 1405.4918F, 1405.4918F);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemInUtil.addInputLine("Data inv\u00E1lida");
      Apresentacao apresentacao0 = new Apresentacao();
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "Data inv\u00E1lida", (-866), (-866));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("cbQ!&F+ .i");
      Apresentacao apresentacao0 = new Apresentacao();
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "cbQ!&F+ .i", 510, 510);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("E76,t;K|N-Un");
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, "E76,t;K|N-Un", (-2028469157), (-2028469157));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("76,t;K|N-Un");
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, "76,t;K|N-Un", 5, 5);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("N");
      Input input0 = new Input();
      boolean boolean0 = input0.lerSN(apresentacao0, "N");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SystemInUtil.addInputLine("T");
      Apresentacao apresentacao0 = new Apresentacao();
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerSN(apresentacao0, "%[T");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("S");
      Apresentacao apresentacao0 = new Apresentacao();
      boolean boolean0 = input0.lerSN(apresentacao0, "S");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerString(apresentacao0, "<m!4PWH/)=[XY*GeQ");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
