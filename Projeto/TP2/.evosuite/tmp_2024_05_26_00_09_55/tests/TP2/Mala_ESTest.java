/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:36:47 GMT 2024
 */

package TP2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import TP2.Artigo;
import TP2.Mala;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.Chronology;
import java.time.chrono.IsoChronology;
import java.time.chrono.JapaneseChronology;
import java.time.temporal.ChronoField;
import java.time.temporal.UnsupportedTemporalTypeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mala_ESTest extends Mala_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala0);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setDimensao(37);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals(37, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.equals(mala1);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals(37, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean1 == boolean0);
      
      String string0 = mala0.toString();
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.01);
      assertNotNull(double0);
      assertEquals(0.01, (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0L);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      
      Mala mala0 = new Mala("7", " Ano da Cole\u00E7\u00E3o: ", double0, true, 42, 42, long0, long1, 5, (String) null, 5, false, 0.0F);
      assertTrue(mala0.getNovo());
      assertEquals(42, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertEquals("7", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.01, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(42, mala0.getN_utilizadores());
      assertEquals(5, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(" Ano da Cole\u00E7\u00E3o: ", mala0.getMarca());
      assertEquals(5, mala0.getAno_colecao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      LocalDate localDate0 = MockLocalDate.of(13, 5, 10);
      assertNotNull(localDate0);
      
      double double1 = mala0.preco_atual(localDate0);
      assertTrue(mala0.getNovo());
      assertEquals(42, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertEquals("7", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.01, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(42, mala0.getN_utilizadores());
      assertEquals(5, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(" Ano da Cole\u00E7\u00E3o: ", mala0.getMarca());
      assertEquals(5, mala0.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala0.setAno_colecao(584);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(584, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean0 = mala0.equals(mala1);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(584, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setTransportadora(2L);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("A", mala0.getCodigo());
      assertEquals(584, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      Period period0 = Period.ofDays(584);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      // Undeclared exception!
      try { 
        ZoneOffset.ofHoursMinutesSeconds(584, 584, 584);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value 584 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      boolean boolean0 = Double.isFinite((-1.0));
      assertTrue(boolean0);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double1 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double1, 0.01);
      
      int int0 = Long.compareUnsigned(0, 0L);
      assertEquals(0, int0);
      
      long long1 = Long.max(0L, 3524L);
      assertEquals(3524L, long1);
      
      Mala mala0 = new Mala("", "", double0, true, 3000, 0, long0, long0, 0, "", 3000, true, 1.0F);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = mala0.clone();
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setMaterial("!");
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores((-3991));
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Month month0 = Month.JUNE;
      LocalDate localDate0 = MockLocalDate.of(23, month0, 23);
      assertNotNull(localDate0);
      
      mala0.setData_venda(localDate0);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setValorizacao(0.0F);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.isPremium();
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean1 == boolean0);
      
      mala1.setPreco_base(3578.2230838888);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      float float0 = mala0.getValorizacao();
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean2 = mala1.isPremium();
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean3 = mala0.equals(mala1);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("!", mala1.getMaterial());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean3);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Artigo.setContador((-832L));
      LocalDate localDate1 = mala0.getData_venda();
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-832L), mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertSame(localDate1, localDate0);
      assertNotSame(mala0, mala1);
      assertNotNull(localDate1);
      assertEquals((-832L), Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      double double2 = mala0.preco_atual(localDate1);
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-832L), mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertSame(localDate1, localDate0);
      assertNotSame(mala0, mala1);
      assertEquals((-832L), Artigo.contador);
      assertEquals(0.01, double2, 0.01);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertNotEquals(double2, double1, 0.01);
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setAno_colecao(584);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(584, mala1.getAno_colecao());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(584, mala1.getAno_colecao());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setTransportadora(2L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getIdTransportadora());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      Period period0 = Period.ofDays(584);
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      // Undeclared exception!
      try { 
        ZoneOffset.of("A");
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid ID for ZoneOffset, invalid format: A
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      String string0 = "ELAEf)b@/{yS";
      Double double0 = new Double((-271.44506453));
      assertNotNull(double0);
      assertEquals((-271.44506453), (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Mala mala0 = new Mala("ELAEf)b@/{yS", "ELAEf)b@/{yS", double0, true, 3021, 3021, long0, long0, (-3780), "", (-3780), true, 0.0F);
      assertEquals((-3780), mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3021, mala0.getN_utilizadores());
      assertEquals("ELAEf)b@/{yS", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals((-3780), mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals("ELAEf)b@/{yS", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3021, mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals((-271.44506453), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      double double1 = Double.sum((-1.0), (-1128.1396481011));
      assertEquals((-1129.1396481011), double1, 0.01);
      
      boolean boolean0 = mala0.equals("ELAEf)b@/{yS");
      assertEquals((-3780), mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3021, mala0.getN_utilizadores());
      assertEquals("ELAEf)b@/{yS", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals((-3780), mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals("ELAEf)b@/{yS", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3021, mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals((-271.44506453), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertNotEquals((double)double0, (double)double1, 0.01);
      
      Period period0 = Period.ofMonths((-3780));
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      double double2 = mala0.preco_atual(localDate0);
      assertEquals((-3780), mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3021, mala0.getN_utilizadores());
      assertEquals("ELAEf)b@/{yS", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals((-3780), mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals("ELAEf)b@/{yS", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3021, mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals((-271.44506453), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      // Undeclared exception!
      mala0.preco_atual(localDate0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      double double1 = Double.max(3000, 592.2381);
      assertEquals(3000.0, double1, 0.01);
      
      boolean boolean0 = Double.isFinite((-1.0));
      assertTrue(boolean0);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double2 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      int int0 = Long.compareUnsigned(0, 0L);
      assertEquals(0, int0);
      
      long long1 = Long.max(0L, 3524L);
      assertEquals(3524L, long1);
      
      Mala mala0 = new Mala("", "", double0, true, 3000, 0, long0, long0, 0, "", 3000, true, 1.0F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = mala0.clone();
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores(0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(0.0F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.isPremium();
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean1 == boolean0);
      
      float float0 = mala0.getValorizacao();
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean2 = mala1.isPremium();
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = mala0.equals(mala1);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean3);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotNull(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      double double3 = mala0.preco_atual(localDate0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double3, 0.01);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      double double1 = Double.max(3000, 592.2381);
      assertEquals(3000.0, double1, 0.01);
      
      boolean boolean0 = Double.isFinite((-1.0));
      assertTrue(boolean0);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double2 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      int int0 = Long.compareUnsigned(0, 0L);
      assertEquals(0, int0);
      
      long long1 = Long.max(0L, 3524L);
      assertEquals(3524L, long1);
      
      Mala mala0 = new Mala("", "", double0, true, 3000, 0, long0, long0, 0, "", 3000, true, 1.0F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = mala0.clone();
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setMaterial("!");
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("!", mala1.getMaterial());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores(0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("!", mala1.getMaterial());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(0.0F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("!", mala1.getMaterial());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.isPremium();
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean1 == boolean0);
      
      float float0 = mala0.getValorizacao();
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean2 = mala1.isPremium();
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("!", mala1.getMaterial());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = mala0.equals(mala1);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("!", mala1.getMaterial());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMarca());
      assertEquals("", mala1.getDescricao());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean3);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotNull(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      double double3 = mala0.preco_atual(localDate0);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double3, 0.01);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setPremium(true);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(2L);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setDimensao(1698);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(1698, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setCodigo_barras("6Je`+$]~jl3hq2;\"");
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(1698, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("6Je`+$]~jl3hq2;\"", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      // Undeclared exception!
      try { 
        MockJapaneseChronology.dateNow((JapaneseChronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.setCodigo("A");
      int int0 = 1392;
      mala0.setDimensao(1392);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1392, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1392, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(1392, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      Mala mala2 = new Mala();
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotNull(mala2);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      LocalDate localDate0 = null;
      mala1.setPremium(false);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1392, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(1392, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      
      mala2.setData_venda((LocalDate) null);
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      mala2.setAno_colecao(1392);
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1392, mala2.getAno_colecao());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      boolean boolean0 = mala0.equals(mala2);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1392, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1392, mala2.getAno_colecao());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean0);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      double double0 = mala2.preco_atual((LocalDate) null);
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1392, mala2.getAno_colecao());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      mala2.setMarca("Al<d0:");
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Al<d0:", mala2.getMarca());
      assertEquals(1392, mala2.getAno_colecao());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      Artigo.contador = 3L;
      LocalDate localDate1 = null;
      double double1 = mala2.preco_atual((LocalDate) null);
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Al<d0:", mala2.getMarca());
      assertEquals(1392, mala2.getAno_colecao());
      assertEquals("A2", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertEquals(double1, double0, 0.01);
      
      boolean boolean1 = mala1.equals(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1392, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(1392, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      
      // Undeclared exception!
      try { 
        mala2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(2L);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setDimensao(1698);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(1698, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      // Undeclared exception!
      try { 
        MockJapaneseChronology.dateNow((JapaneseChronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala0);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      
      mala0.setTransportadora((-709L));
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-709L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(1.0);
      assertNotNull(double0);
      assertEquals(1.0, (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long((-1992L));
      assertNotNull(long1);
      assertEquals((-1992L), (long)long1);
      assertFalse(long1.equals((Object)long0));
      
      double double1 = Double.sum((-1992L), 0.0);
      assertEquals((-1992.0), double1, 0.01);
      
      Mala mala0 = new Mala("P]y=c/NIJV6r|\"MA", "%", double0, true, 0, 0, long0, long1, 0, "z@BTD]7", (-1), false, (-106.79393F));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      
      mala0.setN_utilizadores((-1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      
      Mala mala1 = new Mala("A", "A", double0, true, (-1), (-1), (Long) 3L, (Long) 3L, (-1), "P]y=c/NIJV6r|\"MA", 0, true, (-1992L));
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getMaterial());
      assertEquals("A", mala1.getMarca());
      assertEquals(1.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1992.0F), mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getDescricao());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getDimensao());
      assertEquals(3L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertEquals(3L, mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertNotNull(mala1);
      assertEquals(3L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double2 = mala1.preco_atual(localDate0);
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getMaterial());
      assertEquals("A", mala1.getMarca());
      assertEquals(1.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1992.0F), mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getDescricao());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getDimensao());
      assertEquals(3L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertEquals(3L, mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(Double.POSITIVE_INFINITY, double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      assertNotEquals(double2, double1, 0.01);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A3", string0);
      
      Long long2 = Long.getLong("P]y=c/NIJV6r|\"MA", (Long) 4L);
      assertNotNull(long2);
      assertEquals(4L, (long)long2);
      assertFalse(long2.equals((Object)long1));
      assertFalse(long2.equals((Object)long0));
      
      long long3 = Long.divideUnsigned((-3126L), 556L);
      assertEquals(33177597254873288L, long3);
      
      int int0 = mala1.getDimensao();
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getMaterial());
      assertEquals("A", mala1.getMarca());
      assertEquals(1.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1992.0F), mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getDescricao());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertEquals(4L, mala1.getContador());
      assertEquals(3L, mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertNotSame(mala1, mala0);
      assertEquals(4L, Artigo.contador);
      assertEquals((-1), int0);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setValorizacao(0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(4L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertEquals(4L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      
      String string1 = mala0.toString();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(4L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotNull(string1);
      assertEquals(4L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: P]y=c/NIJV6r|\"MA Marca: % Pre\u00E7o base: 1.0 Novo: true Estado de uso: 0 N\u00FAmero de utilizadores: -1 Disponivel: true Id da transportadora: 0 Id do vendedor: -1992 } Dimens\u00E3o: 0 Material: z@BTD]7 Ano da Cole\u00E7\u00E3o: -1 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      
      int int1 = mala0.getAno_colecao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(4L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertEquals(4L, Artigo.contador);
      assertEquals((-1), int1);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = mala0.equals(object0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(4L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertEquals(4L, Artigo.contador);
      assertFalse(boolean0);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      
      int int2 = mala0.getAno_colecao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("%", mala0.getMarca());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(4L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1992L), mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertEquals(4L, Artigo.contador);
      assertEquals((-1), int2);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long3));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      
      int int3 = mala1.getDimensao();
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getMaterial());
      assertEquals("A", mala1.getMarca());
      assertEquals(1.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1992.0F), mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getDescricao());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertEquals(4L, mala1.getContador());
      assertEquals(3L, mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertNotSame(mala1, mala0);
      assertEquals(4L, Artigo.contador);
      assertEquals((-1), int3);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertTrue(int3 == int2);
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(true);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.toString();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: true Valoriza\u00E7\u00E3o: 0.0}", string0);
      
      String string1 = mala0.toString();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string1);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: true Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertTrue(string1.equals((Object)string0));
      
      mala0.setTransportadora(0L);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial("p$LW>HG*]c_i\"");
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("p$LW>HG*]c_i\"", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      // Undeclared exception!
      try { 
        mala0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      mala0.setDisponivel(true);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(3L, Artigo.contador);
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertNotNull(localDate0);
      assertEquals(3L, Artigo.contador);
      
      Artigo.setContador((-2060L));
      String string1 = mala0.mostrar(localDate0);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertNotNull(string1);
      assertEquals((-2060L), Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: true Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string1);
      assertFalse(string1.equals((Object)string0));
      
      mala0.setMaterial(" Material: ");
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-2060L), Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      int int0 = mala0.getAno_colecao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertNotSame(mala0, mala1);
      assertEquals((-2060L), Artigo.contador);
      assertEquals(0, int0);
      assertTrue(mala0.equals((Object)mala1));
      
      double double0 = mala1.preco_atual(localDate0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala1.isPremium();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertFalse(boolean0);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      
      double double1 = mala1.preco_atual(localDate0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertEquals(Double.NaN, double1, 0.01);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(double1, double0, 0.01);
      
      String string2 = mala0.toString();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotNull(string2);
      assertEquals((-2060L), Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: true Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string2);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      mala1.setValorizacao((-2060L));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-2060.0F), mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setValorizacao(100.0F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(100.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertNotSame(mala0, mala1);
      assertEquals((-2060L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setPremium(true);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2060L), mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(100.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-2060.0F), mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-2060L), mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals((-2060L), Artigo.contador);
      assertEquals((-2060L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.setContador(2L);
      Artigo.codigo = "A";
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertNotNull(localDate0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setData_venda(localDate0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      mala0.setEstado_uso(1);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      float float0 = mala0.getValorizacao();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
      
      mala0.setCodigo_barras((String) null);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(false);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getDimensao());
      assertNull(mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setAno_colecao(115);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(115, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getDimensao());
      assertNull(mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        mala0.equals(mala1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = Long.getLong("", long0);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      
      long long2 = Long.sum(0L, 1797L);
      assertEquals(1797L, long2);
      
      Long long3 = new Long(0);
      assertNotNull(long3);
      assertEquals(0L, (long)long3);
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      boolean boolean0 = Double.isFinite(0.0);
      assertTrue(boolean0);
      
      String string0 = Long.toUnsignedString(1943L);
      assertNotNull(string0);
      assertEquals("1943", string0);
      
      String string1 = Long.toUnsignedString((long) (-720));
      assertNotNull(string1);
      assertEquals("18446744073709550896", string1);
      assertFalse(string1.equals((Object)string0));
      
      Mala mala0 = new Mala("", "", double0, true, 0, 721, long1, long3, (-720), "X$=%b", (-2475), true, (-906.8506F));
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals(721, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2475), mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      mala0.setN_utilizadores(0);
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2475), mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      mala0.setTransportadora((-1L));
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2475), mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(721);
      assertNotNull(localDate0);
      
      double double1 = mala0.preco_atual(localDate0);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2475), mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      boolean boolean1 = mala0.isPremium();
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2475), mala0.getAno_colecao());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      assertTrue(boolean1 == boolean0);
      
      mala0.setAno_colecao((-720));
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals((-720), mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      boolean boolean2 = mala0.equals(long3);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals((-720), mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean2);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      int int0 = mala0.getDimensao();
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals((-720), mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-720), int0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      float float0 = mala0.getValorizacao();
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals((-720), mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-906.8506F), float0, 0.01F);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      mala0.setAno_colecao(0);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      mala0.setPremium(true);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      int int1 = mala0.getDimensao();
      assertTrue(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals((-906.8506F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("X$=%b", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-720), mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getDescricao());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-720), int1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertTrue(long1.equals((Object)long3));
      assertTrue(int1 == int0);
      assertFalse(long3.equals((Object)long2));
      assertTrue(long3.equals((Object)long1));
      assertTrue(long3.equals((Object)long0));
      
      // Undeclared exception!
      try { 
        Chronology.of("X$=%b");
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Unknown chronology: X$=%b
         //
         verifyException("java.time.chrono.AbstractChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.codigo = "3&";
      mala0.setTransportadora(0L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setAno_colecao(10);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      float float0 = mala0.getValorizacao();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = mala0.toString();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 0 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 10 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      
      mala0.setDimensao(0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setEstado_uso((-1));
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setDimensao(0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(true);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getAno_colecao();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(10, int0);
      
      int int1 = mala0.getDimensao();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getAno_colecao());
      assertEquals("3&", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial((String) null);
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      
      mala0.setCodigo_barras("");
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, Artigo.contador);
      
      mala0.setVendedor(1L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, Artigo.contador);
      
      mala0.setValorizacao(1.0F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(1L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertNull(mala1.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getCodigo_barras());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setDescricao("A");
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(1L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertNull(mala1.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getCodigo_barras());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setAno_colecao(0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(1L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertNull(mala1.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getCodigo_barras());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      String string0 = mala1.getMaterial();
      assertEquals((-1), mala0.getN_utilizadores());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getCodigo_barras());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(1L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertNull(mala1.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getCodigo_barras());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getDescricao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      boolean boolean0 = Double.isFinite((-1.0));
      assertTrue(boolean0);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double1 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double1, 0.01);
      
      int int0 = Long.compareUnsigned(0, 0L);
      assertEquals(0, int0);
      
      long long1 = Long.max(0L, 3524L);
      assertEquals(3524L, long1);
      
      Mala mala0 = new Mala("", "", double0, true, 3000, 0, long0, long0, 0, "", 3000, true, 1.0F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setMaterial("!");
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getN_utilizadores());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores((-3991));
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(0.0F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.isPremium();
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean1 == boolean0);
      
      mala1.setPreco_base(3578.2230838888);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      float float0 = mala0.getValorizacao();
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean2 = mala1.isPremium();
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = mala0.equals(mala1);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("!", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean3);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotNull(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      double double2 = mala0.preco_atual(localDate0);
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double2, 0.01);
      assertEquals((double)double0, (double)double1, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial("#Cs0mdAXww=");
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setDescricao("7(~");
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("7(~", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(true);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("7(~", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("7(~", mala0.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("7(~", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("#Cs0mdAXww=", mala1.getMaterial());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("7(~", mala0.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("7(~", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("#Cs0mdAXww=", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setPremium(false);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("#Cs0mdAXww=", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("7(~", mala0.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("7(~", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("#Cs0mdAXww=", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      mala1.setDimensao((-380));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-380), mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-380), mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      int int0 = mala0.getDimensao();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(0, int0);
      assertFalse(mala0.equals((Object)mala1));
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(0, int1);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      
      String string1 = mala0.getMaterial();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotNull(string1);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = mala0.toString();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotNull(string2);
      assertEquals(3L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string2);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Mala mala0 = null;
      try {
        mala0 = new Mala((Mala) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double(1.0);
      assertNotNull(double0);
      assertEquals(1.0, (double)double0, 0.01);
      
      Long long0 = Long.valueOf((long) (-2038));
      assertNotNull(long0);
      assertEquals((-2038L), (long)long0);
      
      Long long1 = Long.getLong("(NqS{[%st3");
      assertNull(long1);
      
      Long long2 = Long.getLong("(NqS{[%st3", (Long) null);
      assertNull(long2);
      
      Mala mala0 = null;
      try {
        mala0 = new Mala("*CP]tT.R9", "*CP]tT.R9", double0, false, (-2038), (-2038), long0, (Long) null, (-2038), "*CP]tT.R9", 0, false, 1224.639F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      Artigo.codigo = "A";
      mala1.setValorizacao(2L);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setValorizacao((-1706.0F));
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals((-1706.0F), mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      
      float float0 = mala1.getValorizacao();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals((-1706.0F), mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1706.0F), float0, 0.01F);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-3644.4230895));
      assertNotNull(double0);
      assertEquals((-3644.4230895), (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      
      Mala mala0 = new Mala("", "TxzoMh+", double0, true, 0, 0, long0, long1, (-972), "", (-1015), true, (-1015));
      assertEquals((-1015), mala0.getAno_colecao());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-3644.4230895), mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("TxzoMh+", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals((-972), mala0.getDimensao());
      assertEquals((-1015.0F), mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("", mala0.getDescricao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      int int0 = mala0.getDimensao();
      assertEquals((-1015), mala0.getAno_colecao());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-3644.4230895), mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("TxzoMh+", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals((-972), mala0.getDimensao());
      assertEquals((-1015.0F), mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertEquals((-972), int0);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala0.setTransportadora((-709L));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-709L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      // Undeclared exception!
      try { 
        MockJapaneseChronology.dateNow((JapaneseChronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.contador = 0L;
      mala0.setPremium(true);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0L, Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      float float0 = mala0.getValorizacao();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(mala0.equals((Object)mala1));
      
      mala0.setMaterial("Artigo invalido");
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      mala0.setPreco_base(0L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      mala0.setDimensao(1);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      String string0 = mala0.getMaterial();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertNotNull(string0);
      assertEquals(0L, Artigo.contador);
      assertEquals("Artigo invalido", string0);
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setMaterial(">Kh+ly`c!pN*Y>p");
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(">Kh+ly`c!pN*Y>p", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1305L);
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertEquals(0.01, double0, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      
      String string1 = mala0.toString();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertNotNull(string1);
      assertEquals(0L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 1 Material: Artigo invalido Ano da Cole\u00E7\u00E3o: 0 Premium: true Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = mala0.isPremium();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertNotSame(mala0, mala1);
      assertEquals(0L, Artigo.contador);
      assertTrue(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      
      Mala mala2 = mala0.clone();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertTrue(mala2.isPremium());
      assertFalse(mala2.getNovo());
      assertEquals("A", mala2.getCodigo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1, mala2.getDimensao());
      assertEquals("Artigo invalido", mala2.getMaterial());
      assertEquals(0L, mala2.getContador());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertNotNull(mala2);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      Mala mala3 = mala2.clone();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertTrue(mala2.isPremium());
      assertFalse(mala2.getNovo());
      assertEquals("A", mala2.getCodigo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1, mala2.getDimensao());
      assertEquals("Artigo invalido", mala2.getMaterial());
      assertEquals(0L, mala2.getContador());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala3.getN_utilizadores());
      assertFalse(mala3.getDisponivel());
      assertEquals(0L, mala3.getContador());
      assertEquals(1, mala3.getDimensao());
      assertEquals(0.0, mala3.getPreco_base(), 0.01);
      assertEquals((-1), mala3.getEstado_uso());
      assertEquals(0, mala3.getAno_colecao());
      assertTrue(mala3.isPremium());
      assertFalse(mala3.getNovo());
      assertEquals((-1L), mala3.getIdTransportadora());
      assertEquals("Artigo invalido", mala3.getDescricao());
      assertEquals(0.0F, mala3.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala3.getMaterial());
      assertEquals((-1L), mala3.getIdVendedor());
      assertEquals("Artigo invalido", mala3.getMarca());
      assertEquals("A", mala3.getCodigo());
      assertEquals("A1", mala3.getCodigo_barras());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala3);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala1);
      assertNotSame(mala3, mala2);
      assertNotNull(mala3);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala3.equals((Object)mala1));
      assertTrue(mala3.equals((Object)mala0));
      assertTrue(mala3.equals((Object)mala2));
      
      mala1.setValorizacao(814.53876F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(814.53876F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(">Kh+ly`c!pN*Y>p", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala3);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      
      mala2.setPremium(true);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertTrue(mala2.isPremium());
      assertFalse(mala2.getNovo());
      assertEquals("A", mala2.getCodigo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1, mala2.getDimensao());
      assertEquals("Artigo invalido", mala2.getMaterial());
      assertEquals(0L, mala2.getContador());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala3);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala3));
      assertTrue(mala2.equals((Object)mala3));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      int int0 = mala2.getDimensao();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertTrue(mala2.isPremium());
      assertFalse(mala2.getNovo());
      assertEquals("A", mala2.getCodigo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(1, mala2.getDimensao());
      assertEquals("Artigo invalido", mala2.getMaterial());
      assertEquals(0L, mala2.getContador());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala3);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertEquals(1, int0);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala3));
      assertTrue(mala2.equals((Object)mala3));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      
      mala1.setValorizacao(1504.789F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(1, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(1504.789F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(">Kh+ly`c!pN*Y>p", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala3);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = new Double(0.01);
      assertNotNull(double0);
      assertEquals(0.01, (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      
      Mala mala0 = new Mala("Z92Sj|JP'i[O-h&\"", "w(2Rgf#+uo", double0, false, 0, 0, long0, long1, (-1241), "Z92Sj|JP'i[O-h&\"", (-3788), false, (-3788));
      assertEquals(0.01, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals((-1241), mala0.getDimensao());
      assertEquals((-3788), mala0.getAno_colecao());
      assertEquals((-3788.0F), mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala0.getDescricao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("w(2Rgf#+uo", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      Mala mala1 = mala0.clone();
      assertEquals(0.01, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals((-1241), mala0.getDimensao());
      assertEquals((-3788), mala0.getAno_colecao());
      assertEquals((-3788.0F), mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala0.getDescricao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("w(2Rgf#+uo", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(0.01, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("w(2Rgf#+uo", mala1.getMarca());
      assertEquals(0, mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("Z92Sj|JP'i[O-h&\"", mala1.getMaterial());
      assertEquals((-3788), mala1.getAno_colecao());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1241), mala1.getDimensao());
      assertEquals((-3788.0F), mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setAno_colecao((-1));
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      mala0.setAno_colecao(0);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      mala0.setDimensao(0);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      float float0 = mala0.getValorizacao();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
      
      Mala mala1 = mala0.clone();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      Artigo.contador = (long) 0;
      Mala mala2 = mala0.clone();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0L, mala2.getContador());
      assertEquals("", mala2.getMaterial());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotNull(mala2);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      mala2.setData_venda(localDate0);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0L, mala2.getContador());
      assertEquals("", mala2.getMaterial());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      
      mala2.setDimensao(695);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0L, mala2.getContador());
      assertEquals("", mala2.getMaterial());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertFalse(mala2.isPremium());
      assertEquals(695, mala2.getDimensao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      
      mala2.setMaterial("A");
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals("A", mala2.getMaterial());
      assertFalse(mala2.isPremium());
      assertEquals(695, mala2.getDimensao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      
      Mala mala3 = mala2.clone();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals("A", mala2.getMaterial());
      assertFalse(mala2.isPremium());
      assertEquals(695, mala2.getDimensao());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertFalse(mala2.getDisponivel());
      assertEquals(0.0F, mala3.getValorizacao(), 0.01F);
      assertEquals((-1L), mala3.getIdVendedor());
      assertEquals("Artigo invalido", mala3.getMarca());
      assertEquals((-1), mala3.getEstado_uso());
      assertEquals(0, mala3.getAno_colecao());
      assertEquals("Artigo invalido", mala3.getDescricao());
      assertEquals(0L, mala3.getContador());
      assertEquals(695, mala3.getDimensao());
      assertEquals("A1", mala3.getCodigo_barras());
      assertEquals((-1), mala3.getN_utilizadores());
      assertFalse(mala3.getDisponivel());
      assertEquals("A", mala3.getMaterial());
      assertFalse(mala3.getNovo());
      assertEquals(0.0, mala3.getPreco_base(), 0.01);
      assertEquals((-1L), mala3.getIdTransportadora());
      assertEquals("A", mala3.getCodigo());
      assertFalse(mala3.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala3);
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala1);
      assertNotSame(mala3, mala2);
      assertNotNull(mala3);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(mala3.equals((Object)mala0));
      assertTrue(mala3.equals((Object)mala2));
      assertFalse(mala3.equals((Object)mala1));
      
      mala0.setDimensao((-1));
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala3);
      assertEquals(0L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala3));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = Double.valueOf((-1.0));
      assertNotNull(double0);
      assertEquals((-1.0), (double)double0, 0.01);
      
      Long long0 = new Long(770);
      assertNotNull(long0);
      assertEquals(770L, (long)long0);
      
      Mala mala0 = new Mala(" Novo: ", " Novo: ", double0, true, 770, 770, long0, long0, 770, " Dimens\u00E3o: ", 1645, true, 770);
      assertEquals(" Novo: ", mala0.getMarca());
      assertEquals(1645, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" Dimens\u00E3o: ", mala0.getMaterial());
      assertEquals(" Novo: ", mala0.getDescricao());
      assertEquals(770, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(770.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals(770, mala0.getDimensao());
      assertEquals(770L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(770L, mala0.getIdTransportadora());
      assertEquals(770, mala0.getEstado_uso());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      String string1 = Artigo.criaCodigo();
      assertNotNull(string1);
      assertEquals("A3", string1);
      assertFalse(string1.equals((Object)string0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = mala0.equals(object0);
      assertEquals(" Novo: ", mala0.getMarca());
      assertEquals(1645, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" Dimens\u00E3o: ", mala0.getMaterial());
      assertEquals(" Novo: ", mala0.getDescricao());
      assertEquals(770, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(770.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals(770, mala0.getDimensao());
      assertEquals(770L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(770L, mala0.getIdTransportadora());
      assertEquals(770, mala0.getEstado_uso());
      assertEquals(4L, mala0.getContador());
      assertEquals(4L, Artigo.contador);
      assertFalse(boolean0);
      
      Mala mala1 = mala0.clone();
      assertEquals(" Novo: ", mala0.getMarca());
      assertEquals(1645, mala0.getAno_colecao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" Dimens\u00E3o: ", mala0.getMaterial());
      assertEquals(" Novo: ", mala0.getDescricao());
      assertEquals(770, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(770.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals(770, mala0.getDimensao());
      assertEquals(770L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(770L, mala0.getIdTransportadora());
      assertEquals(770, mala0.getEstado_uso());
      assertEquals(4L, mala0.getContador());
      assertEquals((-1.0), mala1.getPreco_base(), 0.01);
      assertEquals(770, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertTrue(mala1.getDisponivel());
      assertEquals(1645, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(" Novo: ", mala1.getMarca());
      assertEquals(" Novo: ", mala1.getDescricao());
      assertEquals(" Dimens\u00E3o: ", mala1.getMaterial());
      assertEquals(770, mala1.getN_utilizadores());
      assertEquals(770.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(4L, mala1.getContador());
      assertEquals(770L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(770L, mala1.getIdVendedor());
      assertEquals(770, mala1.getEstado_uso());
      assertTrue(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(4L, Artigo.contador);
      assertEquals(4L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double double0 = new Double(46.2179403286);
      assertNotNull(double0);
      assertEquals(46.2179403286, (double)double0, 0.01);
      
      Long long0 = new Long(1);
      assertNotNull(long0);
      assertEquals(1L, (long)long0);
      
      Mala mala0 = new Mala("ezZ}*h3BsG.'2 h", "ezZ}*h3BsG.'2 h", double0, true, 1, 1, long0, long0, 0, "|", 935, false, 0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("|", mala0.getMaterial());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertEquals(46.2179403286, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getNovo());
      assertEquals(935, mala0.getAno_colecao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getMaterial();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("|", mala0.getMaterial());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertEquals(46.2179403286, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getNovo());
      assertEquals(935, mala0.getAno_colecao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getMarca());
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("|", string0);
      
      mala0.setPremium(true);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("|", mala0.getMaterial());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertEquals(46.2179403286, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getNovo());
      assertEquals(935, mala0.getAno_colecao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(1, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      float float0 = mala0.getValorizacao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("|", mala0.getMaterial());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertEquals(46.2179403286, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.getNovo());
      assertEquals(935, mala0.getAno_colecao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(1, mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("ezZ}*h3BsG.'2 h", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Double double0 = new Double((-2256.44597));
      assertNotNull(double0);
      assertEquals((-2256.44597), (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0L);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      
      Mala mala0 = new Mala("", "", double0, true, 0, 0, long0, long1, 891, "", 0, true, 0L);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(891, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2256.44597), mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      int int0 = mala0.getDimensao();
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(891, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2256.44597), mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(891, int0);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      mala0.setPremium(true);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getDescricao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(891, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2256.44597), mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Double double0 = new Double(1131.434719);
      assertNotNull(double0);
      assertEquals(1131.434719, (double)double0, 0.01);
      
      double double1 = Double.min(1131.434719, 0.0);
      assertEquals(0.0, double1, 0.01);
      
      Long long0 = new Long(10);
      assertNotNull(long0);
      assertEquals(10L, (long)long0);
      
      Mala mala0 = new Mala("", "}", double0, false, 10, 10, long0, long0, 10, " Premium: ", 10, false, 10);
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals(1131.434719, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(10.0F, mala1.getValorizacao(), 0.01F);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setPreco_base(0.0);
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(10.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      String string0 = mala1.toString();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(10.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o:  Marca: } Pre\u00E7o base: 0.0 Novo: false Estado de uso: 10 N\u00FAmero de utilizadores: 10 Disponivel: true Id da transportadora: 10 Id do vendedor: 10 } Dimens\u00E3o: 10 Material:  Premium:  Ano da Cole\u00E7\u00E3o: 10 Premium: false Valoriza\u00E7\u00E3o: 10.0}", string0);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Mala mala2 = mala1.clone();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(10.0F, mala1.getValorizacao(), 0.01F);
      assertTrue(mala2.getDisponivel());
      assertEquals(2L, mala2.getContador());
      assertEquals("", mala2.getDescricao());
      assertEquals(10.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals(10, mala2.getN_utilizadores());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(10L, mala2.getIdTransportadora());
      assertFalse(mala2.getNovo());
      assertEquals(10, mala2.getDimensao());
      assertEquals("A", mala2.getCodigo());
      assertEquals(10, mala2.getEstado_uso());
      assertFalse(mala2.isPremium());
      assertEquals("}", mala2.getMarca());
      assertEquals(10, mala2.getAno_colecao());
      assertEquals(10L, mala2.getIdVendedor());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotNull(mala2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      double double2 = mala0.preco_atual(localDate0);
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1018.2912471000001, double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertNotEquals(double2, double1, 0.01);
      
      boolean boolean0 = mala1.isPremium();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(10.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      
      Mala mala3 = mala0.clone();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala3.getDimensao());
      assertEquals(10, mala3.getEstado_uso());
      assertEquals("", mala3.getDescricao());
      assertEquals("}", mala3.getMarca());
      assertEquals(10, mala3.getAno_colecao());
      assertEquals(10L, mala3.getIdVendedor());
      assertEquals(1131.434719, mala3.getPreco_base(), 0.01);
      assertEquals("A1", mala3.getCodigo_barras());
      assertEquals(10L, mala3.getIdTransportadora());
      assertTrue(mala3.getDisponivel());
      assertEquals("A", mala3.getCodigo());
      assertFalse(mala3.isPremium());
      assertEquals(10.0F, mala3.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala3.getMaterial());
      assertEquals(10, mala3.getN_utilizadores());
      assertFalse(mala3.getNovo());
      assertEquals(2L, mala3.getContador());
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala2);
      assertNotSame(mala3, mala1);
      assertNotNull(mala3);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala3.equals((Object)mala0));
      assertFalse(mala3.equals((Object)mala2));
      assertFalse(mala3.equals((Object)mala1));
      
      Mala mala4 = mala0.clone();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertTrue(mala4.getDisponivel());
      assertEquals(1131.434719, mala4.getPreco_base(), 0.01);
      assertFalse(mala4.isPremium());
      assertEquals(" Premium: ", mala4.getMaterial());
      assertEquals("}", mala4.getMarca());
      assertEquals(10L, mala4.getIdVendedor());
      assertEquals(10, mala4.getEstado_uso());
      assertEquals(10, mala4.getAno_colecao());
      assertEquals("A", mala4.getCodigo());
      assertEquals(10L, mala4.getIdTransportadora());
      assertEquals(10, mala4.getDimensao());
      assertEquals(10, mala4.getN_utilizadores());
      assertEquals("A1", mala4.getCodigo_barras());
      assertEquals("", mala4.getDescricao());
      assertEquals(10.0F, mala4.getValorizacao(), 0.01F);
      assertFalse(mala4.getNovo());
      assertEquals(2L, mala4.getContador());
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala4);
      assertNotSame(mala0, mala1);
      assertNotSame(mala4, mala3);
      assertNotSame(mala4, mala2);
      assertNotSame(mala4, mala0);
      assertNotSame(mala4, mala1);
      assertNotNull(mala4);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala0.equals((Object)mala3));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala4.equals((Object)mala3));
      assertFalse(mala4.equals((Object)mala2));
      assertFalse(mala4.equals((Object)mala0));
      assertFalse(mala4.equals((Object)mala1));
      
      mala1.setValorizacao(2L);
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals("", mala1.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(10, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(10L, mala1.getIdVendedor());
      assertEquals(10, mala1.getN_utilizadores());
      assertEquals("}", mala1.getMarca());
      assertEquals(10L, mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.isPremium());
      assertEquals(" Premium: ", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala4);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala3);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala4);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala0.equals((Object)mala3));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala4));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala4));
      
      float float0 = mala0.getValorizacao();
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals("A", mala0.getCodigo());
      assertEquals(10L, mala0.getIdTransportadora());
      assertEquals(10, mala0.getDimensao());
      assertEquals(10.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(" Premium: ", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(10L, mala0.getIdVendedor());
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("", mala0.getDescricao());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1131.434719, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala4);
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(10.0F, float0, 0.01F);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(mala0.equals((Object)mala3));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala4));
      assertFalse(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial("");
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      mala0.setDisponivel(true);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      mala0.setN_utilizadores(0);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      mala0.setPreco_base((-1510.9));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      Artigo.setCodigo("A");
      boolean boolean0 = mala0.equals((Object) null);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      
      int int0 = mala0.getAno_colecao();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      
      mala0.setVendedor(0L);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      mala0.setDimensao((-3616));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-3616), mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getMaterial();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-3616), mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("", string0);
      
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1510.9), mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-3616), mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.codigo = "A";
      double double0 = mala0.preco_atual((LocalDate) null);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotNull(mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      int int0 = mala0.getAno_colecao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(0, int0);
      assertTrue(mala0.equals((Object)mala1));
      
      String string1 = mala0.getMaterial();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotNull(string1);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string1);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      
      mala1.setPremium(false);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      
      Mala mala2 = mala1.clone();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala2.getMaterial());
      assertEquals("A1", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotNull(mala2);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      
      mala2.setN_utilizadores(0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala2.getMaterial());
      assertEquals("A1", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      
      mala1.setDimensao(607);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertEquals(607, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      
      int int1 = mala0.getAno_colecao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(0, int1);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      
      boolean boolean0 = mala0.isPremium();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setPremium(false);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertEquals(607, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      
      Mala mala3 = mala0.clone();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala3.isPremium());
      assertEquals(0.0F, mala3.getValorizacao(), 0.01F);
      assertEquals("A", mala3.getCodigo());
      assertEquals(0, mala3.getDimensao());
      assertEquals(3L, mala3.getContador());
      assertEquals((-1L), mala3.getIdTransportadora());
      assertEquals((-1), mala3.getEstado_uso());
      assertEquals(0, mala3.getAno_colecao());
      assertEquals((-1L), mala3.getIdVendedor());
      assertEquals("Artigo invalido", mala3.getDescricao());
      assertEquals(0.0, mala3.getPreco_base(), 0.01);
      assertEquals("", mala3.getMaterial());
      assertFalse(mala3.getNovo());
      assertEquals("A1", mala3.getCodigo_barras());
      assertEquals((-1), mala3.getN_utilizadores());
      assertFalse(mala3.getDisponivel());
      assertEquals("Artigo invalido", mala3.getMarca());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala3);
      assertNotSame(mala3, mala2);
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala1);
      assertNotNull(mala3);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala3.equals((Object)mala0));
      assertFalse(mala3.equals((Object)mala2));
      assertFalse(mala3.equals((Object)mala1));
      
      mala3.setN_utilizadores(0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala3.isPremium());
      assertEquals(0.0F, mala3.getValorizacao(), 0.01F);
      assertEquals("A", mala3.getCodigo());
      assertEquals(0, mala3.getDimensao());
      assertEquals(3L, mala3.getContador());
      assertEquals((-1L), mala3.getIdTransportadora());
      assertEquals((-1), mala3.getEstado_uso());
      assertEquals(0, mala3.getAno_colecao());
      assertEquals((-1L), mala3.getIdVendedor());
      assertEquals("Artigo invalido", mala3.getDescricao());
      assertEquals(0.0, mala3.getPreco_base(), 0.01);
      assertEquals("", mala3.getMaterial());
      assertFalse(mala3.getNovo());
      assertEquals(0, mala3.getN_utilizadores());
      assertEquals("A1", mala3.getCodigo_barras());
      assertFalse(mala3.getDisponivel());
      assertEquals("Artigo invalido", mala3.getMarca());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala3);
      assertNotSame(mala3, mala2);
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala3));
      assertFalse(mala3.equals((Object)mala0));
      assertTrue(mala3.equals((Object)mala2));
      assertFalse(mala3.equals((Object)mala1));
      
      double double1 = mala2.preco_atual((LocalDate) null);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertEquals(607, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala2.getMaterial());
      assertEquals("A1", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(3L, mala2.getContador());
      assertFalse(mala2.getNovo());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala3);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala3);
      assertNotSame(mala1, mala0);
      assertNotSame(mala2, mala3);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala3));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala3));
      assertFalse(mala2.equals((Object)mala0));
      
      mala0.setPremium(false);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala3);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala3));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2L);
      assertNotNull(localDate0);
      
      mala0.setPreco_base(2893.2713086);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      mala0.setMaterial("rb}AD9z &%Yb");
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("rb}AD9z &%Yb", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getDimensao();
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("rb}AD9z &%Yb", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      
      mala0.setDimensao(2767);
      assertEquals(2767, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals("rb}AD9z &%Yb", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.isPremium();
      assertEquals(2767, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals("rb}AD9z &%Yb", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      
      String string0 = mala0.toString();
      assertEquals(2767, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2893.2713086, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals("rb}AD9z &%Yb", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 2893.2713086 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 2767 Material: rb}AD9z &%Yb Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      Artigo.setCodigo("A");
      mala1.setValorizacao(2L);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      String string0 = mala1.getMaterial();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals("", string0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala0.setNovo(true);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double0, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      
      Mala mala2 = mala0.clone();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getDisponivel());
      assertEquals("", mala2.getMaterial());
      assertTrue(mala2.getNovo());
      assertEquals("A1", mala2.getCodigo_barras());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotNull(mala2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      
      ChronoField chronoField0 = ChronoField.AMPM_OF_DAY;
      assertEquals(ChronoField.AMPM_OF_DAY, chronoField0);
      
      // Undeclared exception!
      try { 
        zoneOffset0.get(chronoField0);
        fail("Expecting exception: UnsupportedTemporalTypeException");
      
      } catch(UnsupportedTemporalTypeException e) {
         //
         // Unsupported field: AmPmOfDay
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Double double0 = new Double(830.56121);
      assertNotNull(double0);
      assertEquals(830.56121, (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Mala mala0 = new Mala("", "", double0, true, 0, 0, long0, long0, 0, "", 0, true, 0L);
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("", mala0.getMarca());
      assertEquals(830.56121, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertTrue(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.contador = 2L;
      mala0.setPreco_base(1507.3062716);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(true);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setPremium(true);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      mala0.setDescricao("");
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, Artigo.contador);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      mala0.setAno_colecao((-1666));
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      assertEquals((-1666), int0);
      
      boolean boolean0 = mala0.isPremium();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      assertTrue(boolean0);
      
      String string1 = mala0.getMaterial();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string1);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string1);
      assertFalse(string1.equals((Object)string0));
      
      Clock clock0 = MockClock.systemUTC();
      assertNotNull(clock0);
      
      LocalDate localDate0 = MockLocalDate.now(clock0);
      assertNotNull(localDate0);
      
      String string2 = mala0.mostrar(localDate0);
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string2);
      assertEquals(3L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o:  Marca: Artigo invalido Pre\u00E7o base: 1507.3062716 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: -1666 Premium: true Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: 1507.31\u20AC \n", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      int int1 = mala0.getDimensao();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      
      String string3 = mala0.getMaterial();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertNotNull(string3);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      float float0 = mala0.getValorizacao();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      assertEquals(0.0F, float0, 0.01F);
      
      boolean boolean1 = mala0.isPremium();
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      mala0.setValorizacao((-1.0F));
      assertEquals(3L, mala0.getContador());
      assertEquals((-1666), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(1507.3062716, mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      mala0.setPremium(true);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3L, Artigo.contador);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = mala0.equals(object0);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean0);
      
      String string1 = mala0.getMaterial();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string1);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = mala0.getMaterial();
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(3L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string2);
      assertEquals(3L, Artigo.contador);
      assertEquals("", string2);
      assertFalse(string2.equals((Object)string0));
      
      LocalDate localDate0 = null;
      // Undeclared exception!
      try { 
        mala0.mostrar((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.isPremium();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      
      String string0 = mala0.toString();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      
      LocalDate localDate0 = MockLocalDate.ofYearDay((-836), 130);
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = mala0.clone();
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      double double0 = mala0.preco_atual((LocalDate) null);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(mala0.equals((Object)mala1));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setAno_colecao(0);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      
      mala0.setValorizacao(0.0F);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getNovo());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setPremium(true);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setAno_colecao((-1694));
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1694), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getNovo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial(" Descri\u00E7\u00E3o: ");
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(" Descri\u00E7\u00E3o: ", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.toString();
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(" Descri\u00E7\u00E3o: ", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Descri\u00E7\u00E3o:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setDimensao(1666);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(1666, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setPremium(true);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(2L);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setTransportadora(2L);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      String string0 = mala1.toString();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getDisponivel());
      assertEquals(2L, mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 2 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: true Valoriza\u00E7\u00E3o: 2.0}", string0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      boolean boolean0 = Double.isFinite((-1.0));
      assertTrue(boolean0);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double1 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double1, 0.01);
      
      long long1 = Artigo.contador;
      assertEquals(1L, long1);
      
      Mala mala0 = new Mala("", "", double0, true, 3000, 0, long0, long0, 0, "", 3000, true, 3000);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = mala0.clone();
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(3000.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores((-3991));
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(3000.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Month month0 = Month.JUNE;
      LocalDate localDate0 = MockLocalDate.of(23, month0, 23);
      assertNotNull(localDate0);
      
      mala0.setData_venda(localDate0);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      mala1.setValorizacao(2L);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setPreco_base(3578.2230838888);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      float float0 = mala0.getValorizacao();
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(3000.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean1 = mala1.isPremium();
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = mala0.equals(mala1);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-3991), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.isPremium());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(3000, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(3578.2230838888, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Artigo.setContador(23);
      double double2 = mala0.preco_atual(localDate0);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(23L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(23L, Artigo.contador);
      assertEquals(0.01, double2, 0.01);
      assertEquals((double)double0, (double)double1, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean3 = mala0.equals("");
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals(3000.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(3000, mala0.getAno_colecao());
      assertEquals(23L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertEquals(23L, Artigo.contador);
      assertFalse(boolean3);
      assertEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(mala0.equals((Object)mala1));
      
      // Undeclared exception!
      try { 
        mala1.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Double double0 = new Double(592.2381);
      assertNotNull(double0);
      assertEquals(592.2381, (double)double0, 0.01);
      
      double double1 = Double.max(3000, 592.2381);
      assertEquals(3000.0, double1, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      double double2 = Double.min(592.2381, 3000);
      assertEquals(592.2381, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      long long1 = Long.max(0L, 3524L);
      assertEquals(3524L, long1);
      
      Mala mala0 = new Mala("J", "J", double0, true, 3000, 0, long0, long0, 0, "J", 3000, true, 1.0F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(592.2381, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      mala0.setPreco_base(0.0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      
      Mala mala1 = new Mala(mala0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals("J", mala1.getMaterial());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setMaterial("A");
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getMaterial());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setN_utilizadores(0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getMaterial());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.isPremium();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      float float0 = mala0.getValorizacao();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertNotSame(mala0, mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      
      boolean boolean1 = mala1.isPremium();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getMaterial());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      
      Mala mala2 = mala1.clone();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getMaterial());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertTrue(mala2.getNovo());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("J", mala2.getDescricao());
      assertEquals(2L, mala2.getContador());
      assertTrue(mala2.isPremium());
      assertEquals(0L, mala2.getIdTransportadora());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0, mala2.getDimensao());
      assertEquals(1.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0L, mala2.getIdVendedor());
      assertTrue(mala2.getDisponivel());
      assertEquals(0, mala2.getN_utilizadores());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("J", mala2.getMarca());
      assertEquals(3000, mala2.getEstado_uso());
      assertEquals(3000, mala2.getAno_colecao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotNull(mala2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      
      boolean boolean2 = mala0.equals(mala1);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.isPremium());
      assertEquals(2L, mala1.getContador());
      assertEquals(3000, mala1.getEstado_uso());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(3000, mala1.getAno_colecao());
      assertTrue(mala1.getNovo());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getMaterial());
      assertEquals("J", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("J", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean2);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      mala0.setCodigo_barras(" Disponivel: ");
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(" Disponivel: ", mala0.getCodigo_barras());
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2L);
      assertNotNull(localDate0);
      
      Mala mala3 = mala0.clone();
      assertTrue(mala3.getDisponivel());
      assertEquals(0, mala3.getN_utilizadores());
      assertTrue(mala3.getNovo());
      assertEquals(1.0F, mala3.getValorizacao(), 0.01F);
      assertEquals(3000, mala3.getAno_colecao());
      assertEquals(" Disponivel: ", mala3.getCodigo_barras());
      assertEquals("J", mala3.getDescricao());
      assertEquals("J", mala3.getMarca());
      assertEquals("A", mala3.getCodigo());
      assertEquals("J", mala3.getMaterial());
      assertEquals(3000, mala3.getEstado_uso());
      assertEquals(0, mala3.getDimensao());
      assertEquals(0L, mala3.getIdVendedor());
      assertEquals(0.0, mala3.getPreco_base(), 0.01);
      assertTrue(mala3.isPremium());
      assertEquals(0L, mala3.getIdTransportadora());
      assertEquals(2L, mala3.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(" Disponivel: ", mala0.getCodigo_barras());
      assertEquals("J", mala0.getMarca());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("J", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(3000, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3000, mala0.getAno_colecao());
      assertTrue(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals("J", mala0.getDescricao());
      assertNotSame(mala3, mala0);
      assertNotSame(mala3, mala2);
      assertNotSame(mala3, mala1);
      assertNotSame(mala0, mala3);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotNull(mala3);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double2, 0.01);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala3.equals((Object)mala2));
      assertFalse(mala3.equals((Object)mala1));
      assertTrue(mala3.equals((Object)mala0));
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      mala1.setValorizacao(2L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean0 = mala0.equals(mala1);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      mala1.setTransportadora(2L);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(2L, mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(2.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-709L));
      assertNotNull(localDate0);
      
      Long long0 = new Long(2L);
      assertNotNull(long0);
      assertEquals(2L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala0.equals(mala1);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Double double0 = new Double(3985.7735399);
      assertNotNull(double0);
      assertEquals(3985.7735399, (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0);
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      
      Mala mala0 = new Mala("P]y=c/NIJV6r|\"MA", "5", double0, true, 0, 0, long0, long1, 0, "z@BTD]7", (-1), false, (-106.79393F));
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      mala0.setN_utilizadores((-1));
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      
      Mala mala1 = new Mala(mala0);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals((-106.79393F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("z@BTD]7", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(3985.7735399, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals("5", mala1.getMarca());
      assertNotNull(mala1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      assertFalse(mala1.equals((Object)mala0));
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double1 = mala1.preco_atual(localDate0);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals((-106.79393F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("z@BTD]7", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(3985.7735399, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals("5", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(3985.7735399, double1, 0.01);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Long long2 = new Long((-1));
      assertNotNull(long2);
      assertEquals((-1L), (long)long2);
      assertFalse(long2.equals((Object)long0));
      assertFalse(long2.equals((Object)long1));
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      Long long3 = Long.getLong("P]y=c/NIJV6r|\"MA", (Long) 3L);
      assertNotNull(long3);
      assertEquals(3L, (long)long3);
      assertFalse(long3.equals((Object)long0));
      assertFalse(long3.equals((Object)long1));
      assertFalse(long3.equals((Object)long2));
      
      long long4 = Long.divideUnsigned((-3126L), 556L);
      assertEquals(33177597254873288L, long4);
      
      String string1 = mala0.toString();
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertNotNull(string1);
      assertEquals(3L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: P]y=c/NIJV6r|\"MA Marca: 5 Pre\u00E7o base: 3985.7735399 Novo: true Estado de uso: 0 N\u00FAmero de utilizadores: -1 Disponivel: true Id da transportadora: 0 Id do vendedor: 0 } Dimens\u00E3o: 0 Material: z@BTD]7 Ano da Cole\u00E7\u00E3o: -1 Premium: false Valoriza\u00E7\u00E3o: -106.79393}", string1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals((-1), int0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertNotSame(mala0, mala1);
      assertEquals(3L, Artigo.contador);
      assertEquals((-1), int1);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      
      boolean boolean0 = mala1.equals((Object) null);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals((-106.79393F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("z@BTD]7", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(3L, mala1.getContador());
      assertEquals(3985.7735399, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals("5", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      boolean boolean1 = mala1.equals("z@BTD]7");
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals((-106.79393F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("z@BTD]7", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(3L, mala1.getContador());
      assertEquals(3985.7735399, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals("5", mala1.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      
      Mala mala2 = mala1.clone();
      assertTrue(mala2.getNovo());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals(3985.7735399, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("z@BTD]7", mala2.getMaterial());
      assertTrue(mala2.getDisponivel());
      assertEquals(0L, mala2.getIdVendedor());
      assertEquals((-106.79393F), mala2.getValorizacao(), 0.01F);
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.isPremium());
      assertEquals("5", mala2.getMarca());
      assertEquals(0, mala2.getDimensao());
      assertEquals(0, mala2.getEstado_uso());
      assertEquals((-1), mala2.getAno_colecao());
      assertEquals("P]y=c/NIJV6r|\"MA", mala2.getDescricao());
      assertEquals(3L, mala2.getContador());
      assertEquals(0L, mala2.getIdTransportadora());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertTrue(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(3985.7735399, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("z@BTD]7", mala0.getMaterial());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals((-106.79393F), mala0.getValorizacao(), 0.01F);
      assertEquals("P]y=c/NIJV6r|\"MA", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals("5", mala0.getMarca());
      assertEquals((-106.79393F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("P]y=c/NIJV6r|\"MA", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("z@BTD]7", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(3L, mala1.getContador());
      assertEquals(3985.7735399, mala1.getPreco_base(), 0.01);
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals("5", mala1.getMarca());
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotNull(mala2);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long4));
      assertTrue(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long3));
      assertTrue(long1.equals((Object)long0));
      assertFalse(long1.equals((Object)long4));
      assertFalse(long1.equals((Object)long3));
      assertFalse(long1.equals((Object)long2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setPremium(true);
      mala0.getValorizacao();
      mala0.setMaterial("Artigo invalido");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2L);
      mala0.toString();
      Mala mala1 = mala0.clone();
      mala0.setValorizacao(814.53876F);
      mala1.setPremium(true);
      mala1.getDimensao();
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(814.53876F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.01, double0, 0.01);
  }
}
