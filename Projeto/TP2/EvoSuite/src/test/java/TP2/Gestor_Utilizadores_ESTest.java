/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:33:06 GMT 2024
 */

package TP2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import TP2.Gestor_Utilizadores;
import TP2.Utilizador;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Gestor_Utilizadores_ESTest extends Gestor_Utilizadores_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.imprime1FaturaVenda(572L, (-569L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.adicionaFaturaVendedor(3747L, false, 0L, 0L, " Data de cria\u00E7\u00E3o: N/A ", 0.0, false, 0L, 3747L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.adicionaFaturaVendedor((-292L), false, 1857L, (-292L), (String) null, 1857L, false, (-292L), 497.8969791381256);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Locale locale0 = Locale.KOREAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.adicionaFaturaComprador((-1474L), false, (-3321L), 0L, set0, (-580.361), 2514.169179381469, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.devolveEncomenda((-1L), 1406L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.removeArtigoEncomenda("x=mO'k.A", 0L, (-3609L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.adicionaArtigoEncomenda("SPvhtF&EMK", 0L, (-804L), (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("du:Vq1(jaIB&", "qg}ASV4W", (String) null, (-312L), "qg}ASV4W");
      gestor_Utilizadores0.adicionaUtilizador((String) null, "du:Vq1(jaIB&", "qg}ASV4W", (-312L), "Pm-AzR7JN34rOb,8K)");
      Set<String> set0 = gestor_Utilizadores0.verCarrinho(2L);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      gestor_Utilizadores0.adicionaUtilizador("", "", "", 589L, "");
      String string0 = gestor_Utilizadores0.vendeArtigo("L\"q[{", 1L);
      assertEquals("L\"q[{", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("du:Vq1(jaIB&", "qg}ASV4W", (String) null, (-312L), "qg}ASV4W");
      Set<String> set0 = gestor_Utilizadores0.meusArtigos(1L);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      gestor_Utilizadores0.adicionaUtilizador("vGGZFRdwOzfALfe2", "vGGZFRdwOzfALfe2", "vGGZFRdwOzfALfe2", 572L, "vGGZFRdwOzfALfe2");
      String string0 = gestor_Utilizadores0.imprimeFaturasCompras(1L);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      Set<Long> set0 = gestor_Utilizadores0.getEncomendas(1251L);
      assertFalse(set0.contains(1251L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      Utilizador utilizador1 = gestor_Utilizadores0.get1Utilizador(1251L);
      assertEquals(0, utilizador1.getN_comprados());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("g", "g", "~XeQ", 1L, "~XeQ");
      Utilizador utilizador0 = gestor_Utilizadores0.get1Utilizador(1L);
      assertEquals(1L, utilizador0.getNif());
      assertEquals("g", utilizador0.getNome());
      assertEquals("g", utilizador0.getEmail());
      assertEquals("~XeQ", utilizador0.getPassword());
      assertEquals("~XeQ", utilizador0.getMorada());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("D", "D", "D", 0L, "D");
      Utilizador utilizador0 = gestor_Utilizadores0.devolveUtilizador(1L);
      assertEquals("D", utilizador0.getMorada());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador("9k1LEtPzg}*", "9k1LEtPzg}*", " - ", long0, "9k1LEtPzg}*");
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      Utilizador utilizador1 = gestor_Utilizadores0.devolveUtilizador(1251L);
      assertNotSame(utilizador1, utilizador0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("vGGZFRdwO>zfALfe2", "vGGZFRdwO>zfALfe2", "vGGZFRdwO>zfALfe2", 1L, "vGGZFRdwO>zfALfe2");
      long long0 = gestor_Utilizadores0.devolveNif(1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      Set<Long> set0 = gestor_Utilizadores0.chaves();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      String string0 = gestor_Utilizadores0.artigosVendidos2(1251L);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("]Z!4N:fU53C.g%NA", "]Z!4N:fU53C.g%NA", "]Z!4N:fU53C.g%NA", 0L, "-o)Ptk g<.4=W-x2");
      Set<String> set0 = gestor_Utilizadores0.artigosVendidos(1L);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      try { 
        gestor_Utilizadores0.voltaAVenderArtigo("a!nj?", 1251L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo a!nj? n\u00E3o existe no carrinho
         //
         verifyException("TP2.Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("", "H06[*MZlr6z%", (String) null, 2089L, (String) null);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.verificaPassword("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.setUtilizadores((Map<Long, Utilizador>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.setIdUtilizadores((Map<String, Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("TP2.Gestor_Utilizadores", "x=mO'k.A", "TP2.Gestor_Utilizadores", 0L, "}");
      try { 
        gestor_Utilizadores0.retiraArtigo("}", 1L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo } n\u00E3o se encontra \u00E0 venda
         //
         verifyException("TP2.Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("wViR*'sS+W<C'#IY", "wViR*'sS+W<C'#IY", "wViR*'sS+W<C'#IY", 0L, "f}@N!#%R{VhqyH");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(896L);
      try { 
        gestor_Utilizadores0.finalizaEncomenda(1L, localDate0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O carrinho est\u00E1 vazio!
         //
         verifyException("TP2.Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador("g", "g", "~XeQ", 1L, "~XeQ");
      try { 
        gestor_Utilizadores0.devolveEncomenda(1L, 1L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A encomenda 1 n\u00E3o foi comprada
         //
         verifyException("TP2.Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = null;
      try {
        gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, (Map<String, String>) null, hashMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = null;
      try {
        gestor_Utilizadores0 = new Gestor_Utilizadores((Gestor_Utilizadores) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      boolean boolean0 = gestor_Utilizadores0.existeIdUtilizador(" Artigos: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      hashMap1.put("'n<dY?2MfHdeYHg", "'n<dY?2MfHdeYHg");
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      Map<String, Long> map0 = gestor_Utilizadores0.getIdUtilizadores();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Long long0 = new Long((-825L));
      Utilizador utilizador0 = new Utilizador((String) null, "", "", long0, "|dop{=CHRA!");
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      Map<Long, Utilizador> map0 = gestor_Utilizadores0.getUtilizadores();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.get1IdUtilizador("CJ x0bkUfjD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Long long0 = new Long(1251L);
      Utilizador utilizador0 = new Utilizador();
      hashMap0.put(long0, utilizador0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      Utilizador utilizador1 = gestor_Utilizadores0.devolveUtilizador(1251L);
      assertEquals("n/d", utilizador1.getNome());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Utilizador utilizador0 = gestor_Utilizadores0.devolveUtilizador(2325L);
      assertNull(utilizador0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Map<String, Long> map1 = gestor_Utilizadores0.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(hashMap0, map0, map1);
      Gestor_Utilizadores gestor_Utilizadores2 = new Gestor_Utilizadores(gestor_Utilizadores1);
      boolean boolean0 = gestor_Utilizadores2.equals(gestor_Utilizadores0);
      assertTrue(gestor_Utilizadores2.equals((Object)gestor_Utilizadores1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      assertTrue(gestor_Utilizadores1.equals((Object)gestor_Utilizadores0));
      
      gestor_Utilizadores0.adicionaUtilizador("", "", "", 572L, "");
      boolean boolean0 = gestor_Utilizadores0.equals(gestor_Utilizadores1);
      assertFalse(gestor_Utilizadores1.equals((Object)gestor_Utilizadores0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(gestor_Utilizadores0);
      boolean boolean0 = gestor_Utilizadores0.equals(gestor_Utilizadores1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      boolean boolean0 = gestor_Utilizadores0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      boolean boolean0 = gestor_Utilizadores0.equals(gestor_Utilizadores0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Object object0 = new Object();
      boolean boolean0 = gestor_Utilizadores0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      long long0 = gestor_Utilizadores0.verificaPassword("vGGZFRdwO>zfALfe2", "vGGZFRdwO>zfALfe2");
      assertEquals((-2L), long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      boolean boolean0 = gestor_Utilizadores0.existeUtilizador((-834L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      Long long0 = new Long(816L);
      hashMap0.put("", long0);
      gestor_Utilizadores0.setIdUtilizadores(hashMap0);
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Long long0 = new Long(488L);
      Utilizador utilizador0 = new Utilizador("TP2.Gestor_Utilizadores", (String) null, "TP2.Gestor_Utilizadores", long0, " Data de entrega: N/A");
      hashMap0.put(long0, utilizador0);
      gestor_Utilizadores0.setUtilizadores(hashMap0);
      gestor_Utilizadores0.alteraQuantiComprada(488L, 3002);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Map<Long, Utilizador> map0 = gestor_Utilizadores0.getUtilizadores();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>(map0);
      gestor_Utilizadores0.setUtilizadores(hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.voltaAVenderArtigo("a!nj?", 1251L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.imprime1FaturaCompra(1L, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(896L);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.finalizaEncomenda(1L, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.artigosVendidos2((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.verCarrinho(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.getIdCarrinho(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.retiraArtigo("b(v7ann|)AVh_i[5r", 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.alteraQuantiVendida(831L, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.getCarrinho(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.get1Utilizador(1291L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.removeTodosComprador(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.vendeArtigo("(`xt6J'/=>", 3501L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.novoCarrinho(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.passaArtigoParaVendido((String) null, 667L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = gestor_Utilizadores0.clone();
      assertTrue(gestor_Utilizadores1.equals((Object)gestor_Utilizadores0));
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.artigosVendidos(1878L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.meusArtigos((-676L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      String string0 = gestor_Utilizadores0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.imprimeFaturasCompras((-312L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.adicionaFaturaVendedor(1264L, true, 1264L, 1264L, "61wi", 1264L, false, 1264L, (-809.03853675));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.devolveNif((-3228L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.passaVendidoParaVender("Pm-AzR7JN34rOb,8K)", (-2527L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.getEncomendasDevolvidas(3002);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      gestor_Utilizadores0.adicionaUtilizador((String) null, "du:Vq1(jaIB&", "qg}ASV4W", (-312L), "Pm-AzR7JN34rOb,8K)");
      long long0 = gestor_Utilizadores0.verificaPassword((String) null, "{DagW>V");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Set<Long> set0 = gestor_Utilizadores0.chaves();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.getEncomendas(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.imprimeFaturasVendas(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      // Undeclared exception!
      try { 
        gestor_Utilizadores0.alteraQuantiComprada(488L, 3002);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }
}
