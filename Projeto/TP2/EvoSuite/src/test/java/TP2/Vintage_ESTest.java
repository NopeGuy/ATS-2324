/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:26:26 GMT 2024
 */

package TP2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import TP2.Artigo;
import TP2.Encomenda;
import TP2.GestorEncomendas;
import TP2.Gestor_Artigos;
import TP2.Gestor_Transportadoras;
import TP2.Gestor_Utilizadores;
import TP2.Mala;
import TP2.Menu;
import TP2.Padrao;
import TP2.Tamanho;
import TP2.Transportadora;
import TP2.Utilizador;
import TP2.Vintage;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vintage_ESTest extends Vintage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderMala(1L, localDate0, "", "I@)y1{p'm2*%u6K", 0.0, true, 1863, 199, 5, (-1454), "", 5, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderTshit(0L, (LocalDate) null, "", "Grande", (-1199.95087715), false, 0, (-1136), 0L, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Long long0 = new Long(1L);
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha((-1L), localDate0, "NIF do comprador: ", "+k{uPH", 249.99, false, (-1762), 3, long0, 0L, (-1762), false, (String) null, 2, true, (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.maiorVendedor((-611), (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      Period period0 = Period.of((-1376), (-1376), (-1376));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      vintage0.compradorMaior((-1376), localDate0, localDate0);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.compradorMaior(0, (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 286);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      // Undeclared exception!
      try { 
        vintage0.criaTshirt("<=#la", "<=#la", 0.0, true, 286, 0, (-465L), tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        vintage0.criaSapatilha("+;o", "A Vintage faturou 0.0\u20AC\n", (-3153.5098196831723), false, 1, 56, long0, 7, true, "admin comprou 0 artigos\n", 2, false, 2832.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("", "", "", 0L, "");
      vintage0.login_utlizador("");
      assertEquals(1L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      Long long0 = new Long(0L);
      vintage0.criaSapatilha("+;o", "A Vintage faturou 0.0\u20AC\n", (-3153.5098196831723), false, 1, 56, long0, 7, true, "admin comprou 0 artigos\n", 2, true, 2832.3);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = Boolean.TRUE;
      vintage0.povoamento();
      vintage0.criaMala("", "A Vintage faturou 0.0\u20AC\n", 0.0, true, 2, (-1127), (-2L), 2, "", (-1413), boolean0, 0.0F);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Vintage vintage0 = Vintage.load();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.imprimeFaturasVendas();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.imprimeFaturasCompras();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.imprimeCarrinho();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      long long0 = vintage0.getUtilizador();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Encomendas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 12);
      vintage0.getData();
      assertEquals(12L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      Padrao padrao0 = Padrao.liso;
      Tamanho tamanho0 = Tamanho.M;
      vintage0.criaTshirt("r-Hx", "", 80.0, true, 20, 20, (-2L), tamanho0, padrao0);
      String string0 = vintage0.filtraTshirtsTamanho(tamanho0);
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: r-Hx Marca:  Pre\u00E7o base: 80.0 Novo: true Estado de uso: 20 N\u00FAmero de utilizadores: 20 Disponivel: true Id da transportadora: -2 Id do vendedor: 1 } Tamanho: M Padr\u00E3o: liso}\n", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      Padrao padrao0 = Padrao.liso;
      Tamanho tamanho0 = Tamanho.M;
      vintage0.criaTshirt("r-Hx", "", 80.0, true, 20, 20, (-2L), tamanho0, padrao0);
      Boolean boolean0 = Boolean.TRUE;
      String string0 = vintage0.filtraTshirtsNovo(boolean0);
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: r-Hx Marca:  Pre\u00E7o base: 80.0 Novo: true Estado de uso: 20 N\u00FAmero de utilizadores: 20 Disponivel: true Id da transportadora: -2 Id do vendedor: 1 } Tamanho: M Padr\u00E3o: liso}\n", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      vintage0.filtraMalasDimensao(70);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      String string0 = vintage0.faturas_venda();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      String string0 = vintage0.faturas_compras();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existeEmail("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      vintage0.encomendasRealizadas();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.encomendasDevolvidas();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.verificaPassword("U", "U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      // Undeclared exception!
      try { 
        vintage0.vendedorMaior(19, localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.todosArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      FileSystemHandling.createFolder(evoSuiteFile0);
      try { 
        vintage0.salvarEstado();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.removerTodosArtigosCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      HashMap<Long, Transportadora> hashMap1 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap1);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.meusArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, 0);
      // Undeclared exception!
      try { 
        vintage0.imprimeTransportadorasNormais();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 74);
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomendaPorId((Long) null, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomenda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      Padrao padrao0 = Padrao.liso;
      Tamanho tamanho0 = Tamanho.M;
      vintage0.criaTshirt("r-Hx", "", 80.0, true, 20, 20, (-2L), tamanho0, padrao0);
      // Undeclared exception!
      try { 
        vintage0.filtraTshirtsNovo((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      // Undeclared exception!
      try { 
        vintage0.filtraSapatilhasNovo((Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-1));
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        vintage0.filtraMalasNovo(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.existeIdUtilizador(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      try { 
        vintage0.encomendasDevolver((-4140L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o exite nenhuma encomenda com o ID -4140
         //
         verifyException("TP2.GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.adicionarArtigoCarrinhoPorID("Hk|+$|", 17, (LocalDate) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Hk|+$| n\u00E3o existe!
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      try { 
        vintage0.adicionarArtigoCarrinho("!@[l#FtN^lAG}E~'m");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo !@[l#FtN^lAG}E~'m n\u00E3o existe!
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1798L));
      vintage0.setData(localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.artigoDisponivel("Mala de ombro pequena");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Mala de ombro pequena n\u00E3o existe!
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicinonarTransportadora("", 100.0, 100.0, (-1944L), 100.0, (-261L), false, 92);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, (-1431655764));
      // Undeclared exception!
      try { 
        vintage0.adicionarArtigoCarrinhoPorID("", 1L, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Vintage vintage0 = Vintage.carregarEstado();
      assertNull(vintage0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      try { 
        vintage0.artigoIndisponivel("N\u00E3o h\u00E1 vendedores");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo N\u00E3o h\u00E1 vendedores n\u00E3o existe!
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.getGestor_Artigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.maiorVendedor(5, (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.maiorVendedor(0, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.vendedorMaior(0, localDate0, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.maiorComprador(253, (LocalDate) null, (LocalDate) null);
      assertEquals(" comprou 0 artigos\n", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.maiorComprador(1863, (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      LocalDate localDate0 = vintage0.getData();
      String string0 = vintage0.compradorMaior(1, localDate0, localDate0);
      assertEquals("admin comprou 0 artigos\n", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.vendedorFacturouTempo((LocalDate) null, (LocalDate) null);
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.vendedorFacturou();
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      try { 
        vintage0.finalizarEncomenda();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O carrinho est\u00E1 vazio!
         //
         verifyException("TP2.Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      Padrao padrao0 = Padrao.liso;
      Tamanho tamanho0 = Tamanho.M;
      vintage0.criaTshirt("r-Hx", "", 80.0, true, 20, 20, (-2L), tamanho0, padrao0);
      String string0 = vintage0.meusArtigos();
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: r-Hx Marca:  Pre\u00E7o base: 80.0 Novo: true Estado de uso: 20 N\u00FAmero de utilizadores: 20 Disponivel: true Id da transportadora: -2 Id do vendedor: 1 } Tamanho: M Padr\u00E3o: liso} Pre\u00E7o atual: 80.00\u20AC \n", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("Rici#eTjT}l", "", "", 0L, "");
      String string0 = vintage0.meusArtigos();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      vintage0.removerTodosArtigosCarrinho();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      boolean boolean0 = vintage0.verificaPassword(" (ValorBase * MargemLucroTransportadora * (1 + Imposto)) * 0,9", "");
      assertFalse(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeTransportadoraspremium();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprimeCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeTransportadorasNormais();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        vintage0.criaMala("T", "]}'A", (-1721.788137441165), true, (-3402), 1863, 1863, 0, "", 1455, boolean0, (-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      vintage0.setGestor_Utilizadores(gestor_Utilizadores0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeTransportadoras();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.login_utlizador("@zis$GRRit");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.faturas_compras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      HashMap<Long, Encomenda> hashMap3 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap3);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.adicionarArtigoCarrinho("Azul");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Month month0 = Month.SEPTEMBER;
      LocalDate localDate0 = MockLocalDate.of(2, month0, 3);
      Long long0 = new Long(1L);
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha((-1L), localDate0, "", "?V=a]'@\"d*^*rc|=ku", 0.0, false, 3, 3, long0, 3, (-1127), false, "Puma", 1800, false, (-1127));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      HashMap<Long, Transportadora> hashMap2 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap2);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      String string0 = vintage0.filtraSapatilhasTamanho((-611));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getGestor_Utilizadores();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.encomendasDevolvidas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      boolean boolean0 = vintage0.existe_transpotadoraNormal((-2237L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existeTranspotadora(0L);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = Boolean.TRUE;
      vintage0.filtraMalasNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.encomendasRealizadas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = Boolean.valueOf(false);
      vintage0.filtraTshirtsNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.setUtilizador(516L);
      assertEquals(516L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeFormulas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existeIdUtilizador(0L);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existeArtigoId("joao");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.artigoID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 1855);
      Vintage vintage1 = null;
      try {
        vintage1 = new Vintage(vintage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeFormulasNormais();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasVendas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaCompra(487L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0, 3978);
      vintage0.getGestor_Encomendas();
      assertEquals(3978L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraMalasColecao(0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 12);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderTshit(12, (LocalDate) null, "", "", 424.68933, true, 12, 12, 91L, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaVenda((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.encomendasEmitidasVendedor(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.faturas_venda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraSapatilhasNovo((Boolean) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.alteraFormula(409L, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Trasportadoras();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.removerArtigosCarrinho("`*~");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo `*~ n\u00E3o existe!
         //
         verifyException("TP2.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      vintage0.setGestor_Encomendas(gestorEncomendas0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Padrao padrao0 = Padrao.liso;
      vintage0.filtraTshirtsPadrao(padrao0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      vintage0.setGestor_Artigos(gestor_Artigos0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.avancarTempo((LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      HashMap<Long, Transportadora> hashMap0 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap0);
      vintage0.setGestor_Trasportadoras(gestor_Transportadoras0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasDimensao(915);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.salvarEstado();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Tamanho tamanho0 = Tamanho.L;
      vintage0.filtraTshirtsTamanho(tamanho0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.TransportadoraMaiorVolume();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existe_transpotadoraPremium((-2795L));
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      vintage0.povoamento();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraAMarcaSapatilhas("1) (ValorBase * MargemLucroTransportadora * (1 + Imposto)) * 0,9\n2) (ValorBase * (1 + MargemLucroTransportadora + Imposto)) * 0,7\n3) (ValorBase * MargemLucroTransportadora * (1 + Imposto)) * 1,5");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.existeEmail("U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasCompras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasMaterial("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      HashMap<Long, Transportadora> hashMap2 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap2);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      String string0 = vintage0.filtraSapatilhasCor("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      Long long0 = new Long(0L);
      boolean boolean0 = vintage0.comprarArtigo(long0, "admin comprou 0 artigos\n", localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasMarca("A1");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = vintage0.VintageFaturou();
      assertEquals((-1L), vintage0.getUtilizador());
      assertEquals("A Vintage faturou 0.0\u20AC\n", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraTshirtsMarca("MRDG,I\"");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      assertNotNull(vintage0);
      
      long long0 = vintage0.getUtilizador();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(519L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("TP2.GestorEncomendas", e);
      }
  }
}
