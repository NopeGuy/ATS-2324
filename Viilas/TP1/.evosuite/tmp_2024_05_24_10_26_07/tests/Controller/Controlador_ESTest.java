/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:27:03 GMT 2024
 */

package Controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Controller.Controlador;
import Model.Vintage;
import View.Apresentacao;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controlador_ESTest extends Controlador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SystemInUtil.addInputLine("O");
      Apresentacao apresentacao0 = mock(Apresentacao.class, new ViolatedAssumptionAnswer());
      Controlador controlador0 = new Controlador();
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(vintage0).getSessaoAtual();
      // Undeclared exception!
      try { 
        controlador0.interpretador(vintage0, apresentacao0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SystemInUtil.addInputLine("Data do Programa Atualizada: ");
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(vintage0).getSessaoAtual();
      Apresentacao apresentacao0 = mock(Apresentacao.class, new ViolatedAssumptionAnswer());
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.interpretador(vintage0, apresentacao0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.interpretador((Vintage) null, (Apresentacao) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Controlador", e);
      }
  }
}
