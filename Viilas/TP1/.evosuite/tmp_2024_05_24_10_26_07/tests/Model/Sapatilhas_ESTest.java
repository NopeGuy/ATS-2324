/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:28:58 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import java.time.Clock;
import java.time.Instant;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sapatilhas_ESTest extends Sapatilhas_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      LocalDate localDate0 = MockLocalDate.now();
      String string0 = sapatilhas0.toString(localDate0);
      assertEquals("ID: 1\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: \nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: \nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: PREMIUM\nPreco Final: 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Period period0 = Period.ofDays(0);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(45, true, "7", localDate0, sapatilhas_Tipos_Sapatilhas0, "0X6nRx\"", artigo_Estado0, 2325, artigo_Avaliacao0, (String) null, "7", "0X6nRx\"", (-446.0), 45, "7");
      String string0 = sapatilhas0.toString(localDate0);
      assertEquals("ID: 1\nTipo: 0X6nRx\"\nEstado: NOVO\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: null\nMarca: 7\nC\u00F3digo: 0X6nRx\"\nPre\u00E7o Base: -446.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 45.0\nTransportadora: 7\nTamanho Numerico: 45\nAtilhos: true\nCor: 7\nData de Lancamento: 2014-02-14\nTipo de Sapatilhas: NORMAL\nPreco Final: -446.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.setTamanhoNumerico(684);
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertEquals(684, sapatilhas0.getTamanhoNumerico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      Clock clock0 = MockClock.fixed(instant0, zoneOffset0);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(362, false, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 362, artigo_Avaliacao0, (String) null, "", "", 0L, 115.182, (String) null);
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals((-20847.942), double0, 0.01);
      assertEquals(362, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      sapatilhas0.getTiposSapatilhas();
      assertEquals("[MM]~C6$|o7{EH", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setTamanhoNumerico(2150);
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertEquals(2150, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas((-743), true, "g;;T+P@Ve0R^H=:", localDate0, sapatilhas_Tipos_Sapatilhas0, "g;;T+P@Ve0R^H=:", artigo_Estado0, 0, artigo_Avaliacao0, "g;;T+P@Ve0R^H=:", "g;;T+P@Ve0R^H=:", "g;;T+P@Ve0R^H=:", (-985.15440621316), (-2573.00456830824), "g;;T+P@Ve0R^H=:");
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertEquals((-743), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(769, false, "EqBIZPUfX", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "EqBIZPUfX", artigo_Estado0, 769, artigo_Avaliacao0, "", "", "Marca: ", 769, 0.0, ",T?U{");
      sapatilhas0.getDataLancamento();
      assertEquals("EqBIZPUfX", sapatilhas0.getCor());
      assertEquals(769, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setCor((String) null);
      sapatilhas0.getCor();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      String string0 = sapatilhas0.getCor();
      assertEquals("[MM]~C6$|o7{EH", string0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1090);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(1090, true, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-1), artigo_Avaliacao0, "", "", "", (-3870.83066784), (-1), "");
      sapatilhas0.getAtilhos();
      assertEquals(1090, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setNumeroDonos((-1));
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setId(0);
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setId((-1198));
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertFalse(sapatilhas1.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(315);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(315, true, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "'KE", artigo_Estado0, 846, artigo_Avaliacao0, "'KE", "", "", 846, 846, "");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals("", sapatilhas1.getCor());
      assertEquals(315, sapatilhas0.getTamanhoNumerico());
      assertEquals(315, sapatilhas1.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas((-1177), true, "aj$Qbd==$|XOQEKp<m", localDate0, sapatilhas_Tipos_Sapatilhas0, "aj$Qbd==$|XOQEKp<m", artigo_Estado0, (-1177), artigo_Avaliacao0, "M(@", "", "aj$Qbd==$|XOQEKp<m", (-1177), (-1177), "EH");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertEquals((-1177), sapatilhas0.getTamanhoNumerico());
      assertEquals((-1177), sapatilhas1.getTamanhoNumerico());
      assertEquals("aj$Qbd==$|XOQEKp<m", sapatilhas1.getCor());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      // Undeclared exception!
      try { 
        sapatilhas0.toString((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(769, false, "EqBIZPUfX", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "EqBIZPUfX", artigo_Estado0, 769, artigo_Avaliacao0, "", "", "Marca: ", 769, 0.0, ",T?U{");
      // Undeclared exception!
      try { 
        sapatilhas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Period", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sapatilhas sapatilhas0 = null;
      try {
        sapatilhas0 = new Sapatilhas((Sapatilhas) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.getAtilhos();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.getTiposSapatilhas();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.getCor();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas((-1177), true, "aj$Qbd==$|XOQEKp<m", localDate0, sapatilhas_Tipos_Sapatilhas0, "aj$Qbd==$|XOQEKp<m", artigo_Estado0, (-1177), artigo_Avaliacao0, "M(@", "", "aj$Qbd==$|XOQEKp<m", (-1177), (-1177), "EH");
      sapatilhas0.getDataLancamento();
      assertEquals((-1177), sapatilhas0.getTamanhoNumerico());
      assertEquals("aj$Qbd==$|XOQEKp<m", sapatilhas0.getCor());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas1 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas1);
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("[MM]~C6$|o7{EH", sapatilhas0.getCor());
      assertEquals(1966.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      LocalDate localDate0 = MockLocalDate.now();
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals(0.0, double0, 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas1 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas1.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas1);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~C6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~C6$|o7{EH", artigo_Estado0, (-1), artigo_Avaliacao0, "[MM]~C6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~C6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertTrue(sapatilhas0.equals((Object)sapatilhas1));
      assertEquals("[MM]~C6$|o7{EH", sapatilhas1.getCor());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "[MM]~Ca6$|o7{EH", localDate0, sapatilhas_Tipos_Sapatilhas0, "[MM]~Ca6$|o7{EH", artigo_Estado0, 0, artigo_Avaliacao0, "[MM]~Ca6$|o7{EH", "Model.Artigo$Avalia\u00E7\u00E3o", "[MM]~Ca6$|o7{EH", 0.0, 3932.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertEquals("[MM]~Ca6$|o7{EH", sapatilhas1.getCor());
      
      sapatilhas1.setCor("YqXa#Fh~1)\"Yp ;fx\"8");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 1186, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "\n", (-831.13153), 0, "");
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertTrue(sapatilhas1.getAtilhos());
      
      sapatilhas1.setAtilhos(false);
      assertFalse(sapatilhas1.getAtilhos());
      
      Sapatilhas sapatilhas2 = new Sapatilhas(sapatilhas0);
      boolean boolean0 = sapatilhas2.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 1186, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "\n", (-831.13153), 0, "");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      // Undeclared exception!
      try { 
        sapatilhas1.equals(sapatilhas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Sapatilhas", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 0, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "h1,b}0<?/VsrZ~", (-831.13153), 0, "");
      Object object0 = new Object();
      boolean boolean0 = sapatilhas0.equals(object0);
      assertEquals("Model.Sapatilhas", sapatilhas0.getCor());
      assertFalse(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertTrue(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 0, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "h1,b}0<?/VsrZ~", (-831.13153), 0, "");
      boolean boolean0 = sapatilhas0.equals((Object) null);
      assertTrue(sapatilhas0.getAtilhos());
      assertFalse(boolean0);
      assertEquals("Model.Sapatilhas", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 0, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "h1,b}0<?/VsrZ~", (-831.13153), 0, "");
      Sapatilhas sapatilhas1 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Sapatilhas", sapatilhas0.getCor());
      assertTrue(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, true, "Model.Sapatilhas", (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "Model.Sapatilhas", artigo_Estado0, 0, artigo_Avaliacao0, "Model.Sapatilhas", "h1,b}0<?/VsrZ~", "h1,b}0<?/VsrZ~", (-831.13153), 0, "");
      sapatilhas0.setDataLancamento((LocalDate) null);
      assertEquals("Model.Sapatilhas", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertTrue(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      boolean boolean0 = sapatilhas0.equals(sapatilhas0);
      assertTrue(boolean0);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
  }
}
