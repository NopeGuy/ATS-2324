/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:30:15 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.format.DateTimeParseException;
import java.time.temporal.ChronoField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setDescricao("@1cgzGMzD?0EL");
      sapatilhas1.setCodigo("?AM1N)zD:bj?5Ih=M");
      sapatilhas1.equals(sapatilhas0);
      Malas malas0 = new Malas();
      LocalDate localDate0 = null;
      malas0.setNumeroDonos(3781);
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Malas malas1 = malas0.clone();
      sapatilhas1.setEstado(artigo_Estado0);
      // Undeclared exception!
      try { 
        malas1.toString((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Malas malas0 = new Malas();
      malas0.setAno_da_colecao(1941);
      malas0.getDim();
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      malas0.setDim(1.0F);
      sapatilhas0.setCodigo("\n");
      sapatilhas1.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      sapatilhas1.setTamanhoNumerico(2);
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      sapatilhas1.setMarca("");
      malas0.setTransportadora("");
      malas0.setTipo_mala(malas_Tipos_Malas0);
      Sapatilhas sapatilhas2 = new Sapatilhas(sapatilhas1);
      sapatilhas2.setNumeroDonos((-2983));
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 2);
      sapatilhas2.toString(localDate0);
      malas0.equals(sapatilhas2);
      sapatilhas2.getAtilhos();
      malas0.setAno_da_colecao(2);
      Sapatilhas sapatilhas3 = sapatilhas2.clone();
      Artigo.Avaliacao.values();
      sapatilhas0.equals(sapatilhas2);
      malas0.getMaterial();
      Sapatilhas sapatilhas4 = sapatilhas3.clone();
      malas0.setDim(0.0F);
      sapatilhas0.getDescricao();
      Malas malas1 = new Malas(malas0);
      sapatilhas1.equals(malas1);
      sapatilhas4.equals("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Malas malas0 = new Malas();
      malas0.setAno_da_colecao(1941);
      malas0.getDim();
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      malas0.setDim(1.0F);
      sapatilhas1.setAtilhos(true);
      sapatilhas0.setCodigo("\n");
      sapatilhas1.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      sapatilhas1.setMarca("");
      malas0.setTransportadora("");
      malas0.setTipo_mala(malas_Tipos_Malas0);
      Sapatilhas sapatilhas2 = new Sapatilhas(sapatilhas1);
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 2);
      sapatilhas2.toString(localDate0);
      malas0.equals(sapatilhas2);
      sapatilhas2.getAtilhos();
      malas0.setAno_da_colecao(2);
      Sapatilhas sapatilhas3 = sapatilhas2.clone();
      Artigo.Avaliacao.values();
      sapatilhas0.equals(sapatilhas2);
      malas0.getMaterial();
      Sapatilhas sapatilhas4 = sapatilhas3.clone();
      sapatilhas0.getDescricao();
      Malas malas1 = new Malas(malas0);
      sapatilhas1.equals(malas1);
      sapatilhas4.equals("");
      sapatilhas4.getAtilhos();
      // Undeclared exception!
      try { 
        sapatilhas4.equals(sapatilhas2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setCor("}$I;'zI%Zhv;L/!A'!K");
      sapatilhas0.setTransportadora("}$I;'zI%Zhv;L/!A'!K");
      Malas malas0 = new Malas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      sapatilhas1.setEstado(artigo_Estado0);
      sapatilhas1.equals(sapatilhas0);
      sapatilhas1.setPrecoBase(1.0);
      sapatilhas0.setDataLancamento((LocalDate) null);
      sapatilhas1.setTransportadora("&_t>pK|$c}j");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4280L);
      sapatilhas1.toString(localDate0);
      Artigo.Estado.values();
      sapatilhas1.setMarca("&_t>pK|$c}j");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      TShirt tShirt1 = new TShirt(tShirt0);
      tShirt1.setNumeroDonos((-3178));
      tShirt1.equals(tShirt0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setDescricao("h:weQL\\x{y=x8D~");
      sapatilhas1.equals(sapatilhas0);
      Malas malas0 = new Malas();
      LocalDate localDate0 = null;
      // Undeclared exception!
      try { 
        malas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Malas malas0 = new Malas();
      malas0.getTransportadora();
      malas0.setMarca("J6.t7Dkz{R\"o#q8`_");
      malas0.setAno_da_colecao((-3514));
      malas0.setNumeroDonos((-3514));
      malas0.getDescricao();
      malas0.getNumeroDonos();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Artigo.Avaliacao.values();
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setMarca(":#z");
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1L));
      sapatilhas0.toString(localDate0);
      sapatilhas0.setDescricao("");
      sapatilhas0.setId((-1137));
      sapatilhas0.precoFinal((LocalDate) null);
      sapatilhas0.setMarca((String) null);
      sapatilhas0.setCor("'1Upx2");
      System.setCurrentTimeMillis((-3643L));
      sapatilhas0.getNumeroDonos();
      sapatilhas0.getMarca();
      sapatilhas0.getMarca();
      sapatilhas0.toString((LocalDate) null);
      sapatilhas0.getNumeroDonos();
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0, ":#z", (-946), "$VALUES", artigo_Estado0, 26, artigo_Avaliacao0, (String) null, "ID: -1137\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: null\nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: '1Upx2\nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: null\nPreco Final: 0.0\n", "$VALUES", 0, 0.0, (String) null);
      malas0.setDim(1.0F);
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "Tipo: ", artigo_Estado1, 0, artigo_Avaliacao1, "cj:+qoqQmBXvj/cr", "4y<i7\";:^$sk)", "ID: -1137\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: null\nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: '1Upx2\nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: null\nPreco Final: 0.0\n", 1.5, 1.0, (String) null);
      TShirt tShirt1 = new TShirt(tShirt0);
      tShirt1.setPadrao(tShirt_Padrao0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 1.0F, ")\"COfvysYr|'}i5=[<", (-633), "Descri\u00E7\u00E3o: ", artigo_Estado0, (-633), artigo_Avaliacao0, "1dWG'=Yc(zQk|F", "1dWG'=Yc(zQk|F", "1dWG'=Yc(zQk|F", 0.0, 901.0, "{N B5");
      Malas malas1 = new Malas(malas0);
      Malas.Tipos_Malas malas_Tipos_Malas1 = Malas.Tipos_Malas.NORMAL;
      malas1.setTipo_mala(malas_Tipos_Malas1);
      malas1.setMarca("XGLr:P.-F^Kg0k55z6");
      malas0.setNumeroDonos(0);
      malas0.setCorrecaoPreco(1804.07098643777);
      malas1.getTipo_mala();
      malas1.setTipo("{N B5");
      malas1.setId((-633));
      malas1.setTransportadora("");
      Artigo.Estado.values();
      malas1.getTransportadora();
      malas1.clone();
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado1, 0, artigo_Avaliacao1, "", "", "{N B5", (-989.48), 1.0F, ")\"COfvysYr|'}i5=[<");
      TShirt tShirt1 = new TShirt(tShirt0);
      Object object0 = new Object();
      tShirt1.equals(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.setPrecoBase((-1.0));
      sapatilhas1.equals(sapatilhas0);
      sapatilhas1.setPrecoBase(1.0);
      sapatilhas0.setDataLancamento((LocalDate) null);
      sapatilhas1.setTransportadora("&_t>pK|$c}j");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4280L);
      sapatilhas1.toString(localDate0);
      Artigo.Estado.values();
      sapatilhas1.setMarca("&_t>pK|$c}j");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.setTransportadora((String) null);
      sapatilhas1.setMarca("$VALUES");
      sapatilhas1.equals(sapatilhas0);
      Malas malas0 = new Malas();
      LocalDate localDate0 = null;
      // Undeclared exception!
      try { 
        malas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas(1, true, "Tipo: ", localDate0, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, 1, artigo_Avaliacao0, "Tipo: ", "Tipo: ", (String) null, 413.0554, (-317.7313), (String) null);
      sapatilhas0.clone();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas1 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setPrecoBase(1746);
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.IMPECÁVEL;
      Sapatilhas sapatilhas1 = new Sapatilhas(1, true, "#^R,r)zl|}or}Y77`(", localDate0, sapatilhas_Tipos_Sapatilhas1, (String) null, artigo_Estado0, 1746, artigo_Avaliacao1, "M", (String) null, "#^R,r)zl|}or}Y77`(", 0.0, (-1312.4398620494517), (String) null);
      sapatilhas0.equals(sapatilhas1);
      sapatilhas1.getTamanhoNumerico();
      sapatilhas0.toString(localDate0);
      Malas malas0 = new Malas();
      malas0.setMaterial("0Rh`8|`Rt[J8:!d&&");
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "0Rh`8|`Rt[J8:!d&&", artigo_Estado1, 0, artigo_Avaliacao0, "$m.AM#Xf{Y+J&I88", "#^R,r)zl|}or}Y77`(", (String) null, 1746, (-354.8656819), (String) null);
      TShirt tShirt1 = new TShirt(tShirt0);
      TShirt.Padrao tShirt_Padrao1 = TShirt.Padrao.RISCAS;
      tShirt1.setPadrao(tShirt_Padrao1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.getNumeroDonos();
      sapatilhas1.setCodigo("?AM1N)zD:bj?5Ih=M");
      sapatilhas1.equals(sapatilhas0);
      Malas malas0 = new Malas();
      LocalDate localDate0 = null;
      // Undeclared exception!
      try { 
        malas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      String string0 = null;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, (String) null, artigo_Estado0, 2, artigo_Avaliacao0, "<Qzj0<r$EW>H#G1,O", "P>X\"", "P>X\"", (-2286.0), 2, "P>X\"");
      Artigo.Estado artigo_Estado1 = Artigo.Estado.USADO;
      tShirt0.setEstado(artigo_Estado1);
      tShirt0.setCodigo((String) null);
      tShirt0.getTamanho();
      tShirt0.setNumeroDonos(2);
      System.setCurrentTimeMillis(891L);
      tShirt0.clone();
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setNumeroDonos(2955);
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      sapatilhas0.setAvaliacao(artigo_Avaliacao1);
      // Undeclared exception!
      try { 
        ZoneOffset.ofHours(220);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value 220 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Sapatilhas sapatilhas2 = sapatilhas1.clone();
      LocalDate localDate0 = MockLocalDate.now();
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      sapatilhas0.setEstado(artigo_Estado0);
      sapatilhas0.setDataLancamento(localDate0);
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-3044.9805F), "wByl+$", 259, "wByl+$", artigo_Estado1, 45, artigo_Avaliacao0, "wByl+$", "wByl+$", "", 259, (-1.0), "");
      malas0.setDim(2291.0F);
      malas0.getId();
      malas0.getDescricao();
      sapatilhas2.setCorrecaoPreco(2);
      malas0.precoFinal(localDate0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "Transportadora: ", artigo_Estado0, 0, artigo_Avaliacao0, "NOVO", "", "", 1.0, 0, "N[;JM.AqP,");
      tShirt0.setNumeroDonos((-6693));
      tShirt0.clone();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas();
      sapatilhas1.equals(sapatilhas0);
      sapatilhas1.setPrecoBase(1.0);
      sapatilhas0.setDataLancamento((LocalDate) null);
      sapatilhas1.setTransportadora("&_t>pK|$c}j");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4280L);
      sapatilhas1.toString(localDate0);
      Artigo.Estado.values();
      sapatilhas1.setMarca("&_t>pK|$c}j");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 2147483645;
      LocalDate localDate0 = MockLocalDate.now();
      Period period0 = Period.between(localDate0, localDate0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      String string0 = ".?/2G:\\s>>>6R'{bn";
      String string1 = "";
      String string2 = null;
      Sapatilhas sapatilhas0 = new Sapatilhas(2147483645, false, (String) null, localDate1, sapatilhas_Tipos_Sapatilhas0, (String) null, artigo_Estado0, (-1765), artigo_Avaliacao0, (String) null, ".?/2G:s>>>6R'{bn", "", (-1765), (-2372.047), (String) null);
      sapatilhas0.setAvaliacao(artigo_Avaliacao0);
      sapatilhas0.getId();
      sapatilhas0.getPrecoBase();
      String string3 = "Padrao: ";
      // Undeclared exception!
      try { 
        Artigo.Estado.valueOf("Padrao: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant Model.Artigo.Estado.Padrao: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Sapatilhas sapatilhas2 = sapatilhas1.clone();
      LocalDate localDate0 = sapatilhas1.getDataLancamento();
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      sapatilhas0.setEstado(artigo_Estado0);
      sapatilhas0.setDataLancamento(localDate0);
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-3044.9805F), "wByl+$", 259, "wByl+$", artigo_Estado1, 45, artigo_Avaliacao0, "wByl+$", "wByl+$", "", 259, (-1.0), "");
      malas0.setDim(2291.0F);
      malas0.getId();
      malas0.getDescricao();
      sapatilhas2.setCorrecaoPreco(2);
      malas0.precoFinal(localDate0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      tShirt0.clone();
      tShirt0.setCorrecaoPreco((-2821.584848127));
      tShirt0.clone();
      Malas malas0 = new Malas();
      Malas malas1 = new Malas(malas0);
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      malas1.setTipo_mala(malas_Tipos_Malas0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      // Undeclared exception!
      try { 
        sapatilhas1.equals(sapatilhas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 1.0F, ")\"COfvysYr|'}i5=[<", (-633), "Descri\u00E7\u00E3o: ", artigo_Estado0, (-633), artigo_Avaliacao0, "1dWG'=Yc(zQk|F", "1dWG'=Yc(zQk|F", "1dWG'=Yc(zQk|F", 0.0, 901.0, "{N B5");
      Malas malas1 = new Malas(malas0);
      Malas.Tipos_Malas malas_Tipos_Malas1 = Malas.Tipos_Malas.NORMAL;
      malas1.setTipo_mala(malas_Tipos_Malas1);
      malas1.setMarca("XGLr:P.-F^Kg0k55z6");
      malas0.setNumeroDonos(0);
      malas0.setCorrecaoPreco(1804.07098643777);
      malas1.getTipo_mala();
      Malas malas2 = malas0.clone();
      malas1.setTipo("{N B5");
      malas1.setId((-633));
      malas1.setTransportadora(":E^z7klK\"Kb#)IueY");
      Artigo.Estado.values();
      malas2.getTransportadora();
      malas1.clone();
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado1, 0, artigo_Avaliacao1, "", "", "{N B5", (-989.48), 1.0F, ")\"COfvysYr|'}i5=[<");
      TShirt tShirt1 = new TShirt(tShirt0);
      Object object0 = new Object();
      tShirt1.equals(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Malas malas0 = new Malas();
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      malas0.setTipo_mala(malas_Tipos_Malas0);
      malas0.setDim((-1.0F));
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      malas0.precoFinal(localDate0);
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      sapatilhas0.getAtilhos();
      malas0.setDescricao("n(6, ]ib");
      malas0.setAno_da_colecao((-2416));
      malas0.precoFinal(localDate0);
      // Undeclared exception!
      try { 
        Artigo.Estado.valueOf("n(6, ]ib");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant Model.Artigo.Estado.n(6, ]ib
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "<JRSS1g%F5|3b,g", (-1752), "", artigo_Estado0, (-1752), artigo_Avaliacao0, "{:", "<JRSS1g%F5|3b,g", "", (-2026.91713426848), (-432.674040811), "<JRSS1g%F5|3b,g");
      malas0.getMarca();
      ChronoField chronoField0 = ChronoField.YEAR_OF_ERA;
      malas0.equals(chronoField0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 1.0F, "", (-220), "ZIMR62hFR7", artigo_Estado0, 1002, artigo_Avaliacao0, "BDz$0}pUzVxj7gO", (String) null, "", 1002, (-2200.22521), "ZIMR62hFR7");
      malas0.getTipo();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Malas malas0 = new Malas();
      malas0.setId((-431));
      Malas malas1 = new Malas(malas0);
      malas0.setNumeroDonos((-3136));
      malas1.setCodigo("Model.Sapatilhas$Tipos_Sapatilhas");
      malas0.setDim(0.0F);
      malas1.setCodigo("Model.Sapatilhas$Tipos_Sapatilhas");
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      malas0.setCorrecaoPreco((-1.0));
      malas1.setEstado(artigo_Estado0);
      malas0.getCorrecaoPreco();
      malas0.setCorrecaoPreco((-655.9607));
      malas1.getPrecoBase();
      malas0.setTipo("Model.Sapatilhas$Tipos_Sapatilhas");
      malas0.setMaterial("Tipo de Sapatilhas: ");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Malas malas0 = new Malas();
      malas0.setDescricao((String) null);
      malas0.setTipo("%f&ET");
      malas0.setDescricao("JG");
      malas0.setCorrecaoPreco(0.0);
      malas0.setMaterial((String) null);
      malas0.setNumeroDonos(4);
      malas0.getNumeroDonos();
      malas0.getEstado();
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setNumeroDonos(4);
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setDataLancamento((LocalDate) null);
      Malas malas1 = malas0.clone();
      malas1.setCorrecaoPreco((-1801.898527071));
      malas1.getNumeroDonos();
      sapatilhas1.getDescricao();
      malas0.setTransportadora("");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Artigo.Avaliacao.values();
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, (String) null, 0, "N\u00FAmero de Donos: ", artigo_Estado0, 0, artigo_Avaliacao0, "N\u00FAmero de Donos: ", "N\u00FAmero de Donos: ", "Model.Sapatilhas", 0.0F, 0.0, "\"lU4");
      malas0.setMaterial("~V3O+u");
      Malas malas1 = new Malas(malas0);
      malas1.clone();
      malas1.setPrecoBase((-362.513969692));
      malas1.setEstado(artigo_Estado0);
      malas0.setTipo_mala(malas_Tipos_Malas0);
      malas0.setTipo("!>f@uE=");
      malas1.getAno_da_colecao();
      malas1.clone();
      // Undeclared exception!
      try { 
        MockLocalDate.parse((CharSequence) "Model.Sapatilhas");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // Text 'Model.Sapatilhas' could not be parsed at index 0
         //
         verifyException("java.time.format.DateTimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 0, "Pre\u00E7o Base: ", artigo_Estado0, 0, artigo_Avaliacao0, "Pre\u00E7o Base: ", "", "A`NwkK?LNg/)V5wZ'p", 0, 0.0, (String) null);
      Malas malas1 = new Malas(malas0);
      malas1.getDescricao();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      sapatilhas0.setCorrecaoPreco((-1954.1));
      sapatilhas0.getAvaliacao();
      // Undeclared exception!
      try { 
        Period.parse((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // text
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "-M]VWpP.fn", artigo_Estado0, 0, artigo_Avaliacao0, "Model.Artigo", "Model.Artigo", "-M]VWpP.fn", 0.0, (-1.0), "RU}u6/PysCo\"\f");
      assertNotNull(tShirt0);
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals((-1.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("Model.Artigo", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setId(0);
      assertEquals(0, tShirt0.getId());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals((-1.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("Model.Artigo", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setMarca("RU}u6/PysCo\"\f");
      assertEquals(0, tShirt0.getId());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals((-1.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setCorrecaoPreco(1081);
      assertEquals(0, tShirt0.getId());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1081.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      TShirt tShirt1 = tShirt0.clone();
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0, tShirt0.getId());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1081.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt1.getAvaliacao());
      assertEquals("RU}u6/PysCo\"\f", tShirt1.getTransportadora());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt1.getCodigo());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals("Model.Artigo", tShirt1.getDescricao());
      assertEquals("-M]VWpP.fn", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt1.getPadrao());
      assertEquals(TShirt.Tamanho.M, tShirt1.getTamanho());
      assertEquals("RU}u6/PysCo\"\f", tShirt1.getMarca());
      assertEquals(1081.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt1.getId());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      
      tShirt0.setCorrecaoPreco(1936.98);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(0, tShirt0.getId());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setId(1081);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setTipo("-M]VWpP.fn");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setTransportadora((String) null);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertNull(tShirt0.getTransportadora());
      assertEquals("-M]VWpP.fn", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setCodigo((String) null);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("-M]VWpP.fn", tShirt0.getTipo());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      tShirt0.setTipo("4m,");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals("4m,", tShirt0.getTipo());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      String string0 = tShirt0.getCodigo();
      assertNull(string0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals("4m,", tShirt0.getTipo());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      
      Artigo.Estado[] artigo_EstadoArray0 = Artigo.Estado.values();
      assertNotNull(artigo_EstadoArray0);
      assertEquals(2, artigo_EstadoArray0.length);
      
      tShirt1.setCodigo("(j");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("4m,", tShirt0.getTipo());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(1936.98, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", tShirt0.getDescricao());
      assertEquals("RU}u6/PysCo\"\f", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertNull(tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(1081, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt1.getAvaliacao());
      assertEquals("RU}u6/PysCo\"\f", tShirt1.getTransportadora());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals("Model.Artigo", tShirt1.getDescricao());
      assertEquals("-M]VWpP.fn", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt1.getPadrao());
      assertEquals(TShirt.Tamanho.M, tShirt1.getTamanho());
      assertEquals("RU}u6/PysCo\"\f", tShirt1.getMarca());
      assertEquals(1081.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt1.getId());
      assertEquals("(j", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      
      int int0 = malas0.getAno_da_colecao();
      assertEquals(0, int0);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      
      malas0.setPrecoBase(4536.537913);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(4536.537913, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      
      Malas malas1 = malas0.clone();
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(4536.537913, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertNull(malas1.getAvaliacao());
      assertNull(malas1.getEstado());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("", malas1.getMaterial());
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals("", malas1.getTipo());
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals(2, malas1.getId());
      assertNull(malas1.getTransportadora());
      assertEquals("", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertEquals("", malas1.getCodigo());
      assertEquals(4536.537913, malas1.getPrecoBase(), 0.01);
      assertEquals("", malas1.getMarca());
      
      double double0 = malas0.getPrecoBase();
      assertTrue(malas0.equals((Object)malas1));
      assertNotSame(malas0, malas1);
      assertEquals(4536.537913, double0, 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(4536.537913, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      
      Month month0 = Month.DECEMBER;
      LocalDate localDate0 = MockLocalDate.of(0, month0, 3);
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(0, false, "|%gqb^J/,DX !es6j", localDate0, sapatilhas_Tipos_Sapatilhas0, "|%gqb^J/,DX !es6j", artigo_Estado1, (-1), artigo_Avaliacao1, "Model.Artigo", "", "Model.Artigo", 1.5, 4536.537913, (String) null);
      assertNotNull(sapatilhas0);
      assertFalse(artigo_Avaliacao1.equals((Object) artigo_Avaliacao0));
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getTipo());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(4536.537913, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Artigo", sapatilhas0.getDescricao());
      assertEquals(1.5, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Model.Artigo", sapatilhas0.getCodigo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(3, sapatilhas0.getId());
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertFalse(artigo_Avaliacao1.equals((Object) artigo_Avaliacao0));
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getTipo());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(4536.537913, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Artigo", sapatilhas0.getDescricao());
      assertEquals(1.5, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Model.Artigo", sapatilhas0.getCodigo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(3, sapatilhas0.getId());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas1.getCor());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("Model.Artigo", sapatilhas1.getCodigo());
      assertEquals(Artigo.Estado.NOVO, sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(3, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("Model.Artigo", sapatilhas1.getDescricao());
      assertEquals(1.5, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(4536.537913, sapatilhas1.getCorrecaoPreco(), 0.01);
      
      Sapatilhas sapatilhas2 = sapatilhas1.clone();
      assertNotNull(sapatilhas2);
      assertFalse(artigo_Avaliacao1.equals((Object) artigo_Avaliacao0));
      assertSame(artigo_Estado1, artigo_Estado0);
      assertNotSame(artigo_Avaliacao1, artigo_Avaliacao0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getCor());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas0.getTipo());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(4536.537913, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("Model.Artigo", sapatilhas0.getDescricao());
      assertEquals(1.5, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Model.Artigo", sapatilhas0.getCodigo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(3, sapatilhas0.getId());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas1.getCor());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("Model.Artigo", sapatilhas1.getCodigo());
      assertEquals(Artigo.Estado.NOVO, sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(3, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("Model.Artigo", sapatilhas1.getDescricao());
      assertEquals(1.5, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(4536.537913, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("Model.Artigo", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, sapatilhas2.getEstado());
      assertEquals(1.5, sapatilhas2.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(4536.537913, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas2.getTamanhoNumerico());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas2.getTipo());
      assertFalse(sapatilhas2.getAtilhos());
      assertEquals("", sapatilhas2.getMarca());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("|%gqb^J/,DX !es6j", sapatilhas2.getCor());
      assertEquals("Model.Artigo", sapatilhas2.getDescricao());
      assertEquals(3, sapatilhas2.getId());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      int int0 = malas0.getAno_da_colecao();
      assertEquals(0, int0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      malas0.setCodigo("7O='M^F0<Q)~");
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      malas0.setTipo("7O='M^F0<Q)~");
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      int int1 = malas0.getNumeroDonos();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      malas0.setNumeroDonos(0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      malas0.setAvaliacao(artigo_Avaliacao0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      double double0 = malas0.getCorrecaoPreco();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      boolean boolean0 = malas0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("7O='M^F0<Q)~", malas0.getTipo());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("7O='M^F0<Q)~", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      Sapatilhas sapatilhas0 = null;
      try {
        sapatilhas0 = new Sapatilhas((Sapatilhas) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      
      malas0.setDescricao("IB:@DfnI*nC[|q`>kt=");
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      
      Malas malas1 = new Malas(malas0);
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("", malas1.getMaterial());
      assertNull(malas1.getAvaliacao());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertNull(malas1.getTransportadora());
      
      malas1.setCorrecaoPreco(604.0);
      assertTrue(malas0.equals((Object)malas1));
      assertTrue(malas1.equals((Object)malas0));
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(604.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals("", malas1.getMaterial());
      assertNull(malas1.getAvaliacao());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertNull(malas1.getTransportadora());
      
      malas1.setAno_da_colecao(3);
      assertFalse(malas0.equals((Object)malas1));
      assertFalse(malas1.equals((Object)malas0));
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(604.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals("", malas1.getMaterial());
      assertNull(malas1.getAvaliacao());
      assertEquals(3, malas1.getAno_da_colecao());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertNull(malas1.getTransportadora());
      
      Malas malas2 = new Malas(malas1);
      assertNotNull(malas2);
      assertFalse(malas0.equals((Object)malas1));
      assertFalse(malas1.equals((Object)malas0));
      assertFalse(malas2.equals((Object)malas0));
      assertTrue(malas2.equals((Object)malas1));
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(604.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals("", malas1.getMaterial());
      assertNull(malas1.getAvaliacao());
      assertEquals(3, malas1.getAno_da_colecao());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertNull(malas1.getTransportadora());
      assertEquals("", malas2.getMarca());
      assertEquals(0.0, malas2.getPrecoBase(), 0.01);
      assertEquals(1, malas2.getId());
      assertEquals(3, malas2.getAno_da_colecao());
      assertNull(malas2.getTipo_mala());
      assertEquals("", malas2.getTipo());
      assertNull(malas2.getAvaliacao());
      assertNull(malas2.getTransportadora());
      assertEquals(0, malas2.getNumeroDonos());
      assertEquals("", malas2.getCodigo());
      assertEquals(604.0, malas2.getCorrecaoPreco(), 0.01);
      assertNull(malas2.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas2.getDescricao());
      assertEquals("", malas2.getMaterial());
      assertEquals(0.0F, malas2.getDim(), 0.01F);
      
      int int0 = malas2.getNumeroDonos();
      assertFalse(malas0.equals((Object)malas1));
      assertFalse(malas0.equals((Object)malas2));
      assertTrue(malas1.equals((Object)malas2));
      assertFalse(malas1.equals((Object)malas0));
      assertFalse(malas2.equals((Object)malas0));
      assertTrue(malas2.equals((Object)malas1));
      assertNotSame(malas0, malas1);
      assertNotSame(malas0, malas2);
      assertNotSame(malas1, malas0);
      assertNotSame(malas1, malas2);
      assertNotSame(malas2, malas1);
      assertNotSame(malas2, malas0);
      assertEquals(0, int0);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas1.getDescricao());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(604.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals("", malas1.getMaterial());
      assertNull(malas1.getAvaliacao());
      assertEquals(3, malas1.getAno_da_colecao());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertNull(malas1.getTransportadora());
      assertEquals("", malas2.getMarca());
      assertEquals(0.0, malas2.getPrecoBase(), 0.01);
      assertEquals(1, malas2.getId());
      assertEquals(3, malas2.getAno_da_colecao());
      assertNull(malas2.getTipo_mala());
      assertEquals("", malas2.getTipo());
      assertNull(malas2.getAvaliacao());
      assertNull(malas2.getTransportadora());
      assertEquals(0, malas2.getNumeroDonos());
      assertEquals("", malas2.getCodigo());
      assertEquals(604.0, malas2.getCorrecaoPreco(), 0.01);
      assertNull(malas2.getEstado());
      assertEquals("IB:@DfnI*nC[|q`>kt=", malas2.getDescricao());
      assertEquals("", malas2.getMaterial());
      assertEquals(0.0F, malas2.getDim(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt0.setDescricao("");
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt0.setTipo("");
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      tShirt0.setAvaliacao(artigo_Avaliacao0);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      TShirt tShirt1 = (TShirt)tShirt0.clone();
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0, tShirt1.getNumeroDonos());
      
      tShirt1.setNumeroDonos((-198));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals((-198), tShirt1.getNumeroDonos());
      
      TShirt tShirt2 = (TShirt)tShirt1.clone();
      assertNotNull(tShirt2);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertTrue(tShirt2.equals((Object)tShirt1));
      assertTrue(tShirt2.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertNotSame(tShirt2, tShirt0);
      assertNotSame(tShirt2, tShirt1);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals((-198), tShirt1.getNumeroDonos());
      assertEquals(1, tShirt2.getId());
      assertNull(tShirt2.getTamanho());
      assertEquals("", tShirt2.getMarca());
      assertEquals((-198), tShirt2.getNumeroDonos());
      assertEquals(0.0, tShirt2.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt2.getCodigo());
      assertNull(tShirt2.getEstado());
      assertNull(tShirt2.getPadrao());
      assertNull(tShirt2.getTransportadora());
      assertEquals("", tShirt2.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt2.getAvaliacao());
      assertEquals(0.0, tShirt2.getPrecoBase(), 0.01);
      assertEquals("", tShirt2.getTipo());
      
      String string0 = tShirt0.getTransportadora();
      assertNull(string0);
      assertTrue(tShirt0.equals((Object)tShirt2));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      String string1 = tShirt1.getDescricao();
      assertNotNull(string1);
      assertTrue(tShirt0.equals((Object)tShirt2));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertEquals("", string1);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals((-198), tShirt1.getNumeroDonos());
      
      String string2 = tShirt1.getTipo();
      assertNotNull(string2);
      assertTrue(tShirt0.equals((Object)tShirt2));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertTrue(string2.equals((Object)string1));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertEquals("", string2);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals((-198), tShirt1.getNumeroDonos());
      
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-198), "", (-198), "Transportadora: ", artigo_Estado0, (-198), artigo_Avaliacao1, "", "", "", 0.0, (-1270.456), "");
      assertNotNull(malas0);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertEquals("Transportadora: ", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals((-1270.456), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals((-198.0F), malas0.getDim(), 0.01F);
      assertEquals((-198), malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(2, malas0.getId());
      
      Malas malas1 = new Malas(malas0);
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertEquals("Transportadora: ", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals((-1270.456), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals((-198.0F), malas0.getDim(), 0.01F);
      assertEquals((-198), malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(2, malas0.getId());
      assertEquals("", malas1.getMarca());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, malas1.getEstado());
      assertEquals("", malas1.getDescricao());
      assertEquals("Transportadora: ", malas1.getTipo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      assertEquals("", malas1.getTransportadora());
      assertEquals(2, malas1.getId());
      assertEquals("", malas1.getCodigo());
      assertNull(malas1.getAvaliacao());
      assertEquals((-1270.456), malas1.getCorrecaoPreco(), 0.01);
      assertEquals((-198), malas1.getAno_da_colecao());
      assertEquals("", malas1.getMaterial());
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals((-198.0F), malas1.getDim(), 0.01F);
      
      malas1.setMaterial("");
      assertTrue(malas0.equals((Object)malas1));
      assertTrue(malas1.equals((Object)malas0));
      assertSame(artigo_Avaliacao1, artigo_Avaliacao0);
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertEquals("Transportadora: ", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals((-1270.456), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals((-198.0F), malas0.getDim(), 0.01F);
      assertEquals((-198), malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(2, malas0.getId());
      assertEquals("", malas1.getMarca());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, malas1.getEstado());
      assertEquals("", malas1.getDescricao());
      assertEquals("Transportadora: ", malas1.getTipo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      assertEquals("", malas1.getTransportadora());
      assertEquals(2, malas1.getId());
      assertEquals("", malas1.getCodigo());
      assertNull(malas1.getAvaliacao());
      assertEquals((-1270.456), malas1.getCorrecaoPreco(), 0.01);
      assertEquals((-198), malas1.getAno_da_colecao());
      assertEquals("", malas1.getMaterial());
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals((-198.0F), malas1.getDim(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 10.0F, (String) null, 3834, "USADO", artigo_Estado0, 0, artigo_Avaliacao0, "USADO", "He", "IMPEC\u00C1VEL", 270.0977, (-1.0), "IMPEC\u00C1VEL");
      assertNotNull(malas0);
      assertEquals("IMPEC\u00C1VEL", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("IMPEC\u00C1VEL", malas0.getCodigo());
      assertEquals("USADO", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(10.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("USADO", malas0.getDescricao());
      assertEquals(270.0977, malas0.getPrecoBase(), 0.01);
      assertEquals(3834, malas0.getAno_da_colecao());
      assertEquals("He", malas0.getMarca());
      
      malas0.setTipo_mala(malas_Tipos_Malas0);
      assertEquals("IMPEC\u00C1VEL", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("IMPEC\u00C1VEL", malas0.getCodigo());
      assertEquals("USADO", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(10.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("USADO", malas0.getDescricao());
      assertEquals(270.0977, malas0.getPrecoBase(), 0.01);
      assertEquals(3834, malas0.getAno_da_colecao());
      assertEquals("He", malas0.getMarca());
      
      malas0.setAno_da_colecao(0);
      assertEquals("IMPEC\u00C1VEL", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("IMPEC\u00C1VEL", malas0.getCodigo());
      assertEquals("USADO", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(10.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("USADO", malas0.getDescricao());
      assertEquals(270.0977, malas0.getPrecoBase(), 0.01);
      assertEquals("He", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      
      malas0.setMarca("^}:dGZ1E3");
      assertEquals("IMPEC\u00C1VEL", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("IMPEC\u00C1VEL", malas0.getCodigo());
      assertEquals("USADO", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(10.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("USADO", malas0.getDescricao());
      assertEquals(270.0977, malas0.getPrecoBase(), 0.01);
      assertEquals("^}:dGZ1E3", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      
      Artigo.Avaliacao artigo_Avaliacao1 = malas0.getAvaliacao();
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertSame(artigo_Avaliacao1, artigo_Avaliacao0);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, artigo_Avaliacao1);
      assertEquals("IMPEC\u00C1VEL", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals("IMPEC\u00C1VEL", malas0.getCodigo());
      assertEquals("USADO", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals((-1.0), malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(10.0F, malas0.getDim(), 0.01F);
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals("USADO", malas0.getDescricao());
      assertEquals(270.0977, malas0.getPrecoBase(), 0.01);
      assertEquals("^}:dGZ1E3", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 987.22156F, "XA?c1rQ0yZ)X`)3/LM", 45, "$", artigo_Estado0, 45, artigo_Avaliacao0, "$", "", "S", 987.22156F, 2064.3, "");
      assertNotNull(malas0);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals(987.22156F, malas0.getDim(), 0.01F);
      assertEquals(1, malas0.getId());
      assertEquals("$", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getMaterial());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setTipo("},>LupfW0 ");
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(987.22156F, malas0.getDim(), 0.01F);
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getMaterial());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setId(0);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(987.22156F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getMaterial());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setDim(877.44147F);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getMaterial());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setTipo_mala(malas_Tipos_Malas0);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getMaterial());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setMaterial(".@qbTEUP&={");
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals(".@qbTEUP&={", malas0.getMaterial());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setNumeroDonos(45);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals(".@qbTEUP&={", malas0.getMaterial());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      int int0 = malas0.getId();
      assertEquals(0, int0);
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals(".@qbTEUP&={", malas0.getMaterial());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("S", malas0.getCodigo());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
      
      malas0.setCodigo("XA?c1rQ0yZ)X`)3/LM");
      assertEquals(2064.3, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("$", malas0.getDescricao());
      assertEquals(987.2215576171875, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTransportadora());
      assertEquals(45, malas0.getNumeroDonos());
      assertEquals("},>LupfW0 ", malas0.getTipo());
      assertEquals(877.44147F, malas0.getDim(), 0.01F);
      assertEquals(".@qbTEUP&={", malas0.getMaterial());
      assertEquals("XA?c1rQ0yZ)X`)3/LM", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getId());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(45, malas0.getAno_da_colecao());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "NORMAL", artigo_Estado0, 0, artigo_Avaliacao0, "NORMAL", "N\u00FAmero de Donos: ", "N\u00FAmero de Donos: ", 0.0, 0.0, "NORMAL");
      assertNotNull(tShirt0);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getMarca());
      assertEquals("NORMAL", tShirt1.getDescricao());
      assertEquals("NORMAL", tShirt1.getTipo());
      assertEquals(1, tShirt1.getId());
      assertEquals("NORMAL", tShirt1.getTransportadora());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      
      Artigo.Avaliacao artigo_Avaliacao1 = Artigo.Avaliacao.SATISFATÓRIO;
      tShirt0.setAvaliacao(artigo_Avaliacao1);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertNotSame(tShirt0, tShirt1);
      assertSame(artigo_Avaliacao1, artigo_Avaliacao0);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt1.setTipo("N\u00FAmero de Donos: ");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getMarca());
      assertEquals("NORMAL", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("NORMAL", tShirt1.getTransportadora());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getTipo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      
      TShirt tShirt2 = tShirt1.clone();
      assertNotNull(tShirt2);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertTrue(tShirt2.equals((Object)tShirt0));
      assertTrue(tShirt2.equals((Object)tShirt1));
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertNotSame(tShirt2, tShirt0);
      assertNotSame(tShirt2, tShirt1);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getMarca());
      assertEquals("NORMAL", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("NORMAL", tShirt1.getTransportadora());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getTipo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertEquals("N\u00FAmero de Donos: ", tShirt2.getTipo());
      assertEquals(Artigo.Estado.USADO, tShirt2.getEstado());
      assertEquals("NORMAL", tShirt2.getTransportadora());
      assertEquals(0.0, tShirt2.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt2.getId());
      assertEquals("NORMAL", tShirt2.getDescricao());
      assertEquals(0, tShirt2.getNumeroDonos());
      assertEquals(TShirt.Padrao.LISO, tShirt2.getPadrao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt2.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt2.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt2.getTamanho());
      assertEquals("N\u00FAmero de Donos: ", tShirt2.getMarca());
      assertEquals(0.0, tShirt2.getPrecoBase(), 0.01);
      
      tShirt1.setPrecoBase(0.0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt0.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getMarca());
      assertEquals("NORMAL", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("NORMAL", tShirt1.getTransportadora());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getTipo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      
      TShirt tShirt3 = tShirt1.clone();
      assertNotNull(tShirt3);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt0.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt2));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertTrue(tShirt3.equals((Object)tShirt2));
      assertTrue(tShirt3.equals((Object)tShirt1));
      assertTrue(tShirt3.equals((Object)tShirt0));
      assertSame(artigo_Avaliacao0, artigo_Avaliacao1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt3);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt3);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt1, tShirt2);
      assertNotSame(tShirt3, tShirt1);
      assertNotSame(tShirt3, tShirt0);
      assertNotSame(tShirt3, tShirt2);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getCodigo());
      assertEquals("NORMAL", tShirt0.getDescricao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt0.getMarca());
      assertEquals("NORMAL", tShirt0.getTipo());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("NORMAL", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getMarca());
      assertEquals("NORMAL", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("NORMAL", tShirt1.getTransportadora());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("N\u00FAmero de Donos: ", tShirt1.getTipo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertEquals("NORMAL", tShirt3.getTransportadora());
      assertEquals(TShirt.Padrao.LISO, tShirt3.getPadrao());
      assertEquals("N\u00FAmero de Donos: ", tShirt3.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt3.getTamanho());
      assertEquals(0.0, tShirt3.getPrecoBase(), 0.01);
      assertEquals(0, tShirt3.getNumeroDonos());
      assertEquals("N\u00FAmero de Donos: ", tShirt3.getTipo());
      assertEquals(0.0, tShirt3.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt3.getEstado());
      assertEquals("N\u00FAmero de Donos: ", tShirt3.getMarca());
      assertEquals("NORMAL", tShirt3.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt3.getAvaliacao());
      assertEquals(1, tShirt3.getId());
      
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      
      Sapatilhas sapatilhas1 = sapatilhas0.clone();
      assertNotNull(sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      
      Artigo.Estado[] artigo_EstadoArray0 = Artigo.Estado.values();
      assertNotNull(artigo_EstadoArray0);
      assertEquals(2, artigo_EstadoArray0.length);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      String string0 = sapatilhas0.toString(localDate0);
      assertNotNull(string0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertEquals("ID: 2\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: \nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: \nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: null\nPreco Final: 0.0\n", string0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      
      String string1 = sapatilhas1.getTransportadora();
      assertNull(string1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      
      sapatilhas1.setTransportadora("OQZ<*0mT15<_'%>cw`");
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("OQZ<*0mT15<_'%>cw`", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      
      String string0 = sapatilhas1.getTipo();
      assertNotNull(string0);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", string0);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("OQZ<*0mT15<_'%>cw`", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      
      Sapatilhas sapatilhas2 = sapatilhas0.clone();
      assertNotNull(sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas2.getAtilhos());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals("", sapatilhas2.getCor());
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getMarca());
      assertEquals(0, sapatilhas2.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals(1, sapatilhas2.getId());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertNull(sapatilhas2.getTiposSapatilhas());
      
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(2, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(2, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(2, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getTipo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      
      tShirt1.setTipo("OQZ<*0mT15<_'%>cw`");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(2, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals("OQZ<*0mT15<_'%>cw`", tShirt1.getTipo());
      assertNull(tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(2, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      
      boolean boolean0 = tShirt1.equals(sapatilhas1);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas1.equals((Object)sapatilhas2));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertFalse(boolean0);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("OQZ<*0mT15<_'%>cw`", sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(2, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals("OQZ<*0mT15<_'%>cw`", tShirt1.getTipo());
      assertNull(tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(2, tShirt1.getId());
      assertEquals("", tShirt1.getMarca());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      tShirt0.setPadrao(tShirt_Padrao0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertNull(tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getCodigo());
      assertNull(tShirt1.getTransportadora());
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      tShirt1.setAvaliacao(artigo_Avaliacao0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getCodigo());
      assertNull(tShirt1.getTransportadora());
      
      tShirt1.setAvaliacao(artigo_Avaliacao0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals("", tShirt1.getCodigo());
      assertNull(tShirt1.getTransportadora());
      
      tShirt0.setCodigo("Ano da cole\u00E7\u00E3o: ");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Ano da cole\u00E7\u00E3o: ", tShirt0.getCodigo());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      tShirt1.setId(0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Ano da cole\u00E7\u00E3o: ", tShirt0.getCodigo());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getId());
      assertEquals("", tShirt1.getCodigo());
      assertNull(tShirt1.getTransportadora());
      
      tShirt1.setCodigo("?SMkj+tMoyR-OS");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Ano da cole\u00E7\u00E3o: ", tShirt0.getCodigo());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("?SMkj+tMoyR-OS", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getId());
      assertNull(tShirt1.getTransportadora());
      
      String string0 = tShirt1.getCodigo();
      assertNotNull(string0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("?SMkj+tMoyR-OS", string0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Ano da cole\u00E7\u00E3o: ", tShirt0.getCodigo());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("?SMkj+tMoyR-OS", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getEstado());
      assertEquals(Artigo.Avaliacao.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getId());
      assertNull(tShirt1.getTransportadora());
      
      tShirt0.setTransportadora("");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getEstado());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Ano da cole\u00E7\u00E3o: ", tShirt0.getCodigo());
      assertNull(tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      Artigo.Estado[] artigo_EstadoArray0 = Artigo.Estado.values();
      assertNotNull(artigo_EstadoArray0);
      assertEquals(2, artigo_EstadoArray0.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1076);
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas(1076, true, (String) null, localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 2, artigo_Avaliacao0, "", (String) null, (String) null, 2, 0.0, (String) null);
      assertNotNull(sapatilhas0);
      assertEquals(Artigo.Avaliacao.BOM, sapatilhas0.getAvaliacao());
      assertEquals(1076, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getMarca());
      assertNull(sapatilhas0.getCor());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getCodigo());
      assertEquals(Artigo.Estado.USADO, sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(2.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(2, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertTrue(sapatilhas0.getAtilhos());
      
      double double0 = sapatilhas0.getPrecoBase();
      assertEquals(2.0, double0, 0.01);
      assertEquals(Artigo.Avaliacao.BOM, sapatilhas0.getAvaliacao());
      assertEquals(1076, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getMarca());
      assertNull(sapatilhas0.getCor());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getCodigo());
      assertEquals(Artigo.Estado.USADO, sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(2.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(2, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertTrue(sapatilhas0.getAtilhos());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      tShirt0.setId((-5142));
      assertEquals((-5142), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      tShirt0.setAvaliacao(artigo_Avaliacao0);
      assertEquals((-5142), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      boolean boolean0 = tShirt0.equals("Zyw");
      assertFalse(boolean0);
      assertEquals((-5142), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      int int0 = sapatilhas0.getTamanhoNumerico();
      assertEquals(0, int0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      String string0 = sapatilhas0.getCodigo();
      assertNotNull(string0);
      assertEquals("", string0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      tShirt0.setCorrecaoPreco(0.5);
      assertEquals((-5142), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.5, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(169L);
      assertNotNull(localDate0);
      
      double double0 = tShirt0.precoFinal(localDate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-5142), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getPadrao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals(0.5, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      
      sapatilhas0.setCor("Zyw");
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Zyw", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      Artigo.Avaliacao[] artigo_AvaliacaoArray0 = Artigo.Avaliacao.values();
      assertNotNull(artigo_AvaliacaoArray0);
      assertEquals(3, artigo_AvaliacaoArray0.length);
      
      boolean boolean1 = sapatilhas0.getAtilhos();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Zyw", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      boolean boolean2 = sapatilhas0.equals("~33nzf@VhwB2x!zB4~j");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("Zyw", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      
      malas0.setMaterial("");
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      
      String string0 = malas0.getDescricao();
      assertNotNull(string0);
      assertEquals("", string0);
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.BOM;
      tShirt0.setNumeroDonos(2014);
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertEquals(2014, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt0.setAvaliacao(artigo_Avaliacao0);
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals(2014, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt0.setAvaliacao(artigo_Avaliacao0);
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getEstado());
      assertEquals(Artigo.Avaliacao.BOM, tShirt0.getAvaliacao());
      assertEquals(2014, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 30.0F, (String) null, (-1010), "Marca: ", artigo_Estado0, 407, artigo_Avaliacao0, "iW9z+14p=^b%", "iW9z+14p=^b%", "iW9z+14p=^b%", 0.0, 30.0F, "");
      assertNotNull(malas0);
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertEquals(30.0F, malas0.getDim(), 0.01F);
      assertEquals("Marca: ", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("iW9z+14p=^b%", malas0.getCodigo());
      assertEquals(30.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getTransportadora());
      assertNull(malas0.getMaterial());
      assertEquals("iW9z+14p=^b%", malas0.getDescricao());
      assertEquals((-1010), malas0.getAno_da_colecao());
      assertEquals("iW9z+14p=^b%", malas0.getMarca());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      
      int int0 = malas0.getAno_da_colecao();
      assertEquals((-1010), int0);
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertEquals(30.0F, malas0.getDim(), 0.01F);
      assertEquals("Marca: ", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("iW9z+14p=^b%", malas0.getCodigo());
      assertEquals(30.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getTransportadora());
      assertNull(malas0.getMaterial());
      assertEquals("iW9z+14p=^b%", malas0.getDescricao());
      assertEquals((-1010), malas0.getAno_da_colecao());
      assertEquals("iW9z+14p=^b%", malas0.getMarca());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      
      Artigo.Estado[] artigo_EstadoArray0 = Artigo.Estado.values();
      assertNotNull(artigo_EstadoArray0);
      assertEquals(2, artigo_EstadoArray0.length);
      
      double double0 = malas0.getCorrecaoPreco();
      assertEquals(30.0, double0, 0.01);
      assertEquals(1, malas0.getId());
      assertNull(malas0.getAvaliacao());
      assertEquals(30.0F, malas0.getDim(), 0.01F);
      assertEquals("Marca: ", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("iW9z+14p=^b%", malas0.getCodigo());
      assertEquals(30.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getTransportadora());
      assertNull(malas0.getMaterial());
      assertEquals("iW9z+14p=^b%", malas0.getDescricao());
      assertEquals((-1010), malas0.getAno_da_colecao());
      assertEquals("iW9z+14p=^b%", malas0.getMarca());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado1 = Artigo.Estado.USADO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "#fVIr=%vvX\" /", artigo_Estado1, 407, artigo_Avaliacao0, "B&FPSY{Yqg", (String) null, "B&FPSY{Yqg", 0.0, 0.0, "iW9z+14p=^b%");
      assertNotNull(tShirt0);
      assertFalse(artigo_Estado1.equals((Object)artigo_Estado0));
      assertEquals(407, tShirt0.getNumeroDonos());
      assertEquals(2, tShirt0.getId());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("B&FPSY{Yqg", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals("iW9z+14p=^b%", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals("B&FPSY{Yqg", tShirt0.getDescricao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("#fVIr=%vvX\" /", tShirt0.getTipo());
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertFalse(artigo_Estado1.equals((Object)artigo_Estado0));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals(407, tShirt0.getNumeroDonos());
      assertEquals(2, tShirt0.getId());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("B&FPSY{Yqg", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals("iW9z+14p=^b%", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals("B&FPSY{Yqg", tShirt0.getDescricao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("#fVIr=%vvX\" /", tShirt0.getTipo());
      assertEquals("iW9z+14p=^b%", tShirt1.getTransportadora());
      assertEquals(TShirt.Padrao.RISCAS, tShirt1.getPadrao());
      assertEquals(TShirt.Tamanho.L, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals("#fVIr=%vvX\" /", tShirt1.getTipo());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertNull(tShirt1.getMarca());
      assertEquals("B&FPSY{Yqg", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("B&FPSY{Yqg", tShirt1.getDescricao());
      assertEquals(407, tShirt1.getNumeroDonos());
      assertEquals(2, tShirt1.getId());
      
      TShirt tShirt2 = tShirt1.clone();
      assertNotNull(tShirt2);
      assertFalse(artigo_Estado1.equals((Object)artigo_Estado0));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertTrue(tShirt2.equals((Object)tShirt0));
      assertTrue(tShirt2.equals((Object)tShirt1));
      assertNotSame(artigo_Estado1, artigo_Estado0);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt0, tShirt2);
      assertNotSame(tShirt1, tShirt2);
      assertNotSame(tShirt1, tShirt0);
      assertNotSame(tShirt2, tShirt1);
      assertNotSame(tShirt2, tShirt0);
      assertEquals(407, tShirt0.getNumeroDonos());
      assertEquals(2, tShirt0.getId());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals("B&FPSY{Yqg", tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals("iW9z+14p=^b%", tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals("B&FPSY{Yqg", tShirt0.getDescricao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getMarca());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("#fVIr=%vvX\" /", tShirt0.getTipo());
      assertEquals("iW9z+14p=^b%", tShirt1.getTransportadora());
      assertEquals(TShirt.Padrao.RISCAS, tShirt1.getPadrao());
      assertEquals(TShirt.Tamanho.L, tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals("#fVIr=%vvX\" /", tShirt1.getTipo());
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertNull(tShirt1.getMarca());
      assertEquals("B&FPSY{Yqg", tShirt1.getCodigo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt1.getAvaliacao());
      assertEquals("B&FPSY{Yqg", tShirt1.getDescricao());
      assertEquals(407, tShirt1.getNumeroDonos());
      assertEquals(2, tShirt1.getId());
      assertEquals(Artigo.Estado.USADO, tShirt2.getEstado());
      assertEquals(2, tShirt2.getId());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, tShirt2.getAvaliacao());
      assertEquals(0.0, tShirt2.getPrecoBase(), 0.01);
      assertEquals(407, tShirt2.getNumeroDonos());
      assertEquals("B&FPSY{Yqg", tShirt2.getCodigo());
      assertNull(tShirt2.getMarca());
      assertEquals(TShirt.Tamanho.L, tShirt2.getTamanho());
      assertEquals("B&FPSY{Yqg", tShirt2.getDescricao());
      assertEquals("iW9z+14p=^b%", tShirt2.getTransportadora());
      assertEquals("#fVIr=%vvX\" /", tShirt2.getTipo());
      assertEquals(TShirt.Padrao.RISCAS, tShirt2.getPadrao());
      assertEquals(0.0, tShirt2.getCorrecaoPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, 1453, artigo_Avaliacao0, "-ySo\"v", "-ySo\"v", "", 1453, 1453, "a~+@V?o}jo@");
      assertNotNull(tShirt0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals("-ySo\"v", tShirt0.getMarca());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      
      tShirt0.setMarca("|.");
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("a~+@V?o}jo@", tShirt1.getTransportadora());
      assertEquals(1453.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals("|.", tShirt1.getMarca());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-ySo\"v", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals(1453.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getAvaliacao());
      
      tShirt1.setEstado(artigo_Estado0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("a~+@V?o}jo@", tShirt1.getTransportadora());
      assertEquals(1453.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals("|.", tShirt1.getMarca());
      assertEquals("", tShirt1.getCodigo());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-ySo\"v", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals(1453.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getAvaliacao());
      
      tShirt1.setTransportadora("Ee%nKxA_Y-+b]i}\u0003");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(1453.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals("|.", tShirt1.getMarca());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("Ee%nKxA_Y-+b]i}\u0003", tShirt1.getTransportadora());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-ySo\"v", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals(1453.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getAvaliacao());
      
      tShirt1.setMarca("-ySo\"v");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("-ySo\"v", tShirt1.getMarca());
      assertEquals(1453.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("Ee%nKxA_Y-+b]i}\u0003", tShirt1.getTransportadora());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-ySo\"v", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals(1453.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getAvaliacao());
      
      String string0 = tShirt1.getTransportadora();
      assertNotNull(string0);
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("Ee%nKxA_Y-+b]i}\u0003", string0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("-ySo\"v", tShirt1.getMarca());
      assertEquals(1453.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt1.getTamanho());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("Ee%nKxA_Y-+b]i}\u0003", tShirt1.getTransportadora());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertEquals("-ySo\"v", tShirt1.getDescricao());
      assertEquals(1, tShirt1.getId());
      assertEquals(Artigo.Estado.NOVO, tShirt1.getEstado());
      assertEquals(1453.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertNull(tShirt1.getAvaliacao());
      
      int int0 = tShirt0.getId();
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertNotSame(tShirt0, tShirt1);
      assertEquals(1, int0);
      assertEquals(1453.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("-ySo\"v", tShirt0.getDescricao());
      assertEquals("|.", tShirt0.getMarca());
      assertEquals(1453.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("a~+@V?o}jo@", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      sapatilhas0.setCor("721");
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("721", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      sapatilhas0.getEstado();
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("721", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      sapatilhas0.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("721", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-393.0F), (String) null, 0, "", artigo_Estado0, 0, artigo_Avaliacao0, (String) null, (String) null, "j", 972.166, 972.166, "");
      assertNotNull(malas0);
      assertNull(malas0.getMaterial());
      assertNull(malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(972.166, malas0.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas0.getDim(), 0.01F);
      assertEquals("j", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getMarca());
      assertEquals("", malas0.getTransportadora());
      assertEquals(972.166, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(2, malas0.getId());
      
      Malas malas1 = new Malas(malas0);
      assertNotNull(malas1);
      assertNull(malas0.getMaterial());
      assertNull(malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(972.166, malas0.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas0.getDim(), 0.01F);
      assertEquals("j", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getMarca());
      assertEquals("", malas0.getTransportadora());
      assertEquals(972.166, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(2, malas0.getId());
      assertEquals("", malas1.getTransportadora());
      assertEquals(972.166, malas1.getCorrecaoPreco(), 0.01);
      assertNull(malas1.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas1.getEstado());
      assertNull(malas1.getDescricao());
      assertEquals(0, malas1.getNumeroDonos());
      assertNull(malas1.getMaterial());
      assertEquals(972.166, malas1.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas1.getDim(), 0.01F);
      assertEquals("j", malas1.getCodigo());
      assertEquals(2, malas1.getId());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      assertNull(malas1.getMarca());
      assertEquals("", malas1.getTipo());
      assertEquals(0, malas1.getAno_da_colecao());
      
      Malas malas2 = malas1.clone();
      assertNotNull(malas2);
      assertNotSame(malas0, malas2);
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertNotSame(malas1, malas2);
      assertNotSame(malas2, malas1);
      assertNotSame(malas2, malas0);
      assertNull(malas0.getMaterial());
      assertNull(malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(972.166, malas0.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas0.getDim(), 0.01F);
      assertEquals("j", malas0.getCodigo());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getMarca());
      assertEquals("", malas0.getTransportadora());
      assertEquals(972.166, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(2, malas0.getId());
      assertEquals("", malas1.getTransportadora());
      assertEquals(972.166, malas1.getCorrecaoPreco(), 0.01);
      assertNull(malas1.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas1.getEstado());
      assertNull(malas1.getDescricao());
      assertEquals(0, malas1.getNumeroDonos());
      assertNull(malas1.getMaterial());
      assertEquals(972.166, malas1.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas1.getDim(), 0.01F);
      assertEquals("j", malas1.getCodigo());
      assertEquals(2, malas1.getId());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      assertNull(malas1.getMarca());
      assertEquals("", malas1.getTipo());
      assertEquals(0, malas1.getAno_da_colecao());
      assertNull(malas2.getMaterial());
      assertNull(malas2.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas2.getEstado());
      assertNull(malas2.getDescricao());
      assertEquals(972.166, malas2.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas2.getNumeroDonos());
      assertEquals("", malas2.getTipo());
      assertEquals(0, malas2.getAno_da_colecao());
      assertEquals(972.166, malas2.getPrecoBase(), 0.01);
      assertEquals((-393.0F), malas2.getDim(), 0.01F);
      assertNull(malas2.getMarca());
      assertEquals("", malas2.getTransportadora());
      assertEquals(2, malas2.getId());
      assertEquals("j", malas2.getCodigo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas2.getTipo_mala());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      tShirt0.setMarca("Transportadora: ");
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("Transportadora: ", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      
      String string0 = tShirt0.toString(localDate0);
      assertNotNull(string0);
      assertEquals("ID: 1\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: Transportadora: \nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho: null\nPadrao: null\nPre\u00E7o Final: 0.0\n", string0);
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("Transportadora: ", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
      
      tShirt0.setTipo("");
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("Transportadora: ", tShirt0.getMarca());
      assertNull(tShirt0.getTransportadora());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.IMPECÁVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "|$", artigo_Estado0, (-788), artigo_Avaliacao0, "|$", "|$", "&", (-788), 0.0, "|$");
      assertNotNull(tShirt0);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("|$", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("|$", tShirt0.getDescricao());
      assertEquals("|$", tShirt0.getMarca());
      assertEquals("&", tShirt0.getCodigo());
      assertEquals(1, tShirt0.getId());
      assertEquals("|$", tShirt0.getTipo());
      assertEquals((-788.0), tShirt0.getPrecoBase(), 0.01);
      
      Artigo.Estado artigo_Estado1 = tShirt0.getEstado();
      assertSame(artigo_Estado0, artigo_Estado1);
      assertSame(artigo_Estado1, artigo_Estado0);
      assertEquals(Artigo.Estado.NOVO, artigo_Estado1);
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("|$", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("|$", tShirt0.getDescricao());
      assertEquals("|$", tShirt0.getMarca());
      assertEquals("&", tShirt0.getCodigo());
      assertEquals(1, tShirt0.getId());
      assertEquals("|$", tShirt0.getTipo());
      assertEquals((-788.0), tShirt0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertNull(sapatilhas1.getEstado());
      
      sapatilhas1.setMarca(".=w!n|_Un");
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(".=w!n|_Un", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertNull(sapatilhas1.getEstado());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      malas0.setEstado(artigo_Estado0);
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      
      String string0 = malas0.getMarca();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      
      String string1 = malas0.getTransportadora();
      assertNull(string1);
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 2, "", artigo_Estado0, 2, artigo_Avaliacao0, "", "", "", 2, 2, "");
      assertNotNull(malas0);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, malas0.getAvaliacao());
      assertEquals(2.0, malas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("", malas0.getTipo());
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals(2.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(2, malas0.getNumeroDonos());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      
      float float0 = malas0.getDim();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, malas0.getAvaliacao());
      assertEquals(2.0, malas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("", malas0.getTipo());
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals(2.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(2, malas0.getNumeroDonos());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getEstado());
      
      malas0.setAno_da_colecao((-267));
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals((-267), malas0.getAno_da_colecao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getEstado());
      
      Malas malas1 = (Malas)malas0.clone();
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals((-267), malas0.getAno_da_colecao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(1, malas1.getId());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals("", malas1.getMarca());
      assertNull(malas1.getTipo_mala());
      assertNull(malas1.getAvaliacao());
      assertEquals("", malas1.getDescricao());
      assertEquals("", malas1.getCodigo());
      assertNull(malas1.getTransportadora());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getMaterial());
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals((-267), malas1.getAno_da_colecao());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      
      malas0.setCodigo("");
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      
      boolean boolean0 = malas0.equals("");
      assertFalse(boolean0);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(1, sapatilhas0.getId());
      
      Artigo.Avaliacao artigo_Avaliacao0 = Artigo.Avaliacao.SATISFATÓRIO;
      sapatilhas0.setAvaliacao(artigo_Avaliacao0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, sapatilhas0.getAvaliacao());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(1, sapatilhas0.getId());
      
      sapatilhas0.setPrecoBase(1976.888703);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, sapatilhas0.getAvaliacao());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(1976.888703, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(1, sapatilhas0.getId());
      
      sapatilhas0.setTipo("");
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, sapatilhas0.getAvaliacao());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(1976.888703, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(1, sapatilhas0.getId());
      
      sapatilhas0.setCor("kmXr2QgvIfHvmBnoTpj");
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Artigo.Avaliacao.SATISFATÓRIO, sapatilhas0.getAvaliacao());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(1976.888703, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("kmXr2QgvIfHvmBnoTpj", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(1, sapatilhas0.getId());
      
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(2, malas0.getId());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      malas0.setMaterial("kmXr2QgvIfHvmBnoTpj");
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("kmXr2QgvIfHvmBnoTpj", malas0.getMaterial());
      assertEquals("", malas0.getMarca());
      assertEquals(2, malas0.getId());
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      tShirt0.setCodigo("-OLX}e");
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals("-OLX}e", tShirt0.getCodigo());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      
      double double0 = tShirt0.getPrecoBase();
      assertEquals(0.0, double0, 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals("-OLX}e", tShirt0.getCodigo());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNotNull(tShirt0);
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      
      TShirt tShirt1 = new TShirt(tShirt0);
      assertNotNull(tShirt1);
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt1.getTipo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getPadrao());
      assertEquals(1, tShirt1.getId());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("", tShirt1.getMarca());
      assertNull(tShirt1.getAvaliacao());
      
      tShirt1.setId((-86));
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt1.getTipo());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals((-86), tShirt1.getId());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getPadrao());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("", tShirt1.getMarca());
      assertNull(tShirt1.getAvaliacao());
      
      tShirt1.setTipo("]8/u]EGLsP;YO");
      assertTrue(tShirt0.equals((Object)tShirt1));
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertNull(tShirt1.getEstado());
      assertNull(tShirt1.getTamanho());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals((-86), tShirt1.getId());
      assertEquals("", tShirt1.getDescricao());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNull(tShirt1.getPadrao());
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getCodigo());
      assertEquals("]8/u]EGLsP;YO", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertNull(tShirt1.getAvaliacao());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getTipo());
      
      int int0 = sapatilhas1.getTamanhoNumerico();
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals(0, int0);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getTipo());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      
      float float0 = malas0.getDim();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      malas0.setAno_da_colecao(1941);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      float float0 = malas0.getDim();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(2, sapatilhas1.getId());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      malas0.setDim(1.0F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      
      sapatilhas1.setAtilhos(true);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      sapatilhas0.setCodigo("\n");
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      sapatilhas1.setTiposSapatilhas(sapatilhas_Tipos_Sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      sapatilhas1.setTamanhoNumerico(2);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      sapatilhas1.setMarca("");
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      malas0.setTransportadora("");
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      
      malas0.setTipo_mala(malas_Tipos_Malas0);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      
      Sapatilhas sapatilhas2 = new Sapatilhas(sapatilhas1);
      assertNotNull(sapatilhas2);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      boolean boolean0 = malas0.equals(sapatilhas2);
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertFalse(boolean0);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals(1941, malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      boolean boolean1 = sapatilhas2.getAtilhos();
      assertFalse(boolean1 == boolean0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertTrue(boolean1);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      malas0.setAno_da_colecao(2);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      
      Sapatilhas sapatilhas3 = sapatilhas2.clone();
      assertNotNull(sapatilhas3);
      assertFalse(sapatilhas3.equals((Object)sapatilhas0));
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas3, sapatilhas1);
      assertNotSame(sapatilhas3, sapatilhas2);
      assertNotSame(sapatilhas3, sapatilhas0);
      assertNotSame(sapatilhas0, sapatilhas3);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas3);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas3);
      assertEquals(2, sapatilhas3.getId());
      assertEquals(0, sapatilhas3.getNumeroDonos());
      assertNull(sapatilhas3.getEstado());
      assertEquals(0.0, sapatilhas3.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas3.getTransportadora());
      assertTrue(sapatilhas3.getAtilhos());
      assertEquals("", sapatilhas3.getTipo());
      assertEquals("", sapatilhas3.getMarca());
      assertEquals("", sapatilhas3.getCor());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas3.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas3.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas3.getCodigo());
      assertEquals("", sapatilhas3.getDescricao());
      assertEquals(2, sapatilhas3.getTamanhoNumerico());
      assertNull(sapatilhas3.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      Artigo.Avaliacao[] artigo_AvaliacaoArray0 = Artigo.Avaliacao.values();
      assertNotNull(artigo_AvaliacaoArray0);
      assertEquals(3, artigo_AvaliacaoArray0.length);
      
      boolean boolean2 = sapatilhas0.equals(sapatilhas2);
      assertFalse(sapatilhas0.equals((Object)sapatilhas3));
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas3);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas3);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas3);
      assertFalse(boolean2);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      String string0 = malas0.getMaterial();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      
      Sapatilhas sapatilhas4 = sapatilhas3.clone();
      assertNotNull(sapatilhas4);
      assertFalse(sapatilhas3.equals((Object)sapatilhas0));
      assertFalse(sapatilhas0.equals((Object)sapatilhas3));
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas4.equals((Object)sapatilhas0));
      assertFalse(sapatilhas2.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas3, sapatilhas1);
      assertNotSame(sapatilhas3, sapatilhas2);
      assertNotSame(sapatilhas3, sapatilhas0);
      assertNotSame(sapatilhas3, sapatilhas4);
      assertNotSame(sapatilhas0, sapatilhas3);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas4);
      assertNotSame(sapatilhas1, sapatilhas4);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas3);
      assertNotSame(sapatilhas4, sapatilhas0);
      assertNotSame(sapatilhas4, sapatilhas1);
      assertNotSame(sapatilhas4, sapatilhas3);
      assertNotSame(sapatilhas4, sapatilhas2);
      assertNotSame(sapatilhas2, sapatilhas1);
      assertNotSame(sapatilhas2, sapatilhas4);
      assertNotSame(sapatilhas2, sapatilhas0);
      assertNotSame(sapatilhas2, sapatilhas3);
      assertEquals(2, sapatilhas3.getId());
      assertEquals(0, sapatilhas3.getNumeroDonos());
      assertNull(sapatilhas3.getEstado());
      assertEquals(0.0, sapatilhas3.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas3.getTransportadora());
      assertTrue(sapatilhas3.getAtilhos());
      assertEquals("", sapatilhas3.getTipo());
      assertEquals("", sapatilhas3.getMarca());
      assertEquals("", sapatilhas3.getCor());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas3.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas3.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas3.getCodigo());
      assertEquals("", sapatilhas3.getDescricao());
      assertEquals(2, sapatilhas3.getTamanhoNumerico());
      assertNull(sapatilhas3.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas4.getCodigo());
      assertNull(sapatilhas4.getTransportadora());
      assertEquals(0, sapatilhas4.getNumeroDonos());
      assertNull(sapatilhas4.getAvaliacao());
      assertEquals("", sapatilhas4.getDescricao());
      assertEquals("", sapatilhas4.getCor());
      assertEquals(2, sapatilhas4.getId());
      assertTrue(sapatilhas4.getAtilhos());
      assertEquals("", sapatilhas4.getMarca());
      assertEquals("", sapatilhas4.getTipo());
      assertEquals(0.0, sapatilhas4.getPrecoBase(), 0.01);
      assertEquals(2, sapatilhas4.getTamanhoNumerico());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas4.getTiposSapatilhas());
      assertNull(sapatilhas4.getEstado());
      assertEquals(0.0, sapatilhas4.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas2.getCor());
      assertEquals("", sapatilhas2.getTipo());
      assertEquals(0.0, sapatilhas2.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, sapatilhas2.getPrecoBase(), 0.01);
      assertNull(sapatilhas2.getEstado());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas2.getTiposSapatilhas());
      assertEquals(0, sapatilhas2.getNumeroDonos());
      assertEquals(2, sapatilhas2.getTamanhoNumerico());
      assertNull(sapatilhas2.getAvaliacao());
      assertEquals("", sapatilhas2.getDescricao());
      assertEquals("", sapatilhas2.getCodigo());
      assertNull(sapatilhas2.getTransportadora());
      assertEquals("", sapatilhas2.getMarca());
      assertTrue(sapatilhas2.getAtilhos());
      assertEquals(2, sapatilhas2.getId());
      
      String string1 = sapatilhas0.getDescricao();
      assertNotNull(string1);
      assertFalse(sapatilhas0.equals((Object)sapatilhas3));
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas0.equals((Object)sapatilhas4));
      assertNotSame(sapatilhas0, sapatilhas3);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas4);
      assertEquals("", string1);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Malas malas1 = new Malas(malas0);
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      assertEquals(2, malas1.getAno_da_colecao());
      assertEquals(1, malas1.getId());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getMaterial());
      assertEquals("", malas1.getDescricao());
      assertNull(malas1.getAvaliacao());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals("", malas1.getTransportadora());
      assertEquals(1.0F, malas1.getDim(), 0.01F);
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals("", malas1.getCodigo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      
      boolean boolean3 = sapatilhas1.equals(malas1);
      assertTrue(malas0.equals((Object)malas1));
      assertFalse(sapatilhas0.equals((Object)sapatilhas3));
      assertFalse(sapatilhas0.equals((Object)sapatilhas2));
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas0.equals((Object)sapatilhas4));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertTrue(malas1.equals((Object)malas0));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertNotSame(malas0, malas1);
      assertNotSame(sapatilhas0, sapatilhas3);
      assertNotSame(sapatilhas0, sapatilhas2);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas4);
      assertNotSame(sapatilhas1, sapatilhas4);
      assertNotSame(sapatilhas1, sapatilhas2);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNotSame(sapatilhas1, sapatilhas3);
      assertNotSame(malas1, malas0);
      assertFalse(boolean3);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getTransportadora());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(2, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1.0F, malas0.getDim(), 0.01F);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("\n", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTransportadora());
      assertTrue(sapatilhas1.getAtilhos());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(2, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas1.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(2, malas1.getAno_da_colecao());
      assertEquals(1, malas1.getId());
      assertEquals("", malas1.getMarca());
      assertEquals("", malas1.getMaterial());
      assertEquals("", malas1.getDescricao());
      assertNull(malas1.getAvaliacao());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertNull(malas1.getEstado());
      assertEquals("", malas1.getTipo());
      assertEquals("", malas1.getTransportadora());
      assertEquals(1.0F, malas1.getDim(), 0.01F);
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, malas1.getNumeroDonos());
      assertEquals("", malas1.getCodigo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      
      sapatilhas1.setDescricao("@1cgzGMzD?0EL");
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("@1cgzGMzD?0EL", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      
      int int0 = sapatilhas0.getNumeroDonos();
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertEquals(0, int0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      
      sapatilhas1.setCodigo("?AM1N)zD:bj?5Ih=M");
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("?AM1N)zD:bj?5Ih=M", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("@1cgzGMzD?0EL", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertFalse(boolean0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("?AM1N)zD:bj?5Ih=M", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getEstado());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("@1cgzGMzD?0EL", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getDescricao());
      
      LocalDate localDate0 = null;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Malas malas1 = malas0.clone();
      assertNotNull(malas1);
      assertTrue(malas1.equals((Object)malas0));
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas1.getTipo());
      assertEquals(0.0, malas1.getPrecoBase(), 0.01);
      assertEquals("", malas1.getMarca());
      assertNull(malas1.getTipo_mala());
      assertEquals("", malas1.getCodigo());
      assertNull(malas1.getTransportadora());
      assertEquals(2, malas1.getId());
      assertEquals("", malas1.getMaterial());
      assertEquals(0, malas1.getNumeroDonos());
      assertNull(malas1.getAvaliacao());
      assertEquals(0.0F, malas1.getDim(), 0.01F);
      assertEquals("", malas1.getDescricao());
      assertEquals(0, malas1.getAno_da_colecao());
      assertEquals(0.0, malas1.getCorrecaoPreco(), 0.01);
      assertNull(malas1.getEstado());
      
      sapatilhas1.setEstado(artigo_Estado0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("?AM1N)zD:bj?5Ih=M", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(Artigo.Estado.USADO, sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("@1cgzGMzD?0EL", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      
      // Undeclared exception!
      try { 
        malas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      
      sapatilhas0.setTransportadora("}$I;'zI%Zhv;L/!A'!K");
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("}$I;'zI%Zhv;L/!A'!K", sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      
      Malas malas0 = new Malas();
      assertNotNull(malas0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      assertEquals(2, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      
      malas0.setAno_da_colecao((-2034458190));
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertNull(malas0.getEstado());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      assertEquals((-2034458190), malas0.getAno_da_colecao());
      assertEquals(2, malas0.getId());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNotNull(sapatilhas1);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("}$I;'zI%Zhv;L/!A'!K", sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("}$I;'zI%Zhv;L/!A'!K", sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getTipo());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      
      // Undeclared exception!
      try { 
        sapatilhas1.equals(sapatilhas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Sapatilhas", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Sapatilhas sapatilhas1 = new Sapatilhas();
      assertNotNull(sapatilhas1);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      assertFalse(boolean0);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      
      sapatilhas1.setPrecoBase(1.0);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas1, sapatilhas0);
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals(1.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(2, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCor());
      assertEquals("", sapatilhas1.getTipo());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(4280L);
      assertNotNull(localDate0);
      
      String string0 = sapatilhas0.toString(localDate0);
      assertNotNull(string0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertNotSame(sapatilhas0, sapatilhas1);
      assertEquals("ID: 1\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: \nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: \nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: null\nPreco Final: 0.0\n", string0);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      
      Artigo.Estado[] artigo_EstadoArray0 = Artigo.Estado.values();
      assertNotNull(artigo_EstadoArray0);
      assertEquals(2, artigo_EstadoArray0.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNotNull(sapatilhas0);
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      
      Sapatilhas sapatilhas1 = new Sapatilhas();
      assertNotNull(sapatilhas1);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(2, sapatilhas1.getId());
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      String string0 = sapatilhas1.toString(localDate0);
      assertNotNull(string0);
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("ID: 2\nTipo: \nEstado: null\nN\u00FAmero de Donos: 0\nAvalia\u00E7\u00E3o: null\nDescri\u00E7\u00E3o: \nMarca: \nC\u00F3digo: \nPre\u00E7o Base: 0.0\nCorre\u00E7\u00E3o do Pre\u00E7o: 0.0\nTransportadora: null\nTamanho Numerico: 0\nAtilhos: false\nCor: \nData de Lancamento: 0000-01-01\nTipo de Sapatilhas: null\nPreco Final: 0.0\n", string0);
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(2, sapatilhas1.getId());
      
      sapatilhas1.getTiposSapatilhas();
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNotSame(sapatilhas1, sapatilhas0);
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals(2, sapatilhas1.getId());
  }
}
