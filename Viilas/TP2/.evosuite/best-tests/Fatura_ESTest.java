/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:56:20 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fatura_ESTest extends Fatura_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.nifComprador = 1L;
      fatura0.toString();
      fatura0.setPrecoFinal(0.0);
      fatura0.setId(1L);
      fatura0.setNifComprador(1L);
      fatura0.getNifComprador();
      Fatura.getCodigo();
      Fatura fatura1 = fatura0.clone();
      fatura1.nifComprador = 1L;
      fatura0.atualizaFatura("", 1L, 0.0, 835.2707873);
      fatura0.getId();
      fatura1.setNifComprador(0L);
      fatura1.toString();
      Fatura fatura2 = new Fatura();
      fatura2.setPrecoFinal(1090.807945920504);
      fatura2.custoProdutos = (double) 0L;
      fatura2.getAlteracaoPreco();
      Fatura.setCodigo(3L);
      fatura2.setPrecoFinal((-1050.3));
      fatura0.setIdEncomenda(2L);
      Set<String> set0 = fatura0.getArtigos();
      fatura1.setArtigos(set0);
      Fatura fatura3 = new Fatura();
      fatura2.equals(fatura3);
      fatura3.toString();
      fatura3.clone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.setCodigo(0L);
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      fatura2.atualizaFatura("", 0L, 0L, (-479.860136758533));
      fatura2.equals(fatura0);
      fatura1.equals(fatura0);
      fatura2.equals(fatura0);
      Fatura fatura3 = fatura1.clone();
      fatura3.nifComprador = 0L;
      fatura1.getArtigos();
      fatura2.clone();
      fatura2.clone();
      fatura3.getArtigos();
      fatura2.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fatura fatura0 = new Fatura(true, 2123L, (-2483L), (Set<String>) null, 2123L, (-1764.0), (-2483L));
      // Undeclared exception!
      try { 
        fatura0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.setCodigo(0L);
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      fatura2.setCustoProdutos((-1740.079411642));
      fatura2.equals(fatura0);
      fatura1.equals(fatura0);
      fatura2.equals(fatura0);
      Fatura fatura3 = fatura1.clone();
      fatura3.nifComprador = 0L;
      fatura1.getArtigos();
      fatura2.clone();
      fatura2.clone();
      fatura2.equals(fatura1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      Set<String> set0 = fatura1.getArtigos();
      fatura2.setArtigos(set0);
      fatura0.setIdEncomenda(2L);
      fatura0.toString();
      fatura0.setId(2L);
      fatura0.alteracaoPreco = 0.0;
      Fatura.criaCodigo();
      fatura0.setNifComprador(1251L);
      fatura0.setAlteracaoPreco(0.0);
      fatura1.equals(fatura0);
      fatura0.setId(4L);
      fatura0.getCustoProdutos();
      fatura1.getAlteracaoPreco();
      fatura0.getArtigos();
      fatura0.toString();
      fatura0.getArtigos();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.nifComprador = 0L;
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.toString();
      fatura0.setPrecoFinal(0.0);
      fatura0.setId((-1459L));
      fatura0.setNifComprador(0L);
      fatura0.getNifComprador();
      Fatura.getCodigo();
      Fatura fatura1 = fatura0.clone();
      fatura1.setArtigos(set0);
      fatura1.nifComprador = 0L;
      fatura0.atualizaFatura("", 0L, 0.0, 835.2707873);
      fatura0.getId();
      fatura1.setNifComprador(0L);
      Fatura.getCodigo();
      fatura1.toString();
      Fatura fatura2 = new Fatura();
      fatura2.setPrecoFinal(1090.807945920504);
      fatura2.setArtigos(set0);
      fatura2.custoProdutos = (double) 0L;
      fatura2.getAlteracaoPreco();
      Fatura.setCodigo(3L);
      fatura0.setIdEncomenda(3L);
      Set<String> set1 = fatura0.getArtigos();
      fatura1.setArtigos(set1);
      Fatura fatura3 = new Fatura();
      fatura2.equals(fatura3);
      fatura3.toString();
      fatura3.clone();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.clone();
      Fatura fatura2 = fatura1.clone();
      Fatura.setCodigo(0L);
      fatura2.setAlteracaoPreco((-4774.551));
      Set<String> set0 = fatura2.getArtigos();
      fatura1.setArtigos(set0);
      fatura1.custoProdutos = 0.0;
      Fatura fatura3 = new Fatura(fatura1);
      fatura2.setId(0L);
      Fatura fatura4 = fatura1.clone();
      Fatura.criaCodigo();
      Fatura.criaCodigo();
      fatura4.custoProdutos = (double) 0L;
      fatura2.equals(fatura3);
      fatura1.equals("");
      fatura1.equals(fatura2);
      fatura0.getArtigos();
      fatura3.getArtigos();
      Fatura fatura5 = fatura2.clone();
      fatura5.getArtigos();
      fatura1.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.nifComprador = 0L;
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.toString();
      fatura0.setPrecoFinal(0.0);
      fatura0.setId((-1459L));
      fatura0.setNifComprador(0L);
      fatura0.getNifComprador();
      Fatura.getCodigo();
      Fatura fatura1 = fatura0.clone();
      fatura1.setArtigos(set0);
      fatura1.nifComprador = 0L;
      fatura0.atualizaFatura("", 0L, 0.0, 835.2707873);
      fatura0.getId();
      fatura0.getCustoProdutos();
      fatura1.setNifComprador(0L);
      Fatura.getCodigo();
      fatura1.toString();
      Fatura fatura2 = new Fatura();
      fatura2.setPrecoFinal(1090.807945920504);
      fatura2.setArtigos(set0);
      fatura2.custoProdutos = 1.0;
      fatura2.getAlteracaoPreco();
      Fatura.setCodigo(3L);
      fatura0.setIdEncomenda(3L);
      Set<String> set1 = fatura0.getArtigos();
      fatura1.setArtigos(set1);
      Fatura fatura3 = new Fatura();
      fatura2.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.nifComprador = 1L;
      fatura1.setId(1L);
      fatura1.equals(fatura0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(false, 478L, 2L, set0, 1L, 0.0, 2L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura1.setIdEncomenda(3361L);
      fatura2.setIdEncomenda(2L);
      fatura2.setPrecoFinal(0.0);
      Fatura.setCodigo(2L);
      Set<String> set1 = fatura2.getArtigos();
      Fatura fatura3 = new Fatura(false, 2L, 905L, set1, 478L, 0.0, 0.0);
      fatura0.setCompra(false);
      fatura1.equals(fatura3);
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura2.clone();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(true, 2545L, 0L, set0, (-1251.268), 0.0, 0.0);
      fatura2.getNifComprador();
      fatura2.setNifComprador(2L);
      fatura0.atualizaFatura((String) null, 0L, 10.9777966720225, 0.0);
      fatura0.getNifComprador();
      fatura1.setId(0L);
      fatura2.getId();
      Fatura.setCodigo(0L);
      Fatura.criaCodigo();
      fatura0.getPrecoFinal();
      fatura1.atualizaFatura("5@Z4dx83%*+T&NvNP=}", (-1251.268), 0L, (-1.0));
      fatura2.setNifComprador(1L);
      fatura1.compra = true;
      fatura1.setIdEncomenda(0L);
      fatura0.equals(fatura2);
      Fatura fatura3 = new Fatura(fatura1);
      fatura0.equals(fatura3);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setId(0L);
      fatura0.alteracaoPreco = 0.0;
      fatura0.setAlteracaoPreco(0.0);
      Fatura.criaCodigo();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.setCompra(false);
      fatura0.getCustoProdutos();
      fatura0.getId();
      fatura0.isCompra();
      fatura0.getCustoProdutos();
      Fatura.setCodigo(0L);
      fatura0.atualizaFatura("", (-44.074), (-44.074), 0.0);
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.equals(fatura1);
      fatura0.getArtigos();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setId(0L);
      fatura0.alteracaoPreco = 0.0;
      fatura0.setAlteracaoPreco(0.0);
      Fatura.criaCodigo();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.setCompra(false);
      fatura0.getCustoProdutos();
      fatura0.getId();
      fatura0.isCompra();
      fatura0.getCustoProdutos();
      Fatura.setCodigo(0L);
      fatura0.atualizaFatura("", 0.0, 0.0, 0.0);
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.equals(fatura1);
      fatura0.getArtigos();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fatura fatura0 = new Fatura(true, (-2139L), (-1L), (Set<String>) null, (-1.0), (-1L), 0.0);
      // Undeclared exception!
      try { 
        fatura0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      Set<String> set0 = fatura1.getArtigos();
      fatura2.setArtigos(set0);
      fatura0.toString();
      fatura0.setId(2L);
      fatura0.alteracaoPreco = 0.0;
      Fatura.criaCodigo();
      fatura0.setAlteracaoPreco((-1.0));
      fatura1.equals(fatura0);
      fatura0.setId(4L);
      fatura0.getCustoProdutos();
      fatura1.getAlteracaoPreco();
      fatura0.getIdEncomenda();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.equals(fatura0);
      fatura0.toString();
      fatura0.toString();
      fatura0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = fatura0.clone();
      fatura0.setAlteracaoPreco(113.018278689);
      Fatura.setCodigo((-1L));
      fatura0.getPrecoFinal();
      fatura0.setCustoProdutos(0.0);
      fatura1.nifComprador = 0L;
      fatura0.atualizaFatura("", 0.0, 0.0, 364.5181);
      fatura0.setAlteracaoPreco(0.0);
      fatura0.setPrecoFinal(1.0);
      fatura0.setIdEncomenda(0L);
      Fatura fatura2 = fatura0.clone();
      fatura0.clone();
      Fatura.getCodigo();
      Fatura fatura3 = fatura1.clone();
      fatura1.setId(1920L);
      fatura1.setPrecoFinal((-580.5462825387));
      fatura2.getIdEncomenda();
      fatura3.getIdEncomenda();
      fatura2.setCompra(true);
      Fatura.getCodigo();
      fatura1.setIdEncomenda((-1L));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.atualizaFatura("{lkz|]Z&`d\"tmn", 1L, 0.0, 1L);
      Fatura fatura1 = new Fatura(false, 1L, 1L, set0, 1.0, (-1.0), 0.0);
      Fatura.criaCodigo();
      fatura1.setArtigos(set0);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.setId(0L);
      fatura2.setCompra(false);
      fatura2.clone();
      Fatura.setCodigo(0L);
      fatura2.atualizaFatura("y3UU6ysG|", (-1087.0926684432939), 1577.415630815929, 1L);
      fatura1.getAlteracaoPreco();
      fatura0.getCustoProdutos();
      Fatura.getCodigo();
      fatura0.setPrecoFinal((-1.0));
      fatura1.getAlteracaoPreco();
      fatura0.getId();
      fatura0.getNifComprador();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.idEncomenda = 2684L;
      fatura0.atualizaFatura("Artigos vendidos: ", 1.0, 1912.0, (-2550.74));
      Set<String> set0 = fatura0.getArtigos();
      fatura0.clone();
      fatura0.equals(set0);
      Fatura.setCodigo(0L);
      fatura0.setAlteracaoPreco(0.0);
      fatura0.setCompra(false);
      fatura0.setId((-1L));
      fatura0.atualizaFatura("Artigos vendidos: ", 0.0, 0.0, 0.0);
      Fatura fatura1 = fatura0.clone();
      fatura1.setArtigos(set0);
      fatura0.getCustoProdutos();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.precoFinal = 0.0;
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setAlteracaoPreco(0L);
      fatura1.setPrecoFinal(0L);
      Fatura.setCodigo(0L);
      fatura0.id = 2L;
      fatura0.id = 0L;
      fatura1.idEncomenda = (-2139L);
      fatura1.custoProdutos = (-479.860136758533);
      fatura0.setId((-2139L));
      fatura1.setCompra(false);
      fatura1.precoFinal = 4052.6421390543;
      fatura1.setId((-2139L));
      fatura0.equals(fatura1);
      Fatura.criaCodigo();
      fatura0.getArtigos();
      fatura0.setIdEncomenda((-2139L));
      fatura1.getNifComprador();
      fatura1.getCustoProdutos();
      fatura0.setAlteracaoPreco(588.32117194881);
      Fatura.getCodigo();
      fatura1.getPrecoFinal();
      fatura1.setIdEncomenda((-1305L));
      fatura0.getCustoProdutos();
      fatura1.setCustoProdutos(0L);
      fatura1.setId(544L);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setNifComprador(1L);
      fatura0.atualizaFatura("Oe_T", 2661.3463, 2661.3463, 2661.3463);
      fatura0.getAlteracaoPreco();
      fatura0.getArtigos();
      Fatura fatura1 = new Fatura(fatura0);
      fatura0.nifComprador = 1387L;
      Fatura fatura2 = fatura1.clone();
      fatura1.getIdEncomenda();
      fatura1.setCompra(true);
      fatura2.toString();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      Set<String> set0 = fatura1.getArtigos();
      fatura2.setArtigos(set0);
      fatura0.toString();
      fatura0.setId(2L);
      fatura0.alteracaoPreco = 0.0;
      Fatura.criaCodigo();
      fatura0.setNifComprador(1251L);
      fatura0.setAlteracaoPreco((-1.0));
      fatura1.equals(fatura0);
      fatura0.setId(4L);
      fatura0.getCustoProdutos();
      fatura1.getAlteracaoPreco();
      fatura0.getIdEncomenda();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long long0 = 1073L;
      Set<String> set0 = null;
      double double0 = (-1.0);
      double double1 = 1061.7623284409;
      Fatura fatura0 = new Fatura(false, 1073L, 1073L, (Set<String>) null, 0.0, (-1.0), 1061.7623284409);
      String string0 = "";
      fatura0.id = 1073L;
      double double2 = 0.0;
      fatura0.idEncomenda = 1073L;
      // Undeclared exception!
      try { 
        fatura0.setArtigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setIdEncomenda((-3570L));
      Fatura fatura1 = new Fatura(true, (-3570L), 1063L, set0, (-3983.9062), 1L, (-3570L));
      Fatura fatura2 = new Fatura(fatura1);
      fatura1.setNifComprador((-3570L));
      fatura1.setArtigos(set0);
      fatura2.setNifComprador((-655L));
      Fatura.criaCodigo();
      fatura1.setPrecoFinal(0.0);
      fatura1.equals(set0);
      Fatura.setCodigo((-3570L));
      fatura1.setAlteracaoPreco(0.0);
      fatura2.setNifComprador(671L);
      fatura0.getArtigos();
      fatura0.setCompra(false);
      Fatura.getCodigo();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = fatura0.clone();
      fatura0.setId((-1L));
      fatura0.getId();
      Set<String> set0 = fatura0.getArtigos();
      fatura1.setArtigos(set0);
      fatura1.toString();
      fatura1.toString();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      long long0 = (-2955L);
      double double0 = (-1.0);
      Fatura fatura0 = new Fatura(false, (-2955L), 0L, (Set<String>) null, (-2955L), (-1.0), 0.0);
      String string0 = "V}F[8\\qiYjwUs^h:oGC";
      fatura0.nifComprador = 0L;
      fatura0.setCompra(true);
      fatura0.compra = false;
      // Undeclared exception!
      try { 
        fatura0.atualizaFatura("V}F[8qiYjwUs^h:oGC", (-1.0), 0.0, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Fatura", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fatura.setCodigo(0L);
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, 1313L, 1238L, set0, 0L, 1637.893646007, 1637.893646007);
      fatura1.getPrecoFinal();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.custoProdutos = (-1367.404977);
      fatura0.setCustoProdutos(0.0);
      fatura0.getArtigos();
      fatura0.setCompra(true);
      fatura0.precoFinal = (-3084.6265831);
      fatura0.getNifComprador();
      fatura0.setNifComprador(0L);
      fatura0.getArtigos();
      fatura0.getArtigos();
      fatura0.isCompra();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.isCompra();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(false, 1L, (-1639L), set0, 1.0, 0.0, 0.0);
      fatura1.setCompra(false);
      fatura0.equals(fatura1);
      fatura1.getNifComprador();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Fatura fatura0 = new Fatura(true, 0L, (-1L), (Set<String>) null, 2376.0759511, 0L, 2376.0759511);
      fatura0.setCompra(true);
      // Undeclared exception!
      try { 
        fatura0.getArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fatura fatura0 = null;
      try {
        fatura0 = new Fatura((Fatura) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Fatura", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(true, 1986L, 1986L, set0, 0.0, (-500.647624434), 0.0);
      fatura2.getIdEncomenda();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fatura.setCodigo(2760L);
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, 2760L, 2760L, set0, (-4323.02), 0.0, 0.0);
      fatura1.setNifComprador(0L);
      fatura1.getCustoProdutos();
      Set<String> set1 = fatura1.getArtigos();
      fatura0.setAlteracaoPreco(0.0);
      fatura0.setId(2761L);
      Fatura.getCodigo();
      fatura0.getId();
      Fatura.criaCodigo();
      fatura0.isCompra();
      fatura0.getCustoProdutos();
      fatura1.equals(set1);
      fatura1.clone();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setPrecoFinal(2442.57487731);
      fatura0.atualizaFatura("kLg (Hr^\"0", 1327.09865829222, (-1.0), 498.67798237358267);
      fatura0.getCustoProdutos();
      fatura0.setCustoProdutos(1327.09865829222);
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.setCompra(false);
      fatura0.getNifComprador();
      fatura0.setPrecoFinal(1327.09865829222);
      fatura0.setIdEncomenda((-3460L));
      fatura0.equals(set0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fatura.setCodigo(3368L);
      Fatura.setCodigo(3368L);
      Fatura.setCodigo(3368L);
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(false, (-2479L), 3368L, set0, 3368L, (-2403.002671756562), (-2479L));
      fatura2.getPrecoFinal();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Fatura.setCodigo((-1607L));
      fatura1.atualizaFatura("", 0.0, 380.75218873283, 380.75218873283);
      Fatura.criaCodigo();
      Fatura fatura2 = fatura0.clone();
      fatura2.getPrecoFinal();
      fatura1.setCompra(false);
      Fatura fatura3 = new Fatura(fatura1);
      Set<String> set0 = fatura3.getArtigos();
      fatura1.setArtigos(set0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setNifComprador(453L);
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setCustoProdutos(0.0);
      fatura0.setArtigos(set0);
      fatura0.setIdEncomenda(453L);
      fatura0.toString();
      fatura0.getId();
      fatura0.setCustoProdutos(1L);
      Fatura fatura1 = fatura0.clone();
      fatura1.setCustoProdutos(453L);
      fatura1.getArtigos();
      fatura1.getAlteracaoPreco();
      fatura1.setCompra(false);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.setId(0L);
      fatura0.setCustoProdutos(0.0);
      fatura0.getArtigos();
      fatura0.getId();
      fatura0.getArtigos();
      Fatura.setCodigo(0L);
      Fatura.criaCodigo();
      fatura0.compra = true;
      fatura0.setIdEncomenda((-1L));
      fatura0.setNifComprador((-1L));
      fatura0.getCustoProdutos();
      fatura0.atualizaFatura("/e]|=^[~", 0.0, 1.0, 0.0);
      Fatura.criaCodigo();
      fatura0.setPrecoFinal(0.0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fatura.setCodigo(0L);
      Fatura fatura0 = new Fatura();
      fatura0.custoProdutos = (-1432.0);
      fatura0.setCompra(true);
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.getId();
      fatura0.getCustoProdutos();
      fatura0.setPrecoFinal(4066.2533);
      fatura0.setNifComprador(0L);
      fatura0.getCustoProdutos();
      fatura0.setPrecoFinal(0L);
      fatura0.setCustoProdutos(0.0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      fatura1.id = (-5415L);
      fatura0.alteracaoPreco = 1.0;
      Fatura fatura2 = new Fatura(true, (-1L), (-1L), set0, 0.0, 2661.4600334218735, 3245.23319627136);
      fatura2.clone();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.criaCodigo();
      fatura0.getIdEncomenda();
      fatura0.getAlteracaoPreco();
      fatura0.setIdEncomenda(0L);
      fatura0.isCompra();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setIdEncomenda(0L);
      Fatura fatura1 = new Fatura(true, (-393L), (-1840L), set0, 0.0, (-3714.4768891), (-435.29));
      fatura1.setCustoProdutos(0.0);
      fatura1.getAlteracaoPreco();
      fatura0.getIdEncomenda();
      fatura1.clone();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setAlteracaoPreco(1.0);
      fatura0.setId((-476L));
      fatura0.atualizaFatura("t^ zPr>(*0mf_#]eV3", 1.0, 1.0, 1.0);
      fatura0.setAlteracaoPreco(2842.89108798161);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Fatura.setCodigo(0L);
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, (-1L), 0L, set0, (-2593.004125), 0.0, (-1L));
      fatura1.getId();
      fatura1.toString();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setAlteracaoPreco((-1694.34192));
      Set<String> set0 = fatura0.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.getArtigos();
      Fatura fatura1 = fatura0.clone();
      fatura1.id = 1L;
      fatura0.getPrecoFinal();
      fatura0.toString();
      fatura1.getPrecoFinal();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setCompra(true);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.custoProdutos = (double) (-867L);
      fatura0.idEncomenda = (-867L);
      fatura0.setId((-867L));
      fatura0.getIdEncomenda();
      fatura0.getIdEncomenda();
      fatura0.atualizaFatura("Compra\n", (-867L), (-867L), (-1.0));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.idEncomenda = (-936L);
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.clone();
      Fatura.getCodigo();
      Fatura.criaCodigo();
      fatura0.setPrecoFinal(0.0);
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Fatura.getCodigo();
      Fatura fatura0 = new Fatura();
      fatura0.compra = true;
      fatura0.setAlteracaoPreco(1L);
      fatura0.setCompra(true);
      fatura0.setCustoProdutos(617.04133387069);
      fatura0.setNifComprador(1L);
      fatura0.setPrecoFinal(617.04133387069);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, 1L, 0L, set0, 0L, 0.0, 1L);
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.clone();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fatura.getCodigo();
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = fatura0.clone();
      fatura1.setPrecoFinal(0.0);
      fatura0.setNifComprador(1L);
      fatura0.getNifComprador();
      fatura1.equals(fatura0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      Fatura fatura2 = new Fatura(true, (-950L), (-950L), set0, 0.0, 0.0, 0.0);
      fatura2.toString();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setCompra(false);
      Set<String> set0 = fatura1.getArtigos();
      fatura1.setArtigos(set0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.id = 0L;
      fatura0.clone();
      fatura0.clone();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setPrecoFinal((-2715.28));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.atualizaFatura("%8NR!W2v]aCt*R'/kZT", 1L, 3605.86687756855, 1L);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getId();
      fatura0.setId(1L);
      fatura0.toString();
      fatura0.setCompra(false);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Fatura fatura0 = new Fatura(true, 0L, 0L, (Set<String>) null, 0.0, 0.0, 0L);
      fatura0.setAlteracaoPreco(0.0);
      fatura0.nifComprador = 0L;
      // Undeclared exception!
      try { 
        fatura0.getArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Fatura.criaCodigo();
      Fatura.setCodigo(1L);
      Fatura fatura0 = new Fatura();
      fatura0.custoProdutos = (double) 1L;
      fatura0.equals((Object) null);
      fatura0.setCustoProdutos(1L);
      fatura0.getAlteracaoPreco();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.getNifComprador();
      fatura0.setNifComprador(0L);
      fatura0.setNifComprador(0L);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.setIdEncomenda((-696L));
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setId(0L);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.getNifComprador();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.equals("Taxa Vintage: ");
      Fatura fatura1 = fatura0.clone();
      fatura1.setCompra(true);
      fatura0.getArtigos();
      fatura0.setAlteracaoPreco(2L);
      fatura1.atualizaFatura("", (-479.860136758533), 0.0, (-479.860136758533));
      fatura1.setCompra(false);
      fatura1.getArtigos();
      Fatura fatura2 = fatura0.clone();
      fatura2.alteracaoPreco = 2.0;
      fatura2.alteracaoPreco = 3043.93;
      fatura2.setAlteracaoPreco((-1.0));
      fatura1.id = 3L;
      Fatura fatura3 = new Fatura(fatura2);
      fatura3.equals(fatura1);
      fatura3.toString();
      fatura1.equals(fatura3);
      fatura1.equals(fatura2);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.toString();
      fatura0.setNifComprador(0L);
      fatura0.getNifComprador();
      Fatura.getCodigo();
      Fatura fatura1 = fatura0.clone();
      fatura1.nifComprador = 0L;
      fatura0.atualizaFatura("", 0L, 0.0, 1L);
      fatura0.getId();
      fatura1.setNifComprador(0L);
      fatura1.toString();
      Fatura fatura2 = new Fatura();
      fatura2.setPrecoFinal(1090.807945920504);
      fatura2.custoProdutos = (double) 0L;
      fatura2.getAlteracaoPreco();
      Fatura.setCodigo(3L);
      fatura0.setIdEncomenda(2L);
      Fatura fatura3 = new Fatura();
      fatura2.equals(fatura3);
      fatura3.toString();
      fatura3.clone();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      fatura0.clone();
      Fatura fatura1 = fatura0.clone();
      Fatura.setCodigo(0L);
      fatura1.setAlteracaoPreco((-4774.551));
      Set<String> set0 = fatura1.getArtigos();
      fatura0.setArtigos(set0);
      Fatura fatura2 = new Fatura(fatura0);
      fatura1.setId(0L);
      fatura0.clone();
      Fatura.criaCodigo();
      fatura1.equals(fatura2);
      fatura0.equals("");
      fatura0.equals(fatura1);
      fatura1.setId(0L);
      fatura0.getArtigos();
      fatura2.getArtigos();
      fatura1.clone();
      fatura1.getArtigos();
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura.setCodigo(0L);
      Fatura fatura1 = new Fatura(fatura0);
      Fatura fatura2 = fatura1.clone();
      fatura2.equals(fatura0);
      fatura1.equals(fatura0);
      Fatura fatura3 = fatura1.clone();
      fatura3.nifComprador = 0L;
      fatura3.getArtigos();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      Set<String> set0 = fatura1.getArtigos();
      fatura0.setArtigos(set0);
      fatura0.setId(2L);
      Fatura.criaCodigo();
      fatura0.setNifComprador(1251L);
      fatura1.equals(fatura0);
      fatura1.getAlteracaoPreco();
      fatura0.toString();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      Fatura fatura1 = new Fatura(true, (-2052L), (-3710L), set0, 0.0, 0L, (-3710L));
      fatura1.toString();
      fatura0.setNifComprador(0L);
      fatura1.setCustoProdutos(0.0);
      fatura1.setId(3361L);
      fatura0.atualizaFatura("Fatura 2 - Compra\nNIF do comprador: -3710\nArtigos vendidos: java.util.HashSet@0000000003\n\nCusto dos produtos: 0.00\u20AC\nCusto do transporte: 0.00\u20AC\nPre\u00E7o final: -3710.00\u20AC\n", 0.0, 3361L, (-3710.0));
      fatura0.setAlteracaoPreco((-3710L));
      fatura0.setAlteracaoPreco(0.0);
      fatura0.setAlteracaoPreco(3361L);
      fatura0.setAlteracaoPreco(0.0);
      fatura1.setIdEncomenda(0L);
      fatura1.setNifComprador((-2052L));
      fatura0.setNifComprador((-2052L));
      fatura0.setCustoProdutos((-2052L));
      Fatura.getCodigo();
      fatura0.setPrecoFinal((-840.023));
      fatura1.setCustoProdutos(0.0);
      Fatura.criaCodigo();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Set<String> set0 = fatura0.getArtigos();
      fatura0.equals(set0);
      Fatura fatura1 = new Fatura(true, 0L, 0L, set0, 0.0, 1800.611, (-2450.383481731932));
      Fatura fatura2 = new Fatura(fatura1);
      fatura2.nifComprador = 0L;
      fatura2.isCompra();
      fatura1.id = 1L;
      fatura1.setIdEncomenda(629L);
      fatura1.setAlteracaoPreco(2870.1405925001827);
      fatura1.equals(fatura0);
      fatura2.getIdEncomenda();
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Fatura fatura0 = new Fatura();
      Fatura fatura1 = new Fatura(fatura0);
      fatura1.setPrecoFinal(0L);
      Fatura.setCodigo(0L);
      fatura0.id = 2L;
      fatura1.idEncomenda = (-2139L);
      fatura1.custoProdutos = (-479.860136758533);
      fatura0.setId((-2139L));
      fatura1.setCompra(false);
      fatura1.precoFinal = 4052.6421390543;
      fatura1.setId((-2139L));
      fatura0.equals(fatura1);
      fatura0.getArtigos();
      fatura0.setIdEncomenda((-2139L));
      fatura1.getNifComprador();
      fatura1.getCustoProdutos();
      Fatura.getCodigo();
      fatura1.getPrecoFinal();
      fatura1.setIdEncomenda((-2139L));
      assertEquals((-2139L), fatura0.id);
      assertEquals(0.0, fatura0.getPrecoFinal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Fatura.getCodigo();
      Fatura.getCodigo();
      Fatura fatura0 = new Fatura();
      fatura0.setPrecoFinal(1090.807945920504);
      fatura0.custoProdutos = 1.0;
      fatura0.getAlteracaoPreco();
      Fatura.setCodigo(1L);
      Fatura fatura1 = new Fatura();
      boolean boolean0 = fatura0.equals(fatura1);
      assertEquals(1090.807945920504, fatura0.precoFinal, 0.01);
      assertFalse(boolean0);
  }
}
