/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:52:20 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parsing_ESTest extends Parsing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[7];
      parsing0.venderTshit((-1L), (LocalDate) null, stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[7];
      parsing0.venderSapatilha(565L, (LocalDate) null, stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[7];
      parsing0.venderMala((-2L), (LocalDate) null, stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      parsing0.setVintage((Vintage) null);
      Vintage vintage1 = parsing0.getVintage();
      assertNull(vintage1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, (Menu) null);
      Menu menu0 = parsing0.getMenu();
      assertNull(menu0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parsing parsing0 = new Parsing((Vintage) null, (Menu) null);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        parsing0.venderTshit((-266L), (LocalDate) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, (Menu) null);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        parsing0.venderSapatilha(0L, (LocalDate) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      parsing0.setMenu((Menu) null);
      // Undeclared exception!
      try { 
        parsing0.venderMala(2253L, (LocalDate) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing((Vintage) null, menu0);
      // Undeclared exception!
      try { 
        parsing0.leitura_ficheiro("^'V<DH)Mn2O}_.CX", (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6o>If";
      // Undeclared exception!
      try { 
        parsing0.adicionar_comando(stringArray0, (LocalDate) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"6o>If\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        parsing0.adicionar_comando(stringArray0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      Parsing parsing0 = new Parsing(vintage0, menu0);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        parsing0.adicionar_comando(stringArray0, (LocalDate) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Parsing", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vintage vintage0 = mock(Vintage.class, new ViolatedAssumptionAnswer());
      Menu menu0 = mock(Menu.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(menu0).toString();
      Parsing parsing0 = new Parsing(vintage0, menu0);
      Menu menu1 = parsing0.getMenu();
      assertSame(menu1, menu0);
  }
}
