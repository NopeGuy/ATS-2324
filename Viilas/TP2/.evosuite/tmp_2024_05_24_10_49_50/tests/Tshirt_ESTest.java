/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:56:46 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tshirt_ESTest extends Tshirt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.toString();
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: L Marca: L Pre\u00E7o base: 1.0 Novo: false Estado de uso: -1702 N\u00FAmero de utilizadores: -1702 Disponivel: true Id da transportadora: -1702 Id do vendedor: -1702 } Tamanho: S Padr\u00E3o: palmeiras}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long(2);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "6v0U5SrZ,>d6K", (-1200.63189824), true, 2, 2, long0, long0, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals((-1200.63189824), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.getTamanho();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-1));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(" Tamanho: ", " Tamanho: ", 0.0, false, (-1), (-1), long0, long0, tamanho0, padrao0);
      Padrao padrao1 = tshirt0.getPadrao();
      assertSame(padrao0, padrao1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt((String) null, "", 1141.9757344, false, (-3685), 0, long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = tshirt0.clone();
      assertNull(tshirt1.getDescricao());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1128));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("+", "", 1339.127988916085, true, 0, (-1128), long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals(2L, tshirt1.getContador());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long(2);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "6v0U5SrZ,>d6K", (-1200.63189824), true, 2, 2, long0, long0, tamanho0, padrao0);
      Artigo.contador = 0L;
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals(2, tshirt1.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Artigo.setContador((-1948L));
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals((-1), tshirt1.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = tshirt0.getData_venda();
      // Undeclared exception!
      try { 
        tshirt0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long(1330L);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = null;
      try {
        tshirt0 = new Tshirt("", "", 869.49, true, 3, 3, (Long) null, long0, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tshirt tshirt0 = null;
      try {
        tshirt0 = new Tshirt((Tshirt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.getPadrao();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      Tamanho tamanho1 = tshirt0.getTamanho();
      assertSame(tamanho1, tamanho0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-1));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(" Tamanho: ", " Tamanho: ", 0.0, false, (-1), (-1), long0, long0, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = tshirt0.clone();
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Padrao padrao0 = Padrao.riscas;
      Tamanho tamanho0 = Tamanho.XL;
      tshirt0.setTamanho(tamanho0);
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.setPadrao(padrao0);
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tamanho tamanho0 = Tamanho.XL;
      tshirt0.setTamanho(tamanho0);
      Tshirt tshirt1 = new Tshirt(tshirt0);
      // Undeclared exception!
      try { 
        tshirt1.equals(tshirt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      Tamanho tamanho1 = Tamanho.XL;
      Tshirt tshirt1 = tshirt0.clone();
      assertTrue(tshirt1.equals((Object)tshirt0));
      
      tshirt0.setTamanho(tamanho1);
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long((-1));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(" Tamanho: ", " Tamanho: ", 0.0, false, (-1), (-1), long0, long0, tamanho0, padrao0);
      Tshirt tshirt1 = new Tshirt();
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      boolean boolean0 = tshirt0.equals(" C\u00F3digo de barras: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long((-1));
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(" Tamanho: ", " Tamanho: ", 0.0, false, (-1), (-1), long0, long0, tamanho0, padrao0);
      boolean boolean0 = tshirt0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = new Long((-1702));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("L", "L", 1.0, false, (-1702), (-1702), long0, long0, tamanho0, padrao0);
      boolean boolean0 = tshirt0.equals(tshirt0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Padrao padrao0 = Padrao.riscas;
      tshirt0.setPadrao(padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      double double0 = tshirt0.preco_atual(localDate0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }
}
