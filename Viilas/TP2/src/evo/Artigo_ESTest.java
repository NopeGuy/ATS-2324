/*
 * This file was automatically generated by EvoSuite
 * Fri May 24 09:55:50 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long((-1L));
      Long long1 = new Long(0L);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("jdEJ@{lwI2}vZ", " Tamanho: ", 0.0, false, 0, 2286, long0, long1, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      Artigo.setContador(1L);
      tshirt0.setTransportadora((-1696L));
      tshirt0.setData_venda(localDate0);
      Tshirt tshirt1 = new Tshirt();
      tshirt0.equals(tshirt1);
      Double double0 = new Double(0.0);
      Long long2 = new Long((-124L));
      Long long3 = new Long(0);
      Sapatilha sapatilha0 = new Sapatilha("^w_QI", "A", double0, false, (-2151), (-2151), long2, long3, 2286, false, "A", (-2151), false, (-1696L));
      sapatilha0.clone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Artigo.getCodigo();
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Artigo.setContador(2L);
      sapatilha1.setTransportadora(0L);
      sapatilha0.equals(sapatilha1);
      sapatilha1.toString();
      Artigo.setCodigo("A");
      LocalDate localDate0 = sapatilha1.getData_venda();
      sapatilha0.preco_atual(localDate0);
      sapatilha1.setNovo(false);
      sapatilha1.setPremium(false);
      Artigo.contador = 0L;
      sapatilha0.getDisponivel();
      sapatilha0.setCor("");
      sapatilha0.setVendedor(1L);
      sapatilha1.toString();
      sapatilha0.getAnoColecao();
      sapatilha0.setEstado_uso(0);
      Double double0 = new Double(250.837291);
      Long long0 = new Long(0L);
      Artigo.getContador();
      Mala mala0 = null;
      try {
        mala0 = new Mala("", "A", double0, false, (-1009), 0, (Long) null, long0, 0, "p_pHQgtX[\"yh=!,", 3052, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = 0.0;
      boolean boolean0 = false;
      int int0 = 0;
      int int1 = 2286;
      Long long0 = new Long((-1L));
      Long long1 = new Long(0L);
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = tshirt0.getData_venda();
      Artigo.setContador(1L);
      long long2 = (-1696L);
      tshirt0.setTransportadora((-1696L));
      tshirt0.setData_venda(localDate0);
      Mala mala0 = new Mala();
      mala0.toString();
      mala0.setDescricao("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      Tshirt tshirt1 = new Tshirt(tshirt0);
      // Undeclared exception!
      try { 
        tshirt0.equals(tshirt1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(0L);
      Mala mala0 = new Mala("Jg=qB7", " Id da transportadora: ", double0, true, 0, 0, long0, long0, 0, "Jg=qB7", 0, true, 0);
      mala0.setMaterial("Jg=qB7");
      mala0.equals(" Id da transportadora: ");
      Artigo.criaCodigo();
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.setTransportadora(0L);
      tshirt1.equals(tshirt0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(0);
      Mala mala0 = new Mala(" Valoriza\u00E7\u00E3o: ", " Padr\u00E3o: ", double0, true, 0, 0, long0, long0, 0, "A1", 0, false, (-1480.95F));
      mala0.clone();
      Artigo.getCodigo();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1L));
      Long long1 = new Long(0L);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("jdEJ@{lwI2}vZ", " Tamanho: ", 0.0, false, 0, 2286, long0, long1, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      tshirt0.setTransportadora((-1696L));
      tshirt0.setData_venda(localDate0);
      tshirt0.toString();
      Mala mala0 = new Mala();
      mala0.toString();
      mala0.setDescricao("Mala:: {Artigo:: { C\u00F3digo de barras: A2 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      Tshirt tshirt1 = new Tshirt();
      tshirt0.equals(tshirt1);
      mala0.isPremium();
      Double double0 = new Double(0.0);
      Long long2 = new Long((-124L));
      Long long3 = new Long(0);
      Sapatilha sapatilha0 = new Sapatilha("^w_QI", "A", double0, false, (-2151), (-2151), long2, long3, 714, false, "T-shirt:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: jdEJ@{lwI2}vZ Marca:  Tamanho:  Pre\u00E7o base: 0.0 Novo: false Estado de uso: 0 N\u00FAmero de utilizadores: 2286 Disponivel: true Id da transportadora: -1696 Id do vendedor: 0 } Tamanho: L Padr\u00E3o: palmeiras}", (-2151), false, (-1696L));
      sapatilha0.setAnoColecao(0);
      mala0.getMarca();
      tshirt0.clone();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Artigo.getCodigo();
      Double double0 = new Double((-3041.4));
      Long long0 = new Long(1);
      Mala mala0 = new Mala("", "", double0, false, 1, 1, long0, long0, 1, " Pre\u00E7o atual: ", 1, false, 100.0F);
      mala0.getPreco_base();
      mala0.getMarca();
      LocalDate localDate0 = mala0.getData_venda();
      mala0.preco_atual(localDate0);
      mala0.setMaterial("v)`");
      mala0.setVendedor(0L);
      mala0.setEstado_uso((-15));
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha("v)`", "A", double0, false, (-15), 1, (Long) 4L, long0, 1, false, "v)`", 1, false, 100.0F);
      Sapatilha sapatilha2 = new Sapatilha(sapatilha1);
      sapatilha1.equals(sapatilha2);
      sapatilha1.isPremium();
      sapatilha1.setCor("v)`");
      sapatilha1.getN_utilizadores();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "[gDw}AIBKTLUNk#z", 0.0, false, (-576), 1, (Long) 5L, (Long) 5L, tamanho0, padrao0);
      tshirt0.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long(0);
      Long long1 = new Long(0);
      Padrao padrao0 = Padrao.liso;
      Tamanho tamanho0 = Tamanho.L;
      Tshirt tshirt0 = new Tshirt("", "", (-1611.171), true, (-3194), (-1933), long0, long0, tamanho0, padrao0);
      tshirt0.clone();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-3023L));
      Mala mala0 = new Mala();
      mala0.getValorizacao();
      mala0.setVendedor((-3023L));
      mala0.setDimensao(45);
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.equals("{");
      tshirt1.setDescricao("{");
      mala0.getAno_colecao();
      tshirt1.setDescricao((String) null);
      Padrao padrao0 = Padrao.liso;
      tshirt0.setPadrao(padrao0);
      tshirt1.getDescricao();
      tshirt1.getIdTransportadora();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Long long1 = new Long(0);
      assertTrue(long1.equals((Object)long0));
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("", "", 1233.77005999944, true, 0, 0, long0, long1, tamanho0, padrao0);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      assertNotNull(tshirt0);
      assertEquals("", tshirt0.getMarca());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(1233.77005999944, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals(2L, Artigo.contador);
      
      tshirt0.setN_utilizadores(0);
      assertTrue(long0.equals((Object)long1));
      assertTrue(long1.equals((Object)long0));
      assertEquals("", tshirt0.getMarca());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getNovo());
      assertEquals(1233.77005999944, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals(2L, Artigo.contador);
      
      tshirt0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setDisponivel(false);
      mala0.setN_utilizadores((-4628));
      Mala mala1 = new Mala(mala0);
      mala1.setEstado_uso(1);
      mala1.setDimensao((-4628));
      Artigo.codigo = "A1";
      mala1.getDescricao();
      Artigo.getContador();
      mala0.getValorizacao();
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      mala1.setNovo(false);
      mala1.preco_atual((LocalDate) null);
      Sapatilha sapatilha2 = sapatilha0.clone();
      sapatilha1.setDescricao("4CZS|Z+Z9t99poXLB%r");
      sapatilha1.setCor("O7_nmR_LjZ~P");
      sapatilha1.setDesconto((-1.0));
      mala0.toString();
      mala1.setAno_colecao(994);
      Tshirt tshirt0 = new Tshirt();
      Artigo.contador = (long) 994;
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.getTamanho();
      sapatilha2.setPremium(false);
      Sapatilha sapatilha3 = new Sapatilha(sapatilha2);
      sapatilha2.equals(sapatilha3);
      mala1.getValorizacao();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(2614.9);
      Long long0 = new Long(1671);
      Long long1 = new Long((-1L));
      Mala mala0 = new Mala("XS>", "XS>", double0, false, 1671, (-1262), long0, long1, 1671, "Sapatilhas:: {", 1135, true, (-1L));
      mala0.equals("XS>");
      Sapatilha sapatilha0 = new Sapatilha("j~|#L", "A", double0, false, 1135, 1135, long1, (Long) 3L, 2219, false, "A", 2, false, 1135);
      mala0.setPreco_base(0.5);
      sapatilha0.getTamanho();
      sapatilha0.setTamanho(2724);
      sapatilha0.getTamanho();
      sapatilha0.toString();
      sapatilha0.getEstado_uso();
      sapatilha0.setDesconto((-944.1056773044));
      sapatilha0.getDescricao();
      sapatilha0.preco_atual((LocalDate) null);
      sapatilha0.getDesconto();
      mala0.getMarca();
      Artigo.criaCodigo();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Artigo.getCodigo();
      Double double0 = new Double((-3041.4));
      Long long0 = new Long(1);
      Mala mala0 = new Mala("", "", double0, false, 1, 1, long0, long0, 1, " Pre\u00E7o atual: ", 1, false, 100.0F);
      mala0.getPreco_base();
      mala0.getMarca();
      LocalDate localDate0 = mala0.getData_venda();
      mala0.preco_atual(localDate0);
      mala0.setMaterial("v)`");
      mala0.setVendedor(0L);
      mala0.setEstado_uso(0);
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Sapatilha sapatilha2 = new Sapatilha(sapatilha1);
      sapatilha1.setN_utilizadores((-1154));
      sapatilha1.equals(sapatilha2);
      sapatilha1.isPremium();
      sapatilha1.setCor("v)`");
      sapatilha1.getN_utilizadores();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "[gDw}AIBKTLUNk#z", 0.0, false, (-576), 1, (Long) 4L, (Long) 4L, tamanho0, padrao0);
      tshirt0.toString();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setPreco_base(2614.9);
      mala0.setPreco_base(0.5);
      mala0.setValorizacao(2L);
      mala0.setPreco_base(3039.83301015098);
      mala1.setAno_colecao((-1791));
      mala0.setMaterial("A");
      LocalDate localDate0 = mala1.getData_venda();
      mala0.mostrar(localDate0);
      mala1.equals(mala0);
      mala0.getMaterial();
      mala0.getMarca();
      mala1.toString();
      mala0.preco_atual(localDate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-4803L));
      Long long1 = new Long(0L);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", (-80.70762), true, (-530), 0, long0, long1, tamanho0, padrao0);
      tshirt0.getPadrao();
      Double double0 = new Double((-4803L));
      Long long2 = new Long((-3332L));
      Sapatilha sapatilha0 = new Sapatilha("", "j0v%Xn5x,Cx&-[DLr", double0, false, (-4177984), (-742), long2, (Long) 3L, 2146662556, true, "\"+][/\u0000^", 1, true, (-3192.24792));
      sapatilha0.setPremium(false);
      LocalDate localDate0 = tshirt0.getData_venda();
      tshirt0.preco_atual(localDate0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = new Long(0L);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("q}g'_I", "", (-1.0), false, 0, 0, long0, long1, tamanho0, padrao0);
      tshirt0.getN_utilizadores();
      Padrao padrao1 = Padrao.riscas;
      tshirt0.setPadrao(padrao1);
      tshirt0.getIdTransportadora();
      Double double0 = new Double(0L);
      Long long2 = new Long(2362L);
      Long long3 = new Long(0L);
      Mala mala0 = new Mala("q}g'_I", "bup[iyj(;XaM/G", double0, false, 0, 1163, long2, long3, 0, "q}g'_I", 253, false, 1163);
      Mala mala1 = new Mala(mala0);
      mala1.getDimensao();
      mala0.toString();
      Artigo.getContador();
      Tamanho tamanho1 = Tamanho.L;
      tshirt0.setTamanho(tamanho1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Artigo.getCodigo();
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Artigo.setContador(2L);
      sapatilha1.setTransportadora(0L);
      sapatilha0.equals(sapatilha1);
      sapatilha1.toString();
      Artigo.setCodigo("L");
      sapatilha1.setNovo(false);
      sapatilha1.setPremium(false);
      sapatilha0.getDisponivel();
      sapatilha0.setCor("");
      sapatilha0.setVendedor(1L);
      sapatilha1.toString();
      sapatilha0.getAnoColecao();
      Artigo.setContador(0L);
      Double double0 = new Double(250.837291);
      Long long0 = new Long(0L);
      Mala mala0 = null;
      try {
        mala0 = new Mala("", "L", double0, true, (-1009), 0, (Long) null, long0, 0, "p_pHQgtX[\"yh=!,", 3052, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      sapatilha0.setData_venda(localDate0);
      Artigo.setCodigo("A");
      LocalDate localDate1 = sapatilha0.getData_venda();
      sapatilha0.getN_utilizadores();
      Mala mala0 = new Mala();
      sapatilha0.setDescricao("A");
      Artigo.contador = (-1156L);
      mala0.setMaterial("A");
      mala0.setCodigo_barras("A");
      sapatilha0.setEstado_uso((-2047));
      mala0.setDimensao((-2047));
      mala0.toString();
      mala0.getIdTransportadora();
      mala0.setData_venda(localDate1);
      sapatilha0.getN_utilizadores();
      mala0.getMaterial();
      sapatilha0.preco_atual((LocalDate) null);
      sapatilha0.setCor("8U|=wZ5ipEK,L");
      sapatilha0.setPremium(true);
      sapatilha0.setDesconto((-1156L));
      Artigo.getContador();
      sapatilha0.getDesconto();
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = null;
      try {
        tshirt0 = new Tshirt("#Xa'Sd|qmE", "A", 0.01, false, (-619), (-4189), (Long) null, (Long) null, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Artigo.getCodigo();
      Double double0 = new Double((-3041.4));
      Long long0 = new Long(1);
      Mala mala0 = new Mala("", "", double0, false, 1, 1, long0, long0, 1, " Pre\u00E7o atual: ", 1, false, 100.0F);
      mala0.getPreco_base();
      mala0.getMarca();
      LocalDate localDate0 = mala0.getData_venda();
      mala0.preco_atual(localDate0);
      mala0.setMaterial("v)`");
      mala0.setVendedor(0L);
      mala0.setEstado_uso(0);
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Sapatilha sapatilha2 = new Sapatilha(sapatilha1);
      sapatilha1.equals(sapatilha2);
      sapatilha1.isPremium();
      sapatilha1.setCor("v)`");
      sapatilha1.getN_utilizadores();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "[gDw}AIBKTLUNk#z", 0.0, false, (-576), 1, (Long) 4L, (Long) 4L, tamanho0, padrao0);
      tshirt0.toString();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long((-2070L));
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("c,$@{IVqSYa:`Q]U", "c,$@{IVqSYa:`Q]U", 0.0, false, 0, 0, long0, long0, tamanho0, padrao0);
      tshirt0.setN_utilizadores(0);
      Artigo.codigo = "OTd'n";
      tshirt0.setCodigo_barras("OTd'n");
      LocalDate localDate0 = tshirt0.getData_venda();
      tshirt0.preco_atual(localDate0);
      tshirt0.setTransportadora(807L);
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.getTamanho();
      Tshirt tshirt1 = tshirt0.clone();
      tshirt0.getEstado_uso();
      Tamanho tamanho1 = Tamanho.S;
      tshirt1.setTamanho(tamanho1);
      sapatilha0.clone();
      sapatilha0.getDesconto();
      sapatilha0.setNovo(false);
      sapatilha0.setAtacadores(true);
      tshirt0.setDescricao((String) null);
      tshirt1.toString();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long(1697L);
      Long long1 = new Long(2);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "", (-633.417104261905), false, 2, (-1), long0, long1, tamanho0, padrao0);
      Artigo.codigo = "`V";
      tshirt0.setPadrao(padrao0);
      tshirt0.setMarca("`V");
      tshirt0.clone();
      Double double0 = new Double(1697L);
      Long long2 = new Long((-1));
      Long long3 = new Long(0L);
      Mala mala0 = new Mala("`V", "j&.S)ZWc6.", double0, false, 0, 0, long2, long3, (-815), "`V", 3041, false, 0.0F);
      mala0.getDimensao();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Artigo.criaCodigo();
      Mala mala0 = new Mala();
      mala0.setMarca("@%!f4m5RV");
      mala0.setTransportadora(30L);
      mala0.setValorizacao(0.0F);
      Long long0 = new Long(3L);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      LocalDate localDate0 = mala0.getData_venda();
      mala0.setData_venda(localDate0);
      Tshirt tshirt0 = new Tshirt("A", "", 4L, true, 2248, 1080, long0, (Long) 4L, tamanho0, padrao0);
      Tamanho tamanho1 = Tamanho.L;
      LocalDate localDate1 = tshirt0.getData_venda();
      tshirt0.setData_venda(localDate1);
      tshirt0.setTamanho(tamanho1);
      tshirt0.setPreco_atual((-60.685F));
      Artigo.setContador(3163L);
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setPremium(true);
      sapatilha0.getCor();
      tshirt0.preco_atual(localDate1);
      sapatilha0.setAtacadores(false);
      tshirt0.getIdTransportadora();
      tshirt0.getPadrao();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(0L);
      Sapatilha sapatilha0 = new Sapatilha("T-shirt:: {", "T-shirt:: {", double0, true, (-2323), (-1795), long0, long0, (-2323), false, "T-shirt:: {", 2563, true, 2916.7847654);
      sapatilha0.getTamanho();
      sapatilha0.getNovo();
      Tshirt tshirt0 = new Tshirt();
      Tamanho tamanho0 = Tamanho.XL;
      LocalDate localDate0 = sapatilha0.getData_venda();
      tshirt0.setData_venda(localDate0);
      tshirt0.setTamanho(tamanho0);
      Artigo.setCodigo(" Data de venda: ");
      tshirt0.getTamanho();
      Mala mala0 = new Mala();
      Artigo.contador = 4L;
      mala0.setPremium(false);
      Artigo.criaCodigo();
      sapatilha0.getTamanho();
      sapatilha0.setData_venda(localDate0);
      Tamanho tamanho1 = Tamanho.L;
      tshirt0.setTamanho(tamanho1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long((-930));
      Long long1 = new Long(0L);
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "", 0.0, true, (-930), 10, long0, long1, tamanho0, padrao0);
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt0.getN_utilizadores();
      Double double0 = new Double(0.0);
      tshirt1.setCodigo_barras("UE)QT)");
      Sapatilha sapatilha0 = new Sapatilha("", "A", double0, false, (-930), 10, (Long) 3L, long0, 10, false, "", 0, false, 0);
      sapatilha0.toString();
      sapatilha0.isAtacadores();
      tshirt1.setPadrao(padrao0);
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setMaterial("A");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long((-378));
      Mala mala0 = new Mala("@CJ)", "@CJ)", double0, true, (-378), (-378), long0, long0, 45, "[eJ)N", 0, true, (-2468.6494F));
      mala0.setN_utilizadores(45);
      mala0.getIdTransportadora();
      Long long1 = new Long(2L);
      Long long2 = new Long(45);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("S", "S", 3L, true, (-3276), (-3276), long1, long2, tamanho0, padrao0);
      Tshirt tshirt1 = new Tshirt(tshirt0);
      Long long3 = new Long(0);
      Tshirt tshirt2 = new Tshirt("[eJ)N", "Z_0h", 4L, true, 0, 0, long1, long3, tamanho0, padrao0);
      tshirt1.equals(tshirt2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-723.49));
      Long long0 = new Long(0L);
      Sapatilha sapatilha0 = new Sapatilha(" N\u00FAmero de utilizadores: ", (String) null, double0, true, 2749, 0, long0, long0, 0, true, (String) null, 2749, false, 2749);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.getIdVendedor();
      Artigo.setCodigo("A");
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("", "A", 193.0, true, 1269, 1269, long0, (Long) 3L, tamanho0, padrao0);
      tshirt0.equals(" Marca: ");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double(606.786935088);
      Long long0 = new Long(0L);
      Long long1 = new Long(1714);
      Sapatilha sapatilha0 = new Sapatilha("(}SQK;#T^7W3", "Ri~1", double0, true, 1714, 1714, long0, long1, 384, false, "", (-974), false, 0L);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.setVendedor((-1L));
      sapatilha1.equals("(}SQK;#T^7W3");
      sapatilha0.setTamanho((-293));
      sapatilha0.clone();
      sapatilha1.setCor("");
      sapatilha1.toString();
      Artigo artigo0 = sapatilha0.clone();
      artigo0.setMarca("");
      artigo0.setNovo(false);
      sapatilha0.getData_venda();
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.equals("");
      tshirt1.setNovo(true);
      tshirt1.getTamanho();
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setDescricao("");
      mala0.setTransportadora(3501L);
      Artigo artigo0 = mala0.clone();
      Artigo.setCodigo("A");
      Artigo.setCodigo("A");
      LocalDate localDate0 = mala0.getData_venda();
      mala0.preco_atual(localDate0);
      LocalDate localDate1 = mala0.getData_venda();
      mala0.mostrar(localDate1);
      artigo0.setNovo(true);
      artigo0.clone();
      artigo0.setDescricao("A");
      mala0.getMaterial();
      artigo0.getDescricao();
      Sapatilha sapatilha0 = new Sapatilha();
      Artigo.codigo = "L";
      sapatilha0.toString();
      Artigo.setCodigo("Sapatilha");
      artigo0.getMarca();
      Mala mala1 = new Mala();
      sapatilha0.equals(mala1);
      artigo0.setCodigo_barras("\"(k~KJmk@CI/zQ/");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      sapatilha0.preco_atual(localDate0);
      Artigo.setCodigo("S");
      sapatilha0.setAnoColecao((-1654));
      sapatilha0.setDisponivel(true);
      Artigo.criaCodigo();
      Artigo artigo0 = sapatilha0.clone();
      sapatilha0.getMarca();
      Tshirt tshirt0 = new Tshirt();
      tshirt0.getPadrao();
      artigo0.getMarca();
      Mala mala0 = null;
      try {
        mala0 = new Mala((Mala) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Double double0 = new Double(0.01);
      Long long0 = new Long(1L);
      Long long1 = new Long(1L);
      Sapatilha sapatilha0 = new Sapatilha("Vsf", "L", double0, false, 45, 45, long0, long1, 45, false, "n5NDy8'NOs_Pf<9}QA", (-2431), true, 45);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Sapatilha sapatilha2 = new Sapatilha(sapatilha1);
      sapatilha0.clone();
      Long long2 = new Long(1L);
      Mala mala0 = new Mala("L", "A", double0, true, 45, 2131, long2, long1, 997, "Artigo:: {", 2131, true, (-2431));
      Mala mala1 = new Mala(mala0);
      mala1.isPremium();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = new Double(620.2068227549);
      Long long0 = new Long((-442L));
      Sapatilha sapatilha0 = new Sapatilha("jZti~A:Q", (String) null, double0, true, 0, 0, long0, long0, 3196, false, "`YuS", 0, true, 481.7792781470212);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      LocalDate localDate0 = sapatilha0.getData_venda();
      sapatilha1.preco_atual(localDate0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      sapatilha0.preco_atual(localDate0);
      sapatilha0.setEstado_uso(2388);
      sapatilha0.setDescricao((String) null);
      sapatilha0.setTamanho(2388);
      sapatilha0.getIdVendedor();
      sapatilha0.setCodigo_barras("Yk~47+-C");
      Long long0 = new Long(2388);
      Long long1 = new Long(2L);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("J=8-*Gy*", "Yk~47+-C", 0.01, false, (-1498), 1701, long0, long1, tamanho0, padrao0);
      tshirt0.preco_atual(localDate0);
      tshirt0.toString();
      sapatilha0.getPreco_base();
      sapatilha0.setDesconto(1.0);
      tshirt0.setPreco_atual((-1498));
      sapatilha0.isPremium();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mala mala0 = new Mala();
      Artigo.setContador((-491L));
      Artigo.contador = (-491L);
      mala0.getN_utilizadores();
      Tshirt tshirt0 = new Tshirt();
      Artigo.codigo = "A";
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.setEstado_uso((-1));
      tshirt1.getTamanho();
      tshirt1.clone();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setAno_colecao(0);
      mala0.setValorizacao(1094.2676F);
      mala0.getValorizacao();
      Long long0 = new Long(2L);
      Long long1 = new Long(0);
      Tamanho tamanho0 = Tamanho.L;
      Mala mala1 = mala0.clone();
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("A", "wM`r19FQ%%8", 0, true, 0, 0, long0, long1, tamanho0, padrao0);
      LocalDate localDate0 = tshirt0.getData_venda();
      tshirt0.setData_venda(localDate0);
      tshirt0.toString();
      tshirt0.getEstado_uso();
      mala1.getData_venda();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Artigo.getCodigo();
      Double double0 = new Double(408.865221);
      Long long0 = new Long(3466);
      Long long1 = new Long(3708L);
      Artigo.codigo = "S";
      Mala mala0 = new Mala();
      Artigo.contador = (-2854L);
      Artigo.criaCodigo();
      mala0.setNovo(true);
      mala0.getDimensao();
      mala0.getCodigo_barras();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double(2475.61025);
      Long long0 = new Long((-1078));
      Long long1 = new Long(2091L);
      Sapatilha sapatilha0 = new Sapatilha("", "0tck=6g)`MGZ{k?", double0, true, (-1207), (-1078), long0, long1, (-1078), false, "", 226, true, (-2714.128));
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.getPreco_base();
      Artigo.getCodigo();
      Artigo.getCodigo();
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setPremium(true);
      sapatilha0.isAtacadores();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.equals("A");
      Double double0 = new Double(2L);
      Long long0 = new Long(0);
      Long long1 = new Long(0);
      Sapatilha sapatilha0 = new Sapatilha("A", "A", double0, true, 0, 0, long0, long1, 0, false, "A", 0, false, 3L);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      Sapatilha sapatilha2 = sapatilha1.clone();
      sapatilha1.setTransportadora(0);
      sapatilha1.setPreco_base(0);
      sapatilha0.getTamanho();
      mala0.setVendedor(3L);
      sapatilha2.getIdTransportadora();
      mala0.getDisponivel();
      mala0.getPreco_base();
      mala0.setMaterial("A");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Long long0 = new Long((-1650L));
      Long long1 = new Long((-1650L));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("", (String) null, (-344.0), false, 2150, 2150, long0, long1, tamanho0, padrao0);
      Artigo.setCodigo("Ks#bd7:N!4)A/");
      tshirt0.equals(long1);
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha0.equals(sapatilha1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      boolean boolean0 = true;
      tshirt1.setDisponivel(true);
      tshirt1.setDisponivel(true);
      tshirt1.getPadrao();
      tshirt0.getEstado_uso();
      Double double0 = new Double((-1));
      int int0 = 0;
      Artigo.codigo = "A";
      LocalDate localDate0 = tshirt1.getData_venda();
      // Undeclared exception!
      try { 
        tshirt0.mostrar(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setEstado_uso(0);
      Double double0 = new Double(0);
      Mala mala0 = new Mala("A", "A", double0, true, 0, 2499, (Long) 3L, (Long) 3L, 0, "A", 1902, true, 0);
      Mala mala1 = new Mala(mala0);
      mala0.setCodigo_barras("A");
      mala0.setCodigo_barras("A");
      mala1.isPremium();
      mala1.setValorizacao((-556.2F));
      sapatilha0.isPremium();
      mala0.getMaterial();
      sapatilha0.setCor("A");
      sapatilha0.setCor("A");
      mala1.setDimensao(0);
      mala0.getIdVendedor();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Artigo.criaCodigo();
      tshirt0.setVendedor(0L);
      tshirt0.getIdTransportadora();
      tshirt0.getDisponivel();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setAno_colecao((-947));
      mala0.clone();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Double double0 = new Double(1063.2433685109);
      Long long0 = new Long(0);
      Mala mala0 = new Mala();
      mala0.setTransportadora((-1L));
      mala0.setMarca("8d_q4MbckY|wP;iGD;2");
      mala0.setValorizacao(0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.setNovo(false);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setDescricao("");
      sapatilha0.setCodigo_barras("");
      sapatilha0.getAnoColecao();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Artigo.getContador();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.toString();
      Double double0 = new Double(585.854628244085);
      Mala mala0 = new Mala("", "A", double0, true, (-2584), (-2584), (Long) 3L, (Long) 3L, (-2584), "3,GmH~m:?xF", (-2584), true, (-2584));
      mala0.setPremium(true);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Artigo.criaCodigo();
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.getTamanho();
      sapatilha0.setDisponivel(false);
      sapatilha0.setVendedor(0);
      sapatilha0.setN_utilizadores(0);
      Double double0 = new Double((-1766.1949));
      Long long0 = new Long(0L);
      Mala mala0 = new Mala("", "A", double0, false, 0, 0, (Long) 4L, long0, 45, "A", 2402, true, 0.0F);
      Mala mala1 = new Mala(mala0);
      LocalDate localDate0 = sapatilha0.getData_venda();
      mala1.preco_atual(localDate0);
      Tshirt tshirt0 = new Tshirt();
      Tamanho tamanho0 = Tamanho.XL;
      tshirt0.setTamanho(tamanho0);
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setDisponivel(true);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.setCodigo_barras(" Premium: ");
      tshirt0.setVendedor((-738L));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Double double0 = new Double((-1590.971));
      Long long0 = new Long(92);
      Long long1 = new Long(92);
      Mala mala0 = new Mala("", " }", double0, true, 92, 92, long0, long1, 92, " Valoriza\u00E7\u00E3o: ", 92, true, 0.0F);
      Mala mala1 = new Mala(mala0);
      mala1.setValorizacao(92);
      Artigo.setCodigo("A");
      mala1.getDisponivel();
      LocalDate localDate0 = mala1.getData_venda();
      mala1.mostrar(localDate0);
      mala1.getAno_colecao();
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.getCor();
      mala0.getCodigo_barras();
      sapatilha0.setMarca("A");
      sapatilha1.setCor("");
      sapatilha1.getDesconto();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Artigo.setContador((-2229L));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setEstado_uso((-734));
      mala0.toString();
      mala0.getN_utilizadores();
      mala0.setPreco_atual((-1));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setCodigo_barras("5@vlNP+NsN`)/dx$@x");
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setPreco_base(2614.9);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setPreco_base(0.5);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala0.setValorizacao(2L);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala1.setAno_colecao((-1791));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setMaterial("A");
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      LocalDate localDate0 = mala1.getData_venda();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(localDate0);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string0 = mala0.mostrar(localDate0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(string0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.5 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material: A Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 2.0} Pre\u00E7o atual: \u221E\u20AC \n", string0);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean0);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string1 = mala0.getMaterial();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("A", string1);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      String string2 = mala0.getMarca();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("Artigo invalido", string2);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      String string3 = mala1.toString();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 2614.9 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: -1791 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string3);
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getDisponivel());
      assertFalse(mala1.getNovo());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = mala0.getData_venda();
      assertNotNull(localDate0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      mala0.setData_venda(localDate0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getN_utilizadores();
      assertEquals((-1), int0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(2L, Artigo.contador);
      
      Sapatilha sapatilha0 = new Sapatilha();
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(3L, Artigo.contador);
      
      sapatilha0.setTamanho((-1775));
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1775), sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(3L, Artigo.contador);
      
      boolean boolean0 = mala0.getNovo();
      assertFalse(boolean0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(3L, Artigo.contador);
      
      double double0 = sapatilha0.getDesconto();
      assertEquals(0.0, double0, 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1775), sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(3L, Artigo.contador);
      
      sapatilha0.setPreco_base(3L);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1775), sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertEquals(3.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(3L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Artigo.setCodigo("G:zemX(E]");
      Sapatilha sapatilha0 = new Sapatilha();
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("G:zemX(E]1", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("G:zemX(E]", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = sapatilha0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("G:zemX(E]1", sapatilha0.getCodigo_barras());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("G:zemX(E]", sapatilha0.getCodigo());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala();
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(3L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala0.equals(mala1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setMarca("A");
      assertFalse(mala0.equals((Object)mala1));
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala0.setPreco_atual(3L);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala();
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala0.equals(mala1);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Mala mala2 = new Mala(mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertNotNull(mala2);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals(3L, mala2.getContador());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertFalse(mala2.isPremium());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getDimensao());
      assertEquals("", mala2.getMaterial());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals("A1", mala2.getCodigo_barras());
      assertFalse(mala2.getNovo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      mala2.setMarca("A");
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals(3L, mala2.getContador());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertFalse(mala2.isPremium());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0, mala2.getDimensao());
      assertEquals("", mala2.getMaterial());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals("A1", mala2.getCodigo_barras());
      assertFalse(mala2.getNovo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala0.setPreco_atual(3L);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(3L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals(3L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setPreco_base(2614.9);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setPreco_base(0.5);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala0.setValorizacao(2L);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala0.setMarca("Qq18a5A`?xRnTu|n");
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.5, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala0.setPreco_base(3040.1734668649215);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      mala1.setAno_colecao((-1791));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setMaterial("A");
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      LocalDate localDate0 = mala1.getData_venda();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(localDate0);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string0 = mala0.mostrar(localDate0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(string0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Qq18a5A`?xRnTu|n Pre\u00E7o base: 3040.1734668649215 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material: A Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 2.0} Pre\u00E7o atual: \u221E\u20AC \n", string0);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(boolean0);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string1 = mala0.getMaterial();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("A", string1);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      Artigo.setContador(2420L);
      String string2 = mala0.getMarca();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("Qq18a5A`?xRnTu|n", string2);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2420L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(2420L, Artigo.contador);
      assertNotSame(mala0, mala1);
      
      String string3 = Artigo.getCodigo();
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals("A", string3);
      
      double double0 = mala0.preco_atual(localDate0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2420L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2420L, mala1.getContador());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2420L, Artigo.contador);
      assertEquals(2420L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string4 = mala1.getMaterial();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(mala1.equals((Object)mala0));
      assertNotNull(string4);
      assertEquals("", string4);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2420L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2420L, mala1.getContador());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2420L, Artigo.contador);
      assertEquals(2420L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala1.isPremium();
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals("A", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(2420L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(3040.1734668649215, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Qq18a5A`?xRnTu|n", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.isPremium());
      assertEquals((-1791), mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("", mala1.getMaterial());
      assertEquals(2420L, mala1.getContador());
      assertEquals(2614.9, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(2420L, Artigo.contador);
      assertEquals(2420L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNotNull(tshirt0);
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNotNull(tshirt1);
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt1.setPreco_base(2L);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(2.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      
      tshirt1.getPadrao();
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(2.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertTrue(mala1.equals((Object)mala0));
      assertNotNull(mala1);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getDisponivel());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getNovo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setCodigo_barras("A");
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getDisponivel());
      assertEquals("A", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = Artigo.getCodigo();
      assertNotNull(string0);
      assertEquals("A", string0);
      
      Sapatilha sapatilha0 = new Sapatilha();
      assertNotNull(sapatilha0);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertNotNull(sapatilha1);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      Artigo.setContador(2L);
      sapatilha1.setTransportadora(0L);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertFalse(boolean0);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      String string1 = sapatilha1.toString();
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 0 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0}", string1);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      Artigo.setCodigo("A");
      sapatilha1.setNovo(false);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      boolean boolean1 = sapatilha0.getDisponivel();
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      
      sapatilha0.setCor("");
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      
      sapatilha0.setVendedor(1L);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(1L, sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      
      String string2 = sapatilha1.toString();
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertFalse(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 0 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0}", string2);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(1L, sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("", sapatilha1.getCor());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      
      int int0 = sapatilha0.getAnoColecao();
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertEquals(0, int0);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(1L, sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      
      Double double0 = new Double(250.837291);
      assertNotNull(double0);
      assertEquals(250.837291, (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      long long1 = Artigo.getContador();
      assertEquals(2L, long1);
      
      Mala mala0 = null;
      try {
        mala0 = new Mala("", "A", double0, false, (-1009), 0, (Long) null, long0, 0, "p_pHQgtX[\"yh=!,", 3052, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A1", string0);
      
      Tshirt tshirt0 = new Tshirt();
      assertNotNull(tshirt0);
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals(3L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNotNull(tshirt1);
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertNull(tshirt1.getTamanho());
      assertEquals(3L, tshirt1.getContador());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      Artigo.setCodigo("A3");
      tshirt1.setN_utilizadores(0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getPadrao());
      assertEquals("A3", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals("A3", tshirt1.getCodigo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertNull(tshirt1.getTamanho());
      assertEquals(3L, tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(0, tshirt1.getN_utilizadores());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertFalse(boolean0);
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getPadrao());
      assertEquals("A3", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals("A3", tshirt1.getCodigo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertNull(tshirt1.getTamanho());
      assertEquals(3L, tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(0, tshirt1.getN_utilizadores());
      assertFalse(tshirt1.getDisponivel());
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Mala mala0 = new Mala("Jg=qB7", " Id da transportadora: ", double0, true, 0, 0, long0, long0, 0, "Jg=qB7", 0, true, 0);
      assertNotNull(mala0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals("Jg=qB7", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Jg=qB7", mala0.getMaterial());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      
      mala0.setMaterial("Jg=qB7");
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals("Jg=qB7", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Jg=qB7", mala0.getMaterial());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(" Id da transportadora: ");
      assertFalse(boolean0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals("Jg=qB7", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Jg=qB7", mala0.getMaterial());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdVendedor());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      
      String string0 = Artigo.criaCodigo();
      assertNotNull(string0);
      assertEquals("A2", string0);
      
      Tshirt tshirt0 = new Tshirt();
      assertNotNull(tshirt0);
      assertEquals("A3", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(4L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(4L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNotNull(tshirt1);
      assertEquals("A3", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(4L, tshirt0.getContador());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertNull(tshirt0.getPadrao());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals("A3", tshirt1.getCodigo_barras());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(4L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals(4L, Artigo.contador);
      assertEquals(4L, Artigo.contador);
      
      // Undeclared exception!
      try { 
        tshirt1.equals(tshirt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long((-3023L));
      assertNotNull(long0);
      assertEquals((-3023L), (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("e", "e", double0, true, (-1883), (-1883), long0, long0, (-1883), true, "e", 512, false, 0.0);
      assertNotNull(sapatilha0);
      assertEquals((-1883), sapatilha0.getN_utilizadores());
      assertEquals("e", sapatilha0.getMarca());
      assertEquals((-3023L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1883), sapatilha0.getEstado_uso());
      assertEquals("e", sapatilha0.getDescricao());
      assertEquals((-1883), sapatilha0.getTamanho());
      assertEquals(512, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3023L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("e", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
      
      sapatilha0.setAnoColecao((-1883));
      assertEquals((-1883), sapatilha0.getN_utilizadores());
      assertEquals("e", sapatilha0.getMarca());
      assertEquals((-3023L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1883), sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1883), sapatilha0.getEstado_uso());
      assertEquals("e", sapatilha0.getDescricao());
      assertEquals((-1883), sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3023L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("e", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(2L, Artigo.contador);
      
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A2", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, Artigo.contador);
      
      float float0 = mala0.getValorizacao();
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A2", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, Artigo.contador);
      
      LocalDate localDate0 = sapatilha0.getData_venda();
      assertNotNull(localDate0);
      assertEquals((-1883), sapatilha0.getN_utilizadores());
      assertEquals("e", sapatilha0.getMarca());
      assertEquals((-3023L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1883), sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1883), sapatilha0.getEstado_uso());
      assertEquals("e", sapatilha0.getDescricao());
      assertEquals((-1883), sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3023L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("e", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getContador());
      assertEquals(3L, Artigo.contador);
      
      mala0.setVendedor((-3023L));
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-3023L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A2", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(3L, Artigo.contador);
      
      Double double1 = new Double(0.0);
      assertEquals((double)double1, (double)double0, 0.01);
      assertNotNull(double1);
      assertEquals(0.0, (double)double1, 0.01);
      
      mala0.setDimensao(45);
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.getDisponivel());
      assertEquals(45, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-3023L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A2", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(3L, Artigo.contador);
      
      Tshirt tshirt0 = new Tshirt();
      assertNotNull(tshirt0);
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("A3", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals(4L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(4L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNotNull(tshirt1);
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("A3", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals(4L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A3", tshirt1.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertNull(tshirt1.getTamanho());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(4L, tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(4L, Artigo.contador);
      assertEquals(4L, Artigo.contador);
      
      boolean boolean0 = tshirt1.equals("e");
      assertFalse(boolean0);
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("A3", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals(4L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A3", tshirt1.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertNull(tshirt1.getTamanho());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(4L, tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(4L, Artigo.contador);
      assertEquals(4L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      
      String string0 = Artigo.getCodigo();
      assertNotNull(string0);
      assertEquals("A", string0);
      
      sapatilha0.setPremium(true);
      assertEquals((double)double0, (double)double1, 0.01);
      assertEquals((-1883), sapatilha0.getN_utilizadores());
      assertEquals("e", sapatilha0.getMarca());
      assertEquals((-3023L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1883), sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1883), sapatilha0.getEstado_uso());
      assertEquals("e", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-1883), sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3023L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("e", sapatilha0.getCor());
      assertEquals(4L, sapatilha0.getContador());
      assertEquals(4L, Artigo.contador);
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals((double)double0, (double)double1, 0.01);
      assertEquals((-1883), int0);
      assertEquals((-1883), sapatilha0.getN_utilizadores());
      assertEquals("e", sapatilha0.getMarca());
      assertEquals((-3023L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1883), sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1883), sapatilha0.getEstado_uso());
      assertEquals("e", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-1883), sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-3023L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getNovo());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("e", sapatilha0.getCor());
      assertEquals(4L, sapatilha0.getContador());
      assertEquals(4L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Long long0 = new Long((-1L));
      assertNotNull(long0);
      assertEquals((-1L), (long)long0);
      
      Long long1 = new Long(0L);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(long1);
      assertEquals(0L, (long)long1);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("jdEJ@{lwI2}vZ", " Tamanho: ", 0.0, false, 0, 2286, long0, long1, tamanho0, padrao0);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertNotNull(tshirt0);
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2286, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("jdEJ@{lwI2}vZ", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(" Tamanho: ", tshirt0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = tshirt0.getData_venda();
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertNotNull(localDate0);
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2286, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("jdEJ@{lwI2}vZ", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(" Tamanho: ", tshirt0.getMarca());
      assertEquals(2L, Artigo.contador);
      
      Artigo.setContador(0L);
      tshirt0.setTransportadora((-1L));
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2286, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("jdEJ@{lwI2}vZ", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(" Tamanho: ", tshirt0.getMarca());
      assertEquals(0L, Artigo.contador);
      
      tshirt0.setData_venda(localDate0);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2286, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("jdEJ@{lwI2}vZ", tshirt0.getDescricao());
      assertEquals(0L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(" Tamanho: ", tshirt0.getMarca());
      assertEquals(0L, Artigo.contador);
      
      Mala mala0 = new Mala();
      assertNotNull(mala0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(1L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1L, Artigo.contador);
      
      String string0 = mala0.toString();
      assertNotNull(string0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(1L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1L, Artigo.contador);
      
      mala0.setDescricao("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(1L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(1L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt();
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertNotNull(tshirt1);
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals(2L, tshirt1.getContador());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertNull(tshirt1.getTamanho());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertFalse(boolean0);
      assertEquals("A", tshirt0.getCodigo());
      assertTrue(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals(2286, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("jdEJ@{lwI2}vZ", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(Padrao.palmeiras, tshirt0.getPadrao());
      assertEquals(0L, tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(" Tamanho: ", tshirt0.getMarca());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals(2L, tshirt1.getContador());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertNull(tshirt1.getTamanho());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      
      boolean boolean1 = mala0.isPremium();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      Long long2 = new Long((-124L));
      assertFalse(long2.equals((Object)long0));
      assertFalse(long2.equals((Object)long1));
      assertNotNull(long2);
      assertEquals((-124L), (long)long2);
      
      Long long3 = new Long(0);
      assertFalse(long3.equals((Object)long2));
      assertFalse(long3.equals((Object)long0));
      assertTrue(long3.equals((Object)long1));
      assertNotNull(long3);
      assertEquals(0L, (long)long3);
      
      String string1 = mala0.getMarca();
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("Artigo invalido", string1);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getDimensao();
      assertEquals(0, int0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A0", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A0 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getDescricao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Artigo.getCodigo();
      Double double0 = new Double((-3041.4));
      Long long0 = new Long(1);
      Mala mala0 = new Mala("", "", double0, false, 1, 1, long0, long0, 1, " Pre\u00E7o atual: ", 1, false, 100.0F);
      mala0.getPreco_base();
      mala0.getMarca();
      LocalDate localDate0 = mala0.getData_venda();
      mala0.setDisponivel(false);
      mala0.preco_atual(localDate0);
      mala0.setMaterial("");
      mala0.setVendedor(0L);
      mala0.setEstado_uso(0);
      assertEquals(0L, mala0.getIdVendedor());
      
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.equals(sapatilha0);
      sapatilha1.isPremium();
      sapatilha1.setCor("A");
      int int0 = sapatilha1.getN_utilizadores();
      assertEquals((-1), int0);
  }
}
